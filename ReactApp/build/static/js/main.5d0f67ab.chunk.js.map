{"version":3,"sources":["contexts/userContext.jsx","images/search.svg","components/movie.jsx","components/movies.jsx","components/sideBar.jsx","components/titleSearchResults.jsx","components/searchBar.jsx","components/topBar.jsx","pages/HomePage.jsx","components/list.jsx","components/addList.jsx","components/lists.jsx","components/movieDetailed.jsx","pages/MoviePage.jsx","pages/LoginPage.jsx","pages/ShowsPage.jsx","pages/SeatsPage.jsx","components/PaymentButton.jsx","pages/BookingPage.jsx","components/ratingDialogue.jsx","pages/ListsPage.jsx","pages/SignupPage.jsx","pages/AdminConsole.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","Movie","props","Card","className","tag","onClick","history","push","movie","movie_id","border","style","width","height","Img","variant","src","this","poster_url","ImgOverlay","count","size","color2","value","avg_rating","edit","Body","Title","movie_title","Text","parseDate","release_date","Component","string","arr","split","number","order_suffix","month","year","charAt","withRouter","Movies","console","log","movies","map","SideBar","state","goToListPage","Object","keys","context","user","length","user_id","localStorage","setItem","Nav","activeKey","onSelect","selectedKey","alert","Item","Link","href","eventKey","disabled","contextType","TitleSearchResults","handleClickOutside","event","wrapperRef","current","contains","target","clickedOutside","createRef","document","addEventListener","removeEventListener","ref","dropdownClasses","results","slice","result","NavDropdown","entryDialogue","id","name","SearchBar","city","title","genres","people","typingTimout","bool","setState","changeName","typingTimeout","clearTimeout","type","setTimeout","timedSearch","searchCities","then","response","json","i","city_id","city_name","searchMovie","fetch","method","body","JSON","stringify","headers","submitHandler","preventDefault","pathname","window","location","reload","clickHandler","sendResult","Form","inline","onSubmit","autocomplete","TextField","fullWidth","label","toUpperCase","onChange","FormControl","placeholder","ProfileRender","useContext","useHistory","useLocation","useState","open","setOpen","anchorRef","useRef","borderWidth","borderRadius","borderStyle","padding","textAlign","prevOpen","profile_url","Avatar","username","Menu","anchorEl","role","undefined","disablePortal","transition","MenuList","MenuItem","logoutUser","Button","TopBar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Divider","HomePage","fetchMovies","Container","fluid","Row","Col","xs","EntryDialogue","setMovies","closeBox","closeDialogue","Modal","show","Header","closeButton","list","list_name","containsId","oldArray","margin","m","filter","Footer","getItem","movie_ids","list_id","Authorization","status","reloadPage","List","clicked","items","item","score","watch_status","toString","ListDialogue","setName","isPrivate","setPrivate","is_private","Group","controlId","Label","Control","e","Check","defaultChecked","checked","AddList","marginTop","Lists","entries","ratings","showWatched","showUnwatched","searchString","sortMode","sort","fetchEntries","match","params","fetchRatings","toggleWatched","toggleUnwatched","toggleSort","mode","_isMounted","FormControlLabel","control","Checkbox","Table","striped","bordered","hover","as","column","sm","marginLeft","icon","faSort","selected_all","entry","toLowerCase","search","a","b","selected_list","display","showEntryDialogue","showRatingDialogue","marginBottom","setSelectedAll","lists","changeSelected","marginRight","faLock","showListDialogue","FullRating","review","newRating","setNewRating","rating","setRating","ratingExists","setRatingExists","setLists","editMode","setEditMode","useEffect","fetchRating","showLists","fetchLists","msg","prevState","DropdownButton","Dropdown","ListGroup","ListGroupItem","Rating","max","precision","emptyIcon","fontSize","newScore","rows","defaultValue","readOnly","PresentInLists","OthersRatings","setRatings","friends","setFriends","onlyFriends","setOnlyFriends","friend","user_id2","includes","Subtitle","MovieDetailed","AdminFlag","AddShowsToggle","movie_name","user_role","block","fetchMovie","Image","thumbnail","overflow","position","genre","capitalizeFirstLetter","genre_name","genre_id","movie_description","person","person_role","person_name","cast_or_crew","parseRoles","person_id","MoviePage","Alert","elevation","useStyles","makeStyles","theme","container","spacing","root","flexGrow","menuButton","toolbar","minHeight","alignItems","paddingTop","paddingBottom","alignSelf","classes","setUsername","password","setPassword","maxWidth","align","Typography","Box","fontWeight","Grid","color","error","jwt","loginUser","to","textDecoration","Snackbar","autoHideDuration","onClose","reason","severity","ShowsPage","shows","fetchShows","text","theatre_mall","date_time","show_id","BookedSeats","SeatsPage","SeatSelect","getElementById","classList","toggle","RemoveSeat","SeatCheck","code","backgroundColor","boxShadow","SortSeats","j","n","parseInt","seat_code","c","d","localeCompare","temp","seats","fetchSeats","index","indexOf","splice","class","seat_status","SeatsBooked","PaymentButton","BookingPage","BSeats","paymentDeets","Book","RatingDialogue","setMovie","hasSelectedMovie","setHasSelectedMovie","getMovie","MovieDisplay","showList","ListsPage","showEntry","showRating","refreshEntries","closeListDialogue","closeEntryDialogue","closeRatingDialogue","reloadEntries","reloadLists","componentDidMount","errorAlert","setErrorAlert","email","setEmail","cityId","setCityId","cityName","setCityName","hasSelectedCity","setHasSelectedCity","getCity","CityDisplay","IconButton","aria-label","test","theatre","setTheatre","ticketPrice","setTicketPrice","dateTime","setDateTime","textField","InputLabelProps","shrink","dateTimeParts","newDateTime","theatre_id","ticket_price","Routing","exact","path","render","App","logout","clear","login","logged_in","details","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","ReportWebVitals"],"mappings":"+UAIeA,GCJA,I,ODEKC,IAAMC,iB,iDEMpBC,E,kDAEJ,WAAYC,GAAQ,uCACZA,G,0CAGR,WAAU,IAAD,OACP,OACE,eAACC,EAAA,EAAD,CACEC,UAAU,QACVC,IAAI,IACJC,QAAS,WACP,EAAKJ,MAAMK,QAAQC,KAAnB,kBAAmC,EAAKN,MAAMO,MAAMC,YAEtDC,OAAO,OACPC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAPnC,UASE,cAACX,EAAA,EAAKY,IAAN,CACEC,QAAQ,MACRC,IAAKC,KAAKhB,MAAMO,MAAMU,WACtBP,MAAO,CAAEC,MAAO,QAASC,OAAQ,2BAEnC,cAACX,EAAA,EAAKiB,WAAN,UACE,cAAC,IAAD,CACEhB,UAAU,mBACViB,MAAO,EACPC,KAAM,GACNC,OAAQ,UACRC,MAAqC,GAA9BN,KAAKhB,MAAMO,MAAMgB,WACxBC,MAAM,MAGV,eAACvB,EAAA,EAAKwB,KAAN,WACE,cAACxB,EAAA,EAAKyB,MAAN,UAAaV,KAAKhB,MAAMO,MAAMoB,cAC9B,cAAC1B,EAAA,EAAK2B,KAAN,UAAYC,EAAUb,KAAKhB,MAAMO,MAAMuB,0B,GAlC7BC,aAyCpB,SAASF,EAAUG,GACjB,IAAIC,EAAMD,EAAOE,MAAM,KACnBC,EAASF,EAAI,GACbG,EAAe,GACfC,EAAQJ,EAAI,GACZK,EAAOL,EAAI,GAMf,OAL6BG,EAAL,KAApBD,EAAOI,OAAO,GAA0B,KACf,KAApBJ,EAAOI,OAAO,GAA0B,KACpB,KAApBJ,EAAOI,OAAO,GAA0B,KAC7B,KACI,KAApBJ,EAAOI,OAAO,KAAWJ,EAASA,EAAOI,OAAO,IAC7CJ,EAASC,EAAe,IAAMC,EAAQ,IAAMC,EAOtCE,kBAAWzC,GC/DpB0C,E,kDACJ,WAAYzC,GAAQ,IAAD,6BACjB,cAAMA,GACN0C,QAAQC,IAAI3C,GAFK,E,0CAKnB,WACE,OACE,qBAAKE,UAAU,qEAAf,SACGc,KAAKhB,MAAM4C,OAAOC,KAAI,SAACtC,GAAD,OACrB,qBAEEL,UAAU,+CAFZ,SAIE,cAAC,EAAD,CAAOK,MAAOA,KAHTA,EAAMC,mB,GAXFuB,aAsBNS,cAAWC,G,SCrBpBK,E,4MAEJC,MAAQ,G,EAERC,aAAe,WACRC,OAAOC,KAAK,EAAKC,QAAQC,MAAMC,OAG7B,EAAKrD,MAAMK,QAAQC,KAAnB,iBAAkC,EAAK6C,QAAQC,KAAKE,QAApD,YAFLC,aAAaC,QAAQ,UAAW,KAChC,EAAKxD,MAAMK,QAAQC,KAAK,Y,4CAI5B,WACE,OACE,mCACE,eAACmD,EAAA,EAAD,CACEvD,UAAU,+CACVwD,UAAU,QACVC,SAAU,SAACC,GAAD,OAAiBC,MAAM,YAAD,OAAaD,KAH/C,UAKI,qBAAK1D,UAAU,mBACf,cAACuD,EAAA,EAAIK,KAAL,UACA,cAACL,EAAA,EAAIM,KAAL,CAAU3D,QAASY,KAAKgC,aAAxB,qBAEJ,cAACS,EAAA,EAAIK,KAAL,UACI,cAACL,EAAA,EAAIM,KAAL,CAAUC,KAAK,QAAf,wBAEJ,cAACP,EAAA,EAAIK,KAAL,UACI,cAACL,EAAA,EAAIM,KAAL,CAAUE,SAAS,SAAnB,4BAEJ,cAACR,EAAA,EAAIK,KAAL,UACI,cAACL,EAAA,EAAIM,KAAL,CAAUE,SAAS,SAAnB,sBAEJ,cAACR,EAAA,EAAIK,KAAL,UACI,cAACL,EAAA,EAAIM,KAAL,CAAUE,SAAS,SAASC,UAAQ,EAApC,oC,GAjCUnC,aAAhBe,EACGqB,YAAcvE,EA0CR4C,kBAAWM,G,2GC1CpBsB,E,kDACJ,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IAgBRqE,mBAAqB,SAACC,GAChB,EAAKC,aAAe,EAAKA,WAAWC,QAAQC,SAASH,EAAMI,SAC7D,EAAK1E,MAAM2E,gBAAe,IAhB5B,EAAKJ,WAAa1E,IAAM+E,YAHP,E,qDAMnB,WACEC,SAASC,iBAAiB,YAAa9D,KAAKqD,sB,kCAG9C,WACEQ,SAASE,oBAAoB,YAAa/D,KAAKqD,sB,oBAYjD,WAAU,IAAD,OACP,OACE,qBAAKW,IAAKhE,KAAKuD,WAAYrE,UAAWc,KAAKhB,MAAMiF,gBAAjD,SACGjE,KAAKhB,MAAMkF,QAAQC,MAAM,EAAG,IAAItC,KAAI,SAACuC,GAAD,OACnC,cAACC,EAAA,EAAYvB,KAAb,CAEE1D,QAAS,WACH,EAAKJ,MAAMsF,cACb,EAAKtF,MAAMI,QAAQgF,EAAOG,GAAIH,EAAOI,MAErC,EAAKxF,MAAMK,QAAQC,KAAnB,kBAAmC8E,EAAOG,MANhD,SAUGH,EAAOI,MATHJ,EAAOG,a,GA7BSxD,aA8ClBS,cAAW4B,GCpCpBqB,E,4MACJ1C,MAAQ,CACN2C,KAAM,GACNnF,MAAO,CAAEoF,MAAO,GAAIC,OAAQ,GAAIC,OAAQ,IACxCX,QAAS,GACTY,aAAc,EACdb,gBAAiB,iB,EAGnBN,eAAiB,SAACoB,GACZA,GAAM,EAAKC,SAAS,CAAEf,gBAAiB,mB,EAG7CgB,WAAa,SAAC3B,GACR,EAAKvB,MAAMmD,eACbC,aAAa,EAAKpD,MAAMmD,eAEtB,EAAKlG,MAAMoG,MAA2B,QAAnB,EAAKpG,MAAMoG,KAChC,EAAKJ,SAAS,CAAEN,KAAMpB,EAAMI,OAAOpD,QAEnC,EAAK0E,SAAS,CACZzF,MAAO,CACLoF,MAAM,GAAD,OAAKrB,EAAMI,OAAOpD,OACvBsE,OAAQ,EAAK7C,MAAMxC,MAAMqF,OACzBC,OAAQ,EAAK9C,MAAMxC,MAAMsF,UAI3BvB,EAAMI,OAAOpD,QACf,EAAKyB,MAAMmD,cAAgBG,WAAW,EAAKC,YAAa,O,EAI5DA,YAAc,WACW,QAAnB,EAAKtG,MAAMoG,KACb,EAAKG,aAAa,EAAKxD,MAAM2C,MAC1Bc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,IAAIxB,EAAU,GAOd,OANAwB,EAAK7D,KACH,SAAC6C,EAAMiB,GAAP,OACGzB,EAAQyB,GAAK,CAAEpB,GAAIG,EAAKkB,QAASpB,KAAME,EAAKmB,cAEjDnE,QAAQC,IAAIuC,GACZ,EAAKc,SAAS,CAAEd,QAASA,IAClBwB,KAERF,MAAK,SAACtB,GACDA,EAAQ7B,OACV,EAAK2C,SAAS,CACZf,gBAAiB,uBAGnB,EAAKe,SAAS,CACZf,gBAAiB,qBAIzB,EAAK6B,YAAY,EAAK/D,MAAMxC,OACzBiG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,IAAIxB,EAAU,GAOd,OANAwB,EAAK7D,KACH,SAACtC,EAAOoG,GAAR,OACGzB,EAAQyB,GAAK,CAAEpB,GAAIhF,EAAMC,SAAUgF,KAAMjF,EAAMoB,gBAEpDe,QAAQC,IAAIuC,GACZ,EAAKc,SAAS,CAAEd,QAASA,IAClBwB,KAERF,MAAK,SAACtB,GACDA,EAAQ7B,OACV,EAAK2C,SAAS,CACZf,gBAAiB,uBAGnB,EAAKe,SAAS,CACZf,gBAAiB,sB,EAM7B6B,YAAc,SAACvG,GACb,OAAOwG,MAAM,0CAA2C,CACtDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU5G,GACrB6G,QAAS,CACP,eAAgB,sC,EAKtBb,aAAe,SAACb,GACd,OAAOqB,MAAM,0CAA2C,CACtDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBzB,KAAMA,IAER0B,QAAS,CACP,eAAgB,sC,EAKtBC,cAAgB,SAAC/C,GACfA,EAAMgD,iBACD,EAAKtH,MAAMsF,eACd,EAAKwB,YAAY,EAAK/D,MAAMxC,OACzBiG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,EAAK1G,MAAMK,QAAQC,KAAK,CACtBiH,SAAU,IACVxE,MAAO,CAAEH,OAAQ8D,QAGpBF,MAAK,WACJgB,OAAOC,SAASC,QAAO,O,EAK/BC,aAAe,SAACnH,EAAUmB,GACxB,EAAKgD,gBAAe,GACpB,EAAK3E,MAAM4H,WAAWpH,EAAUmB,I,4CAGlC,WACE,OACE,mCACGX,KAAKhB,MAAMsF,cACV,eAACuC,EAAA,EAAD,CACEC,QAAM,EACNC,SAAU/G,KAAKqG,cACfnH,UAAU,oBACV8H,aAAa,MAJf,UAME,cAACC,EAAA,EAAD,CACMC,WAAS,EACTC,MAASnH,KAAKhB,MAAMoG,KAAOpF,KAAKhB,MAAMoG,KAAK7D,OAAO,GAAG6F,cAAgBpH,KAAKhB,MAAMoG,KAAKjB,MAAM,GAAK,wBAChGK,KAAK,WACLpE,KAAK,QACLN,QAAQ,WACRuH,SAAUrH,KAAKiF,aAErB,cAAC,EAAD,CACEG,KAAMpF,KAAKhB,MAAMoG,KACjBhG,QAASY,KAAK2G,aACdrC,cAAetE,KAAKhB,MAAMsF,cAC1BL,gBAAiBjE,KAAK+B,MAAMkC,gBAC5BC,QAASlE,KAAK+B,MAAMmC,QACpBP,eAAgB3D,KAAK2D,oBAIzB,eAACkD,EAAA,EAAD,CACEC,QAAM,EACNC,SAAU/G,KAAKqG,cACfnH,UAAU,oBAHZ,UAKE,cAACoI,EAAA,EAAD,CACElC,KAAK,OACLmC,YAAY,SACZrI,UAAU,UACVmI,SAAUrH,KAAKiF,aAEjB,cAAC,IAAD,CAAQnF,QAAQ,kBAAkBsF,KAAK,SAAvC,oBAGA,cAAC,EAAD,CACEhG,QAASY,KAAK2G,aACdrC,cAAetE,KAAKhB,MAAMsF,cAC1BL,gBAAiBjE,KAAK+B,MAAMkC,gBAC5BC,QAASlE,KAAK+B,MAAMmC,QACpBP,eAAgB3D,KAAK2D,0B,GA9KX5C,aAuLTS,cAAWiD,GCrKpB+C,EAAgB,WACpB,IAAIpF,EAAOqF,qBAAW7I,GAClBS,EAAUqI,cACVjB,EAAWkB,cAHW,EAIF9I,IAAM+I,UAAS,GAJb,mBAInBC,EAJmB,KAIbC,EAJa,KAKpBC,EAAYlJ,IAAMmJ,OAAO,MAc/B,OADAtG,QAAQC,IAAIS,GACPH,OAAOC,KAAKE,EAAKA,MAAMC,OAexB,sBACE3C,MAAO,CACLD,OAAQ,OACRwI,YAAa,MACbC,aAAc,OACdC,YAAa,QACbC,QAAS,MACTC,UAAW,UAEbjJ,QApCe,WACnB0I,GAAQ,SAACQ,GAAD,OAAeA,MA0BrB,UAWGlG,EAAKA,KAAKmG,YACT,cAACC,EAAA,EAAD,CAAQzI,IAAKqC,EAAKA,KAAKmG,YAAavE,IAAK+D,IAEzC,cAACS,EAAA,EAAD,CAAQxE,IAAK+D,EAAb,SAAyB3F,EAAKA,KAAKqG,SAASlH,OAAO,GAAG6F,gBAExD,cAACsB,EAAA,EAAD,CACEb,KAAMA,EACNc,SAAUZ,EAAUvE,QACpBoF,UAAMC,EACNC,eAAa,EACbC,YAAU,EALZ,SAOI,cAACC,EAAA,EAAD,CAAUzE,GAAG,iBAAb,SACE,cAAC0E,EAAA,EAAD,CAAU7J,QAAS,kBAAIgD,EAAK8G,cAA5B,2BArCR,8BACE,cAACC,EAAA,EAAD,CACE/J,QAAS,WACPmD,aAAaC,QAAQ,UAAWiE,EAASF,UACzClH,EAAQC,KAAK,WAHjB,uBAkDF8J,E,4JACJ,WAAU,IAAD,OACP,OACE,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACE,cAACF,EAAA,EAAOG,MAAR,yBACA,cAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBpF,GAAG,mBAApB,UACE,eAAC9B,EAAA,EAAD,CAAKvD,UAAU,UAAf,UACE,cAACuD,EAAA,EAAIM,KAAL,CACE3D,QAAS,WACP,EAAKJ,MAAMK,QAAQC,KAAK,MAF5B,kBAOA,cAACmD,EAAA,EAAIM,KAAL,CAAUC,KAAK,QAAf,kBACA,cAAC,EAAD,CAAWsB,eAAe,IAC1B,eAACD,EAAA,EAAD,CAAaM,MAAM,WAAWJ,GAAG,qBAAjC,UACE,cAACF,EAAA,EAAYvB,KAAb,CAAkBE,KAAK,cAAvB,oBACA,cAACqB,EAAA,EAAYvB,KAAb,CAAkBE,KAAK,cAAvB,4BAGA,cAACqB,EAAA,EAAYvB,KAAb,CAAkBE,KAAK,cAAvB,uBACA,cAACqB,EAAA,EAAYuF,QAAb,IACA,cAACvF,EAAA,EAAYvB,KAAb,CAAkBE,KAAK,cAAvB,kCAKJ,cAAC,EAAD,c,GA7BWjC,aAoCNS,cAAW4H,G,2BCpIpBS,E,kDAOJ,WAAY7K,GAAQ,IAAD,8BACjB,cAAMA,IALR+C,MAAQ,CACNH,OAAQ,IAGS,EASnBkI,YAAc,WACZ/D,MAAM,oCAAqC,CACzCC,OAAQ,MACRI,QAAS,CACP,eAAgB,qCAGjBZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,EAAKV,SAAS,CAAEpD,OAAQ8D,IACxBhE,QAAQC,IAAI,EAAKI,MAAMH,YAjB3BF,QAAQC,IAAR,gBACI3C,EAAMyH,SAAS1E,OACjB,EAAKA,MAAQ,CAAEH,OAAQ5C,EAAMyH,SAAS1E,MAAMH,QAC5CF,QAAQC,IAAI,EAAKI,QACZ,EAAK+H,cANK,E,0CAuBnB,WACE,OACE,mCACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAAC,EAAD,IACA,uBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAG5F,GAAG,kBAAf,SACE,cAAC,EAAD,MAEF,cAAC2F,EAAA,EAAD,CAAKC,GAAI,GAAI5F,GAAG,uBAAhB,SACE,cAACwF,EAAA,EAAD,UACE,cAAC,EAAD,CAAQnI,OAAQ5B,KAAK+B,MAAMH,yB,GA1CpBb,aAAjB8I,EACG1G,YAAcvE,EAuIR4C,kBAAWqI,G,4HC7IpBO,GAAgB,SAACpL,GACrB,IAAIK,EAAUqI,cADiB,EAELE,mBAAS,IAFJ,gCAGPA,mBAAS,KAHF,gCAIHA,mBAAS,KAJN,mBAIxBhG,EAJwB,KAIhByI,EAJgB,KA6C/B,IAYMC,EAAW,WACfD,EAAU,IACVrL,EAAMuL,iBAGR,OACE,eAACC,GAAA,EAAD,CAAOC,KAAMzL,EAAMyL,KAAnB,UACE,cAACD,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACH,GAAA,EAAM9J,MAAP,iCAAiC1B,EAAM4L,KAAKC,UAA5C,SAEF,eAACL,GAAA,EAAM/J,KAAP,WACE,cAAC,EAAD,CAAW6D,eAAe,EAAMsC,WAvBrB,SAACpH,EAAUmB,GAC1Be,QAAQC,IAAInC,GACZkC,QAAQC,IAAIhB,GAZd,SAAoB4D,EAAIqG,GACtB,IAAIjF,EACJ,IAAKA,EAAI,EAAGA,EAAIiF,EAAKvI,OAAQsD,IAC3B,GAAIiF,EAAKjF,GAAGnG,WAAa+E,EACvB,OAAO,EAIX,OAAO,EAKFuG,CAAWtL,EAAUoC,IACxByI,GAAU,SAACU,GAAD,6BACLA,GADK,CAER,CAAEvL,SAAUA,EAAUmB,YAAaA,WAkBlCiB,EAAOC,KAAI,SAACtC,GAAD,OACV,cAAC,IAAD,CACEG,MAAO,CAAEsL,OAAQ,QAEjB5L,QAAS,kBAnBE6L,EAmBgB1L,OAlBnC8K,EAAUzI,EAAOsJ,QAAO,SAAC3L,GAAD,OAAWA,GAAS0L,MAD1B,IAACA,GAgBb,SAKG1L,EAAMoB,aAHFpB,EAAMC,gBAOjB,eAACgL,GAAA,EAAMW,OAAP,WACE,cAAC,IAAD,CAAQrL,QAAQ,YAAYV,QAASkL,EAArC,mBAGA,cAAC,IAAD,CAAQxK,QAAQ,UAAUV,QA7Eb,SAACkE,GAGlB,GAFAA,EAAMgD,iBACN5E,QAAQC,IAAIY,aAAa6I,QAAQ,QAC7BxJ,EAAOS,OAAQ,CACjB,IAAMgJ,EAAYzJ,EAAOC,KAAI,SAACtC,GAAD,OAAWA,EAAMC,YAC9CkC,QAAQC,IAAI0J,GACZtF,MAAM,mCAAD,OAAoC/G,EAAM4L,KAAKU,SAAW,CAC7DtF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBkF,cAEFjF,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAG/C5F,MAAK,SAACC,GACkB,KAAnBA,EAAS+F,SACXjJ,aAAaC,QAAQ,UAArB,UAAmCnD,EAAQoH,SAASF,WACpDlH,EAAQC,KAAK,cAGhBkG,MAAK,WACJ8E,IACAtL,EAAMyM,kBAqDR,+BAQFC,G,kDAGJ,WAAY1M,GAAQ,IAAD,8BACjB,cAAMA,IAHR+C,MAAQ,GAEW,EAKnB4J,QAAU,SAACpH,GACT7C,QAAQC,IAAI,WACZ,EAAK3C,MAAMK,QAAQC,KAAnB,kBAAmCiF,KALnC7C,QAAQC,IAAI3C,GAFK,E,0CASnB,WAAU,IAAD,OACP,OACE,gCACGgB,KAAKhB,MAAM4M,MAAM/J,KAAI,SAACgK,EAAMlG,GAAP,OACpB,+BACE,6BAAKA,EAAI,IACT,oBAAIvG,QAAS,kBAAM,EAAKuM,QAAQE,EAAKrM,WAArC,SACGqM,EAAKlL,cAER,6BAAKkL,EAAKC,MAAQD,EAAKC,MAAQ,OAC/B,6BAAKD,EAAKE,aAAe,UAAY,oBAN9BF,EAAKrM,SAASwM,qB,GAhBdjL,aA+BJS,eAAWkK,I,8BC1HpBO,GAAe,SAACjN,GACpB,IAAIK,EAAUqI,cADgB,EAENE,mBAAS,IAFH,mBAEvBpD,EAFuB,KAEjB0H,EAFiB,OAGEtE,oBAAS,GAHX,mBAGvBuE,EAHuB,KAGZC,EAHY,KAIxBhK,EAAOqF,qBAAW7I,GA8BxB,OACE,eAAC4L,GAAA,EAAD,CAAOC,KAAMzL,EAAMyL,KAAnB,UACE,cAACD,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,GAAA,EAAM9J,MAAP,yBAEF,cAAC8J,GAAA,EAAM/J,KAAP,UACE,eAACoG,EAAA,EAAD,CAAME,SAlCO,SAACzD,GAClBA,EAAMgD,iBACN5E,QAAQC,IAAI6C,GACZ9C,QAAQC,IAAIwK,GACZzK,QAAQC,IAAIY,aAAa6I,QAAQ,QACjCrF,MAAM,mCAAoC,CACxCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB0E,UAAWrG,EACX6H,WAAYF,IAEd/F,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAG/C5F,MAAK,SAACC,GACL/D,QAAQC,IAAI8D,GACW,KAAnBA,EAAS+F,SACX9J,QAAQC,IAAIS,GACZG,aAAaC,QAAQ,UAArB,UAAmCnD,EAAQoH,SAASF,WACpDlH,EAAQC,KAAK,cAGhBkG,MAAK,WACJxG,EAAMyM,iBASN,UACE,eAAC5E,EAAA,EAAKyF,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAAC1F,EAAA,EAAK2F,MAAN,uBACA,cAAC3F,EAAA,EAAK4F,QAAN,CACErH,KAAK,OACLmC,YAAY,kBACZF,SAAU,SAACqF,GAAD,OAAOR,EAAQQ,EAAEhJ,OAAOpD,aAItC,cAACuG,EAAA,EAAKyF,MAAN,CAAYC,UAAU,oBAAtB,SACE,cAAC1F,EAAA,EAAK8F,MAAN,CACEvH,KAAK,WACL+B,MAAM,oBACNyF,eAAgBT,EAChB9E,SAAU,SAACqF,GAAD,OAAON,EAAWM,EAAEhJ,OAAOmJ,cAGzC,cAAC,IAAD,CAAQ/M,QAAQ,UAAUsF,KAAK,SAA/B,yBAKJ,eAACoF,GAAA,EAAMW,OAAP,WACE,cAAC,IAAD,CAAQrL,QAAQ,YAAYV,QAASJ,EAAMuL,cAA3C,mBAGA,cAAC,IAAD,CAAQzK,QAAQ,UAAhB,iCAMFgN,G,4MACJ/K,MAAQ,CAAE0I,MAAM,G,4CAChB,WACE,OACE,cAAC,IAAD,CAAQ/K,MAAO,CAAEqN,UAAW,QAAU3N,QAASY,KAAKhB,MAAMI,QAA1D,0B,GAJgB2B,aAWPS,eAAWsL,IC/EpBE,G,kDAYJ,WAAYhO,EAAOmD,GAAU,IAAD,8BAC1B,cAAMnD,EAAOmD,IAXfJ,MAAQ,CACNkL,QAAS,GACTC,QAAS,GACTC,aAAa,EACbC,eAAe,EACfC,aAAc,GACdC,SAAU,EACVC,KAAM,GAGoB,EA6C5BC,aAAe,WACb,OAAOzH,MAAM,mCAAD,OACyB,EAAK/G,MAAMyO,MAAMC,OAAOnJ,GADjD,YAEV,CACEyB,OAAQ,MACRI,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,YApD1B,EAyD5BuC,aAAe,WACb,OAAO5H,MAAM,mCAAD,OACyB,EAAK/G,MAAMyO,MAAMC,OAAOnJ,GADjD,YAEV,CACEyB,OAAQ,MACRI,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,YAhE1B,EAsE5BwC,cAAgB,WACdlM,QAAQC,IAAI,WACZ,EAAKI,MAAMoL,YACP,EAAKnI,SAAS,CAAEmI,aAAa,IAC7B,EAAKnI,SAAS,CAAEmI,aAAa,KA1EP,EA4E5BU,gBAAkB,WAChBnM,QAAQC,IAAI,aACZ,EAAKI,MAAMqL,cACP,EAAKpI,SAAS,CAAEoI,eAAe,IAC/B,EAAKpI,SAAS,CAAEoI,eAAe,KAhFT,EAkF5BU,WAAa,SAACC,GACZ,EAAKhM,MAAMuL,UAAYS,GACC,GAApB,EAAKhM,MAAMwL,KACT,EAAKvI,SAAS,CAAEuI,KAAM,IACtB,EAAKvI,SAAS,CAAEuI,MAAO,IACzB,EAAKvI,SAAS,CAAEsI,SAAUS,KArF9BrM,QAAQC,IAAI,EAAK3C,OAFS,E,qDAK5B,WAAqB,IAAD,OAClBgB,KAAKgO,YAAa,EAElBhO,KAAKwN,eACFhI,MAAK,SAACC,GAOL,OANA/D,QAAQC,IAAI8D,GACW,KAAnBA,EAAS+F,SACX9J,QAAQC,IAAI,EAAKQ,QAAQC,MACzBG,aAAaC,QAAQ,UAArB,UAAmC,EAAKxD,MAAMyH,SAASF,WACvD,EAAKvH,MAAMK,QAAQC,KAAK,WAEnBmG,EAASC,UAEjBF,MAAK,SAACE,GACLhE,QAAQC,IAAI+D,GACR,EAAKsI,YACP,EAAKhJ,SAAS,CAAEiI,QAASvH,OAG/B1F,KAAK2N,eACFnI,MAAK,SAACC,GAOL,OANA/D,QAAQC,IAAI8D,GACW,KAAnBA,EAAS+F,SACX9J,QAAQC,IAAI,EAAKQ,QAAQC,MACzBG,aAAaC,QAAQ,UAArB,UAAmC,EAAKxD,MAAMyH,SAASF,WACvD,EAAKvH,MAAMK,QAAQC,KAAK,WAEnBmG,EAASC,UAEjBF,MAAK,SAACE,GACLhE,QAAQC,IAAI+D,GACR,EAAKsI,YACP,EAAKhJ,SAAS,CAAEkI,QAASxH,S,kCAIjC,WACE1F,KAAKgO,YAAa,I,oBAgDpB,WAAU,IAAD,OAEP,OADAtM,QAAQC,IAAI3B,KAAKhB,OAEf,qCACE,eAACiL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC+D,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEtB,QAAS7M,KAAK+B,MAAMoL,YACpB9F,SAAUrH,KAAK4N,cACfpJ,KAAK,YAGT2C,MAAM,cAGV,cAAC+C,EAAA,EAAD,UACE,cAAC+D,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEtB,QAAS7M,KAAK+B,MAAMqL,cACpB/F,SAAUrH,KAAK6N,gBACfrJ,KAAK,cAGT2C,MAAM,uBAIZ,eAAC8C,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,eAACiE,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,mCACA,6BACE,eAAC1H,EAAA,EAAKyF,MAAN,CAAYkC,GAAIvE,IAAKsC,UAAU,sBAA/B,UACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYiC,QAAM,EAACC,GAAI,EAAvB,mBAGA,cAACxE,EAAA,EAAD,CAAKwE,GAAI,GAAT,SACE,cAACpH,EAAA,EAAD,CACEhH,MAAON,KAAK+B,MAAMsL,aAClBjI,KAAK,OACLmC,YAAY,YACZF,SAAU,SAAC/D,GAAD,OACR,EAAK0B,SAAS,CAAEqI,aAAc/J,EAAMI,OAAOpD,kBAMrD,uCAEE,cAAC,KAAD,CACEZ,MAAO,CAAEiP,WAAY,OACrBC,KAAMC,KACNzP,QAAS,kBAAM,EAAK0O,WAAW,SAGnC,8CAEE,cAAC,KAAD,CACEpO,MAAO,CAAEiP,WAAY,OACrBC,KAAMC,KACNzP,QAAS,kBAAM,EAAK0O,WAAW,cAKvC,cAAC,GAAD,CAEElC,MACG5L,KAAKhB,MAAM8P,aAgCR9O,KAAK+B,MAAMmL,QACRhC,QAAO,SAAC6D,GACP,SAAI,EAAKhN,MAAMoL,aAAqC,GAAtB4B,EAAMhD,kBAGlC,EAAKhK,MAAMqL,eACW,GAAtB2B,EAAMhD,iBAKTb,QACC,SAAC6D,GAAD,OACEA,EAAMpO,YACHqO,cACAC,OAAO,EAAKlN,MAAMsL,aAAa2B,gBAClC,KAEHzB,MAAK,SAAC2B,EAAGC,GACR,OAA2B,GAAvB,EAAKpN,MAAMuL,UACL4B,EAAEpD,MAAQqD,EAAErD,OAAS,EAAK/J,MAAMwL,KACf,GAAvB,EAAKxL,MAAMuL,UAEV4B,EAAEnD,aAAeoD,EAAEpD,cACpB,EAAKhK,MAAMwL,UAHf,KApDJvN,KAAK+B,MAAMkL,QACR/B,QACC,SAAC6D,GAAD,OACEA,EAAMzD,SAAW,EAAKtM,MAAMoQ,cAAc9D,WAE7CJ,QAAO,SAAC6D,GACP,SAAI,EAAKhN,MAAMoL,aAAqC,GAAtB4B,EAAMhD,kBAGlC,EAAKhK,MAAMqL,eACW,GAAtB2B,EAAMhD,iBAKTb,QACC,SAAC6D,GAAD,OACEA,EAAMpO,YACHqO,cACAC,OAAO,EAAKlN,MAAMsL,aAAa2B,gBAClC,KAEHzB,MAAK,SAAC2B,EAAGC,GACR,OAA2B,GAAvB,EAAKpN,MAAMuL,UACL4B,EAAEpD,MAAQqD,EAAErD,OAAS,EAAK/J,MAAMwL,KACf,GAAvB,EAAKxL,MAAMuL,UAEV4B,EAAEnD,aAAeoD,EAAEpD,cACpB,EAAKhK,MAAMwL,UAHf,MA5BLvN,KAAK+B,MAAMwL,SAgEpB,cAAC,IAAD,CACE7N,MAAO,CAAE2P,QAASrP,KAAKhB,MAAM8P,aAAe,OAAS,SACrD1P,QAAS,kBACP,EAAKJ,MAAMsQ,kBAAkB,EAAKtQ,MAAMoQ,gBAH5C,sCAQA,cAAC,IAAD,CACE1P,MAAO,CAAE2P,QAASrP,KAAKhB,MAAM8P,aAAe,QAAU,QACtD1P,QAAS,kBACP,EAAKJ,MAAMuQ,sBAHf,4BASF,cAACrF,EAAA,EAAD,UACE,sBAAKhL,UAAU,yCAAf,UACE,cAAC,IAAD,CACEA,UAAWc,KAAKhB,MAAM8P,aAAe,cAAgB,KACrDpP,MAAO,CAAE8P,aAAc,QACvBpQ,QAAS,kBAAM,EAAKJ,MAAMyQ,gBAAe,IAH3C,iBAOA,uBACA,uBACCzP,KAAKhB,MAAM0Q,MAAM7N,KAAI,SAAC+I,GAAD,OACpB,eAAC,IAAD,CAEE1L,UACE0L,EAAKU,SAAW,EAAKtM,MAAMoQ,cAAc9D,SACxC,EAAKtM,MAAM8P,aAER,cADA,cAGNpP,MAAO,CAAE8P,aAAc,OACvBpQ,QAAS,WACP,EAAKJ,MAAMyQ,gBAAe,GAC1B,EAAKzQ,MAAM2Q,eAAe/E,IAX9B,UAcGA,EAAKyB,WACJ,cAAC,KAAD,CACE3M,MAAO,CAAEkQ,YAAa,OACtBhB,KAAMiB,OAGR,6BAEDjF,EAAKC,YArBDD,EAAKU,YAwBd,uBACA,uBACA,cAAC,GAAD,CAASlM,QAASY,KAAKhB,MAAM8Q,kC,GAtSvB/O,aAAdiM,GACG7J,YAAcvE,EA8SR4C,mBAAWwL,IClSpB+C,GAAa,SAAC/Q,GAAW,IAAD,EACI4I,mBAAS,CACvCpI,SAAUR,EAAMQ,SAChBuM,aAAc,EACdD,MAAO,EACPkE,OAAQ,KALkB,mBACvBC,EADuB,KACZC,EADY,KAOxB9N,EAAOqF,qBAAW7I,GAPM,EAQFgJ,mBAAS,CACjCtF,QAAS,EACT9C,SAAU,EACVuM,aAAc,EACdD,MAAO,EACPkE,OAAQ,KAbkB,mBAQvBG,EARuB,KAQfC,EARe,OAeUxI,oBAAS,GAfnB,mBAevByI,EAfuB,KAeTC,EAfS,OAgBJ1I,mBAAS,IAhBL,mBAgBvB8H,EAhBuB,KAgBhBa,EAhBgB,OAiBE3I,oBAAS,GAjBX,mBAiBvB4I,EAjBuB,KAiBbC,EAjBa,KAkBxBpR,EAAUqI,cAEdgJ,qBAAU,WACRhP,QAAQC,IAAIS,EAAKA,MACjBV,QAAQC,IAAI3C,GACZ2R,IACI3R,EAAM4R,WAAWC,MACpB,CAACzO,IAEJ,IAAMuO,EAAc,WAClBjP,QAAQC,IAAIS,EAAKA,MACjBV,QAAQC,IAAI3C,GACRiD,OAAOC,KAAKE,EAAKA,MAAMC,QACzB0D,MAAM,mCAAD,OACgC3D,EAAKA,KAAKE,QAD1C,YACqDtD,EAAMQ,UAC9D,CACEwG,OAAQ,MACRI,QAAS,CACP,eAAgB,qCAInBZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLhE,QAAQC,IAAI+D,GACRA,GAAQzD,OAAOC,KAAKwD,GAAMrD,SAAWqD,EAAKoL,MAC5CR,GAAgB,GAChBF,EAAU1K,GACV+K,GAAY,GACZP,GAAa,SAACa,GAAD,mBAAC,eACTA,GADQ,IAEXhF,aAAcrG,EAAKqG,aACnBD,MAAOpG,EAAKoG,MACZkE,OAAQtK,EAAKsK,iBAMnBa,EAAa,WACjBnP,QAAQC,IAAIS,EAAKA,MACjBV,QAAQC,IAAI3C,GACRiD,OAAOC,KAAKE,EAAKA,MAAMC,QACzB0D,MAAM,mCAAD,OACgC3D,EAAKA,KAAKE,QAD1C,mBAC4DtD,EAAMQ,SADlE,UAEH,CACEwG,OAAQ,MACRI,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAIjD5F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLhE,QAAQC,IAAI+D,GACRA,GAAQzD,OAAOC,KAAKwD,GAAMrD,SAAWqD,EAAKoL,KAC5CP,EAAS7K,OA2BnB,GADAhE,QAAQC,IAAIM,OAAOC,KAAKiO,GAAQ9N,QAC5BJ,OAAOC,KAAKE,EAAKA,MAAMC,QAAU8N,EAAQ,CAC3C,GAAKK,EA4CH,OACE,eAACvR,EAAA,EAAD,CACEQ,OAAQwQ,EAAUlE,aAAe,UAAY,YAC7CrM,MAAO,CAAEC,MAAO,SAFlB,UAIE,cAACV,EAAA,EAAKyL,OAAN,UACE,cAACsG,GAAA,EAAD,CACElR,QAASmQ,EAAUlE,aAAe,UAAY,YAC9CpH,MAAOsL,EAAUlE,aAAe,UAAY,gBAF9C,SAIE,cAACkF,GAAA,EAASnO,KAAV,CACEG,SAAS,IACT7D,QAAS,kBACP6Q,EAAUlE,aACNmE,GAAa,SAACa,GAAD,mBAAC,eACTA,GADQ,IAEXhF,aAAc,OAEhBmE,GAAa,SAACa,GAAD,mBAAC,eACTA,GADQ,IAEXhF,aAAc,QAVxB,SAcIkE,EAAUlE,aAA2B,gBAAZ,gBAIjC,eAACmF,EAAA,EAAD,CAAWhS,UAAU,mBAArB,UACE,cAACiS,EAAA,EAAD,UACE,eAAClS,EAAA,EAAK2B,KAAN,yBACa,uBACX,cAACwQ,GAAA,EAAD,CACE5M,KAAK,mBACLtF,UAAU,cACVoB,MAAyB,GAAlB2P,EAAUnE,MACjBuF,IAAK,EACLC,UAAW,GACXlR,KAAK,QACLmR,UAAW,cAAC,KAAD,CAAgBC,SAAS,YACpCnK,SAAU,SAAC/D,EAAOmO,GAChBvB,GAAa,SAACa,GAAD,mBAAC,eACTA,GADQ,IAEXjF,MAAkB,EAAX2F,eAMjB,eAACN,EAAA,EAAD,WACE,cAAClS,EAAA,EAAKyB,MAAN,2BACA,cAACzB,EAAA,EAAK2B,KAAN,UACE,cAACiG,EAAA,EAAK4F,QAAN,CACE+B,GAAG,WACHkD,KAAM,EACNC,aAAc1B,EAAUD,OACxB3I,SAAU,SAAC/D,GACT4M,GAAa,SAACa,GAAD,mBAAC,eACTA,GADQ,IAEXf,OAAQ1M,EAAMI,OAAOpD,sBAOjC,eAACrB,EAAA,EAAKkM,OAAN,WACE,cAAC,IAAD,CACErL,QAAQ,YACRM,KAAK,KACLhB,QAAS,kBAAMqR,GAAY,IAH7B,oBAQA,cAAC,IAAD,CACE3Q,QAAQ,UACRZ,UAAU,cACVkB,KAAK,KACLhB,QAlJS,WACnBsC,QAAQC,IAAIsO,GACZlK,MAAM,mCAAD,OAAoC3D,EAAKA,KAAKE,SAAW,CAC5D0D,OAAQqK,EAAe,MAAQ,OAC/BpK,KAAMC,KAAKC,UAAU8J,GACrB7J,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAG/C5F,MAAK,SAACC,GACkB,KAAnBA,EAAS+F,SACXjJ,aAAaC,QAAQ,UAArB,UAAmCnD,EAAQoH,SAASF,WACpDlH,EAAQC,KAAK,cAGhBkG,MAAK,WACJmL,IACAF,GAAY,OA4HR,SAMGJ,EAAe,OAAS,cA5HjC,GAAIA,GAAgBpO,OAAOC,KAAKiO,GAAQ9N,OACtC,OACE,eAAC4H,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACjL,EAAA,EAAD,CACEQ,OAAQ0Q,EAAOpE,aAAe,UAAY,YAC1CrM,MAAO,CAAEC,MAAO,SAFlB,UAIE,cAACV,EAAA,EAAKyL,OAAN,UACGyF,EAAOpE,aAAe,UAAY,kBAErC,eAACmF,EAAA,EAAD,CAAWhS,UAAU,mBAArB,UACE,cAACiS,EAAA,EAAD,UACE,eAAClS,EAAA,EAAK2B,KAAN,yBACa,uBACX,cAACwQ,GAAA,EAAD,CACE5M,KAAK,YACLlE,MAAsB,GAAf6P,EAAOrE,MACduF,IAAK,EACLC,UAAW,GACXlR,KAAK,QACLwR,UAAQ,EACRL,UAAW,cAAC,KAAD,CAAgBC,SAAS,mBAI1C,eAACL,EAAA,EAAD,WACE,cAAClS,EAAA,EAAKyB,MAAN,2BACA,cAACzB,EAAA,EAAK2B,KAAN,UAAYuP,EAAOH,eAGvB,cAAC/Q,EAAA,EAAKkM,OAAN,UACE,cAAC,IAAD,CAAQ/K,KAAK,KAAKhB,QAAS,kBAAMqR,GAAY,IAA7C,yBAMLzR,EAAM4R,UAAY,cAAC,GAAD,CAAgBlB,MAAOA,IAAY,gCA6FhE,OAAO,8BAGHmC,GAAiB,SAAC7S,GACtB,IAAIoD,EAAOqF,qBAAW7I,GAClBS,EAAUqI,cAEd,OACE,cAACwC,EAAA,EAAD,UACE,sBAAKhL,UAAU,yCAAf,UACE,qBAAKQ,MAAO,CAAE8P,aAAc,QAA5B,+BACCxQ,EAAM0Q,MAAMrN,OACXrD,EAAM0Q,MAAM7N,KAAI,SAAC+I,GAAD,OACd,eAAC,IAAD,CAEExK,KAAK,KACLV,MAAO,CAAE8P,aAAc,QACvBpQ,QAAS,kBACPC,EAAQC,KAAK,CACXiH,SAAS,UAAD,OAAYnE,EAAKA,KAAKE,QAAtB,UACRP,MAAO,CAAEqN,cAAexE,MAP9B,UAWG,IACAA,EAAKyB,WACJ,cAAC,KAAD,CAAiB3M,MAAO,CAAEkQ,YAAa,OAAShB,KAAMiB,OAEtD,6BAEDjF,EAAKC,YAhBDD,EAAKU,YAoBd,cAAC,IAAD,CACElL,KAAK,KACLN,QAAQ,YACRJ,MAAO,CAAE8P,aAAc,QACvBtM,UAAQ,EAJV,iCAcJ4O,GAAgB,SAAC9S,GAAW,IAAD,EACH4I,mBAAS,IADN,mBAC1BsF,EAD0B,KACjB6E,EADiB,OAEHnK,mBAAS,IAFN,mBAE1BoK,EAF0B,KAEjBC,EAFiB,OAGKrK,oBAAS,GAHd,mBAG1BsK,EAH0B,KAGbC,EAHa,KAI/BzB,qBAAU,WACRhP,QAAQC,IAAI3C,GACZ2O,MACC,IAEH,IAAMA,EAAe,WACnBjM,QAAQC,IAAI3C,GACZ+G,MAAM,oCAAD,OAAqC/G,EAAMQ,SAA3C,YAA+D,CAClEwG,OAAQ,MACRI,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAG/C5F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLhE,QAAQC,IAAI+D,GACRA,GAAQzD,OAAOC,KAAKwD,GAAMrD,SAAWqD,EAAKoL,MAC5CiB,EAAWrM,EAAKwH,SAChB+E,EAAWvM,EAAKsM,QAAQnQ,KAAI,SAACuQ,GAAD,OAAYA,EAAOC,kBAKvD,OACE,qCACE,cAACrB,GAAA,EAAD,CACEtR,MAAO,CAAE8P,aAAc,QACvB1P,QAASoS,EAAc,UAAY,YACnCvN,MAAOuN,EAAc,uBAAyB,wBAHhD,SAKE,cAACjB,GAAA,EAASnO,KAAV,CACEG,SAAS,IACT7D,QAAS,kBAEH+S,GADJD,IAHJ,SAQIA,EAAuC,wBAAzB,2BAGnBhF,EAAQ7K,OAAQ6K,EACdhC,QAAO,SAACiF,GAAD,OACN+B,GAAcF,EAAQM,SAASnC,EAAO7N,YAEvCT,KAAI,SAACsO,GAAD,OACH,eAAClR,EAAA,EAAD,CAA2BS,MAAO,CAAE8P,aAAc,QAAlD,UACE,cAACvQ,EAAA,EAAKyL,OAAN,UAAcyF,EAAO1H,WACrB,cAACxJ,EAAA,EAAKwB,KAAN,UACE,6BAAYvB,UAAU,kBAAtB,UACE,mCAAMiR,EAAOH,OAAb,QACA,cAAC/Q,EAAA,EAAKsT,SAAN,UACE,cAACnB,GAAA,EAAD,CACE5M,KAAK,YACLlE,MAAsB,GAAf6P,EAAOrE,MACduF,IAAK,EACLC,UAAW,GACXlR,KAAK,QACLmR,UAAW,cAAC,KAAD,CAAgBC,SAAS,YACpCI,UAAQ,aAbPzB,EAAO7N,YAoBpB,cAACrD,EAAA,EAAD,CAAMS,MAAO,CAAE8P,aAAc,QAA7B,SACI,cAACvQ,EAAA,EAAKwB,KAAN,kCASN+R,G,kDAWJ,WAAYxT,EAAOmD,GAAU,IAAD,8BAC1B,cAAMnD,EAAOmD,IATfJ,MAAQ,CACNvC,SAAU,EAAKR,MAAMQ,SACrBD,MAAO,GACPqF,OAAQ,GACRC,OAAQ,GACR4N,UAAW,GAGe,EAM5BC,eAAiB,SAAClT,EAAUmT,GAC1B,GAAmC,QAAhC,EAAKxQ,QAAQC,KAAKwQ,UACnB,OAAQ,cAAC,IAAD,CACP9S,QAAQ,UACRJ,MAAO,CAAC8P,aAAc,QACtBpQ,QAAS,WACP,EAAKJ,MAAMK,QAAQC,KAAK,CACtBiH,SAAS,UACTxE,MAAO,CAAEvC,SAAUA,EAAUmT,WAAYA,KAE3CjR,QAAQC,IAAI,oBAAoB,EAAKI,MAAMxC,MAAMC,SAAU,EAAKuC,MAAMxC,MAAMoB,cAE9EkS,OAAK,EAVE,yCANV,EAAKC,WAAW,EAAK/Q,MAAMvC,UAC3BkC,QAAQC,IAAI,EAAK3C,OACjB0C,QAAQC,IAAIQ,GAJc,E,8CA2B5B,SAAW3C,GAAW,IAAD,OACnBuG,MAAM,oCAAD,OAAqCvG,GAAY,CACpDwG,OAAQ,MACRI,QAAS,CACP,eAAgB,qCAGjBZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,EAAKV,SAAS,CAAEzF,MAAOmG,IACvB,EAAKV,SAAS,CAAEH,OAAQa,EAAKb,SAC7B,EAAKG,SAAS,CAAEJ,OAAQc,EAAKd,SAC7BlD,QAAQC,IAAI,EAAKI,MAAM8C,QACvBnD,QAAQC,IAAI,EAAKI,MAAM6C,a,oBAI7B,WAAU,IAAD,OAEP,OADAlD,QAAQC,IAAI,OAEV,eAACoI,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAAC6I,GAAA,EAAD,CACEhT,IAAKC,KAAK+B,MAAMxC,MAAMU,WACtBP,MAAO,CAAEC,MAAO,QAASC,OAAQ,yBACjCoT,WAAS,IAEX,qBAAKtT,MAAO,CAAEuT,SAAU,SAAUC,SAAU,YAA5C,SACE,cAAC9B,GAAA,EAAD,CACE5M,KAAK,YACLlE,MAAqC,GAA9BN,KAAK+B,MAAMxC,MAAMgB,WACxB8Q,IAAK,EACLC,UAAW,GACXlR,KAAK,QACLwR,UAAQ,EACRL,UAAW,cAAC,KAAD,CAAgBC,SAAS,mBAI1C,eAACtH,EAAA,EAAD,WACE,oBAAIhL,UAAU,YAAd,SAA2Bc,KAAK+B,MAAMxC,MAAMoB,cAC3CX,KAAK+B,MAAM6C,OAAO/C,KAAI,SAACsR,GAAD,OACrB,8BACGC,GAAsBD,EAAME,aADrBF,EAAMG,aAIjBtT,KAAK+B,MAAMxC,MAAMgU,kBAClB,uBACA,uBACA,cAAC,IAAD,CACEzT,QAAQ,SACRJ,MAAO,CAAE8P,aAAc,QACvBpQ,QAAS,WACP,EAAKJ,MAAMK,QAAQC,KAAK,CACtBiH,SAAS,WAAD,OAAa,EAAKxE,MAAMxC,MAAMC,SAA9B,UACRuC,MAAO,CAAEvC,SAAU,EAAKuC,MAAMxC,MAAMC,YAEtCkC,QAAQC,IAAI,EAAKI,MAAMxC,MAAMC,WAE/BqT,OAAK,EAVP,kBAcC7S,KAAK0S,eAAe1S,KAAK+B,MAAMxC,MAAMC,SAAUQ,KAAK+B,MAAMxC,MAAMoB,aACjE,cAAC,GAAD,CAEEnB,SAAUQ,KAAKhB,MAAMQ,SACrBoR,WAAW,GAFN5Q,KAAKhB,MAAMQ,gBAMtB,qBAAKN,UAAU,4EAAf,SACGc,KAAK+B,MAAM8C,OAAOhD,KAAI,SAAC2R,GAAD,OACrB,qBAEEtU,UAAU,+BAFZ,SAIE,eAACD,EAAA,EAAD,CACEQ,OAAO,YACPC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAFnC,UAIE,cAACX,EAAA,EAAKyL,OAAN,UACyB,QAAtB8I,EAAOC,YAAwB,OAAS,SAE3C,cAACxU,EAAA,EAAKY,IAAN,CACEC,QAAQ,MACRC,IAAKyT,EAAOjL,YACZrJ,UAAU,YACVQ,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WAElC,eAACX,EAAA,EAAKwB,KAAN,WACE,cAACxB,EAAA,EAAKyB,MAAN,UAAa8S,EAAOE,cACpB,cAACzU,EAAA,EAAK2B,KAAN,UACyB,QAAtB4S,EAAOC,YACJL,GAAsBI,EAAOG,cAC7B,MAAQC,GAAWJ,EAAOC,sBArB/BD,EAAOK,gBA4BlB,cAAC,GAAD,CAAerU,SAAUQ,KAAK+B,MAAMvC,kB,GA7IhBuB,aAmJ5B,SAASqS,GAAsBpS,GAC7B,OAAOA,EAAOO,OAAO,GAAG6F,cAAgBpG,EAAOmD,MAAM,GAGvD,SAASyP,GAAW5S,GAClB,IACI2E,EADA1E,EAAMD,EAAOE,MAAM,KAEnBkD,EAAS,GACb,IAAKuB,EAAI,EAAGA,EAAI1E,EAAIoB,OAAS,EAAGsD,GAAK,EACnCvB,GAAkBnD,EAAI0E,GAClBA,EAAI,GAAK,IAAGvB,GAAU,KAE5B,OAAOA,EA/JHoO,GACGrP,YAAcvE,EAkKR4C,mBAAWgR,IC/hBpBsB,G,kDAKJ,WAAY9U,GAAQ,IAAD,8BACjB,cAAMA,IALR+C,MAAQ,CACNvC,SAAU,EAAKR,MAAMyO,MAAMC,OAAOnJ,IAKlC7C,QAAQC,IAAI3C,GAFK,E,0CAKnB,WACE,OACE,mCACE,eAAC+K,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAAC,EAAD,IACA,uBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAG5F,GAAG,kBAAf,SACE,cAAC,EAAD,MAEF,cAAC2F,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,cAAC,GAAD,CAAe3K,SAAUQ,KAAK+B,MAAMvC,yB,GArB1BuB,aA8BTS,eAAWsS,I,sECf1B,SAASC,GAAM/U,GACb,OAAO,cAAC,KAAD,aAAUgV,UAAW,EAAGlU,QAAQ,UAAad,IAGtD,IAAMiV,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACThM,QAAS+L,EAAME,QAAQ,IAEzBC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACV5E,YAAauE,EAAME,QAAQ,IAE7BI,QAAS,CACPC,UAAW,GACXC,WAAY,aACZC,WAAYT,EAAME,QAAQ,GAC1BQ,cAAeV,EAAME,QAAQ,IAE/B1P,MAAO,CACL4P,SAAU,EACVO,UAAW,cA6IAtT,gBAzIG,WAChB,IAAMuT,EAAUd,KADM,EAEErM,oBAAS,GAFX,mBAEfC,EAFe,KAETC,EAFS,KAGlB1F,EAAOqF,qBAAW7I,GAElBS,EAAUqI,cALQ,EAMUE,mBAAS,IANnB,mBAMfa,EANe,KAMLuM,EANK,OAOUpN,mBAAS,IAPnB,mBAOfqN,EAPe,KAOLC,EAPK,KA0CtB,OACE,eAAC,KAAD,CACEhW,UAAW6V,EAAQX,UACnBe,SAAS,KACTf,WAAS,EACTgB,MAAM,SAJR,UAME,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,WAAW,iBAAhB,qBAEF,sBACExO,SAAU,SAAC2F,GACTA,EAAEpG,kBAFN,SAKE,eAACkP,GAAA,EAAD,CAAMpB,WAAS,EAACC,QAAS,EAAG3U,MAAO,CAAEkV,WAAY,IAAjD,UACE,cAACY,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,eAACqL,GAAA,EAAD,CAAMpB,WAAS,EAACC,QAAS,EAAzB,UACE,cAACmB,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAClD,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,WACN3C,KAAK,WACLpE,KAAK,QACLN,QAAQ,WACRuH,SAAU,SAACqF,GAAD,OAAOsI,EAAYtI,EAAEhJ,OAAOpD,YAG1C,cAACkV,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAClD,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,WACN3C,KAAK,WACLpE,KAAK,QACLgF,KAAK,WACLtF,QAAQ,WACRuH,SAAU,SAACqF,GAAD,OAAOwI,EAAYxI,EAAEhJ,OAAOpD,iBAK9C,cAACkV,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAChB,EAAA,EAAD,CACEsM,MAAM,UACNvO,WAAS,EACT9B,KAAK,SACLtF,QAAQ,YACRV,QAAS,WAxEnB2G,MAAM,kCAAmC,CACvCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBsC,SAAUA,EACVwM,SAAUA,IAEZ7O,QAAS,CACP,eAAgB,qCAGjBZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACDA,EAAKgQ,MAAO7S,MAAM6C,EAAKgQ,QAEzBnT,aAAaC,QAAQ,MAAOkD,EAAKiQ,KACjCvT,EAAKwT,YACLlU,QAAQC,IAAIY,aAAa6I,QAAQ,YACjC/L,EAAQC,KACNiD,aAAa6I,QAAQ,WACjB7I,aAAa6I,QAAQ,WACrB,UA+CJ,qBAWF,cAACoK,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAIiL,MAAM,SAAzB,SACE,eAACC,GAAA,EAAD,oCACyB,IACvB,cAAC,IAAD,CACEQ,GAAG,UACHnW,MAAO,CAAEoW,eAAgB,OAAQL,MAAO,WAF1C,SAIE,cAACH,GAAA,EAAD,CAAKC,WAAW,iBAAhB,iCAMV,cAACQ,GAAA,EAAD,CAAUlO,KAAMA,EAAMmO,iBAAkB,IAAMC,QAnG9B,SAAC3S,EAAO4S,GACX,cAAXA,GAGJpO,GAAQ,IA+FN,SACE,cAAC,GAAD,CAAOqO,SAAS,QAAhB,sDCtJFC,I,yDAEA,WAAYpX,GAAQ,IAAD,8BACjB,cAAMA,IACD+C,MAAM,CACPvC,SAAU,EAAKR,MAAMyH,SAAS1E,MAAMvC,SAEpC6W,MAAM,IAGV,EAAKC,WAAW,EAAKvU,MAAMvC,UARV,E,8CAqBnB,SAAWA,GAAU,IAAD,OAClBuG,MAAM,oCAAD,OAAqCvG,EAArC,UAAuD,CAC9DwG,OAAQ,MACRI,QAAS,CACP,eAAgB,qCAGjBZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACN,EAAKV,SAAS,CAACqR,MAAO3Q,IAEtBhE,QAAQC,IAAI+D,Q,oBAGb,WAAS,IAAD,OACJ,OAaP,aAZI,CAYJ,OAAKxG,UAAY,WAAjB,SACCc,KAAK+B,MAAMsU,MAAMxU,KAAI,SAAC4I,GAAD,OACjB,qBAEEvL,UAAU,uCAFZ,SAIF,eAACD,EAAA,EAAD,CAAMqK,GAAG,OAAOiN,KAAO,QAAvB,UACJ,cAACtX,EAAA,EAAKyL,OAAN,CAAa8D,GAAG,KAAhB,sBACA,eAACvP,EAAA,EAAKwB,KAAN,WACE,cAACxB,EAAA,EAAKyB,MAAN,UAAa+J,EAAK+L,eAClB,cAACvX,EAAA,EAAK2B,KAAN,UACG6J,EAAKgM,YAER,cAAC,IAAD,CAAQ3W,QAAQ,UAAUV,QAAS,WAC7B,EAAKJ,MAAMK,QAAQC,KAAK,CAACiH,SAAS,UAAD,OAAWkE,EAAKiM,QAAhB,UAAiC3U,MAAM,CAAC2U,QAAQjM,EAAKiM,WACtFhV,QAAQC,IAAI8I,EAAKiM,UAFvB,8BAVWjM,EAAKiM,kB,GAtDI3V,cA+ETS,eAAW4U,IC/EtBO,I,OAAc,IACZC,G,kDACF,WAAY5X,GAAO,IAAD,8BACd,cAAMA,IAgBV6X,WAAW,SAACtS,GAGF,GADEV,SAASiT,eAAevS,GAAIwS,UAAUC,OAAO,UAEjDL,GAAYrX,KAAKiF,GAGjB,EAAK0S,WAAWN,GAAYpS,IAxBlB,EA6BlB2S,UAAU,SAACC,EAAK3L,GACZ,OAAW,GAARA,EAEK,wBAAQ9L,MAAQ,CAACC,MAAM,OAAQC,OAAO,OAAQwX,gBAAgB,MAAOlP,aAAa,OAAQmP,UAAU,WAAY9S,GAAM4S,EAAtH,SAA8HA,IAK9H,wBAAQzX,MAAQ,CAACC,MAAM,OAAQC,OAAO,OAAQsI,aAAa,OAAOmP,UAAU,WAAY9S,GAAM4S,EAAM/X,QAAS,kBAAI,EAAKyX,WAAWM,IAAjI,SAAyIA,KArCnI,EA0ClBG,UAAU,SAACpI,GACP,IAAIvJ,EACA4R,EACJ,IAAI5R,EAAE,EAAEA,EAAEuJ,EAAE7M,OAAOsD,IACf,IAAI4R,EAAE,EAAEA,EAAErI,EAAE7M,OAAO,EAAEkV,IAAI,CACrB,IAAIC,EAAIC,SAASvI,EAAEqI,GAAGG,UAAUvT,MAAM,IAClC8G,EAAIwM,SAASvI,EAAEqI,EAAE,GAAGG,UAAUvT,MAAM,IACpCwT,EAAIzI,EAAEqI,GAAGG,UAAUnW,OAAO,GAC1BqW,EAAI1I,EAAEqI,EAAE,GAAGG,UAAUnW,OAAO,GAChC,GAAuB,GAApBoW,EAAEE,cAAcD,IACZJ,EAAEvM,EAAE,CACH,IAAI6M,EAAO5I,EAAEqI,GACbrI,EAAEqI,GAAGrI,EAAEqI,EAAE,GACTrI,EAAEqI,EAAE,GAAGO,GAKvB,OAAO5I,GA1DP,EAAKnN,MAAM,CACP2U,QAAS,EAAK1X,MAAMyH,SAAS1E,MAAM2U,QACnCqB,MAAM,IAEV,EAAKC,WAAW,EAAKjW,MAAM2U,SANb,E,8CASlB,SAAWzV,EAAKX,GACZ,IAAI2X,EAAQhX,EAAIiX,QAAQ5X,GAIxB,OAHI2X,GAAS,GACXhX,EAAIkX,OAAOF,EAAO,GAEbhX,I,wBAiDX,SAAWyV,GAAS,IAAD,OACf3Q,MAAM,mCAAD,OAAoC2Q,EAApC,UAAqD,CAC5D1Q,OAAQ,MACRI,QAAS,CACP,eAAgB,qCAIjBZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACN,EAAKV,SAAS,CAAC+S,MAAO,EAAKT,UAAU5R,KACrChE,QAAQC,IAAI,gBAAgB,EAAK2V,UAAU5R,S,oBAI5C,WAAS,IAAD,OACJ,OACI,qCACA,uBACA,mBAAGxG,UAAY,YAAf,+BAEA,uBACA,qBAAKkZ,MAAM,gBAAgB1Y,MAAO,CAACD,OAAO,mBAAoBkP,WAAW,OAAOiB,YAAY,OAAO7C,UAAU,OAAQqK,gBAAgB,QAArI,SAEI,cAACnN,EAAA,EAAD,UACCjK,KAAK+B,MAAMgW,MAAMlW,KAAI,SAACkW,GAAD,OAElB,eAAC7N,EAAA,EAAD,WACK,uBACA,EAAKgN,UAAUa,EAAML,UAAUK,EAAMM,aACtC,yBAHMN,EAAML,kBAYxB,oBAAItX,KAAK,OAAOqV,MAAM,SACtB,mBAAGvW,UAAY,SAAf,yBACA,uBAAK,uBACL,uBAAK,uBACL,cAAC,IAAD,CAAQY,QAAQ,UAChBJ,MAAO,CAACC,MAAO,MAAMC,OAAQ,QAAQgQ,YAAa,MAAMjB,WAAY,MACpE6C,SAAS,OAAQtJ,aAAa,SAAU9I,QAAS,WAC/C,EAAKJ,MAAMK,QAAQC,KAAK,CAACiH,SAAS,UAAD,OAAW,EAAKxE,MAAM2U,QAAtB,SAAsC3U,MAAM,CAACuW,YAAY3B,GAAYD,QAAQ,EAAK3U,MAAM2U,YAH3H,mC,GA3GU3V,aAwHTS,eAAWoV,I,cC3EX2B,IC/CTC,G,kDACF,WAAYxZ,GAAO,IAAD,8BACd,cAAMA,IACD+C,MAAM,CACP0W,OAAQ,EAAKzZ,MAAMyH,SAAS1E,MAAMuW,YAClC5B,QAAS,EAAK1X,MAAMyH,SAAS1E,MAAM2U,SAEvChV,QAAQC,IAAI,EAAKI,MAAM0W,QANT,E,wCASlB,SAAKV,EAAMrB,GAAS,IAAD,OACf3Q,MAAM,mCAAD,OAAoC2Q,EAApC,SAAoD,CAC3D1Q,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACf4R,MAAOA,EACPW,aAAc,OAEpBtS,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAG/C5F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACN,EAAKV,SAAS,CAAC+S,MAAOrS,IAEtBhE,QAAQC,IAAI+D,Q,oBAKf,WAAS,IAAD,OAEJ,OAEI,sBAAKxG,UAAU,OAAf,UACI,mBAAGA,UAAY,SAAf,8GACA,cAAC,IAAD,CAAQY,QAAQ,OAAOM,KAAO,KAAKyS,OAAK,EAAxC,6BACA,uBACA,uBAEA,cAAC,IAAD,CAAQ/S,QAAQ,UAAUM,KAAO,KAAKhB,QAAS,kBAAK,EAAKuZ,KAAK,EAAK5W,MAAM0W,OAAO,EAAK1W,MAAM2U,UAAU7D,OAAK,EAACnT,MAAO,CAAC2X,UAAU,WAA7H,yBACA,uBACA,uBACA,cAAC,IAAD,CAAQvX,QAAQ,UAAUM,KAAO,KAAKyS,OAAK,EAACzT,QAAS,WACrD,EAAKJ,MAAMK,QAAQC,KAAK,MADxB,0BAGA,uBACA,uBACA,uBAAK,uBAAK,uBAAK,8B,GAjDLyB,aAyDXS,eAAWgX,ICRXI,GAjDQ,SAAC5Z,GAAW,IAAD,EACN4I,mBAAS,IADH,mBACzBrI,EADyB,KAClBsZ,EADkB,OAEkBjR,oBAAS,GAF3B,mBAEvBkR,EAFuB,KAELC,EAFK,KAI1BC,EAAW,SAACxZ,EAAUmB,GAC1Be,QAAQC,IAAInC,GACZkC,QAAQC,IAAIhB,GACZkY,EAAS,CAAErZ,SAAUA,EAAUmB,YAAaA,IAC5CoY,GAAoB,IAOhBE,EAAe,WACnB,OAAIH,EAEA,8BACE,cAAC,IAAD,CAAQ1Z,QAAS,kBAAM2Z,GAAoB,IAAQrZ,MAAO,CAAC8P,aAAc,QAAzE,SACGjQ,EAAMoB,gBAMX,cAAC,EAAD,CAAW2D,eAAe,EAAMsC,WAAYoS,KAKlD,OACE,eAACxO,GAAA,EAAD,CAAOC,KAAMzL,EAAMyL,KAAnB,UACE,cAACD,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,GAAA,EAAM9J,MAAP,4BAEF,eAAC8J,GAAA,EAAM/J,KAAP,WACE,cAACwY,EAAD,IACCH,EAAiB,cAAC,GAAD,CAAiCtZ,SAAUD,EAAMC,SAAU0Z,UAAU,GAApD3Z,EAAMC,UAAuD,gCAElG,cAACgL,GAAA,EAAMW,OAAP,UACE,cAAC,IAAD,CAAQrL,QAAQ,YAAYV,QA/BjB,WACfyZ,EAAS,IACT7Z,EAAMuL,iBA6BF,yBC1BF4O,G,kDAWJ,WAAYna,GAAQ,IAAD,8BACjB,cAAMA,IAXR+C,MAAQ,CACNmX,UAAU,EACVE,WAAW,EACXC,YAAY,EACZ3J,MAAO,CAAC,CAAEpE,QAAS,EAAGT,UAAW,GAAIwB,WAAY,IACjD+C,cAAe,GACfkK,gBAAgB,EAChBxK,cAAc,GAGG,EAKnBgB,iBAAmB,WACjB,EAAK9K,SAAS,CAAEkU,UAAU,KANT,EAQnBK,kBAAoB,WAClB,EAAKvU,SAAS,CAAEkU,UAAU,KATT,EAWnB5J,kBAAoB,SAAC1E,GACnBlJ,QAAQC,IAAIiJ,GACZ,EAAK5F,SAAS,CAAEoK,cAAexE,EAAMwO,WAAW,KAb/B,EAenBI,mBAAqB,WACnB,EAAKxU,SAAS,CAAEoU,WAAW,KAhBV,EAkBnB7J,mBAAqB,WACnB,EAAKvK,SAAS,CAAEqU,YAAY,KAnBX,EAqBnBI,oBAAsB,WACpB,EAAKzU,SAAS,CAAEqU,YAAY,KAtBX,EAyBnBK,cAAgB,WACd,EAAK3X,MAAMuX,eACP,EAAKtU,SAAS,CAAEsU,gBAAgB,EAAOxK,cAAc,IACrD,EAAK9J,SAAS,CAAEsU,gBAAgB,EAAMxK,cAAc,KA5BvC,EA8BnB6K,YAAc,WACZ,EAAK9I,cA/BY,EAkCnB+I,kBAAoB,WAClB,EAAK/I,cAnCY,EAsCnBA,WAAa,WACX9K,MAAM,mCAAD,OAAoC,EAAK/G,MAAMyO,MAAMC,OAAOnJ,GAA5D,UAAwE,CAC3EyB,OAAQ,MACRI,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAG/C5F,MAAK,SAACC,GAML,OALA/D,QAAQC,IAAI8D,GACW,KAAnBA,EAAS+F,SACXjJ,aAAaC,QAAQ,UAArB,UAAmC,EAAKxD,MAAMyH,SAASF,WACvD,EAAKvH,MAAMK,QAAQC,KAAK,WAEnBmG,EAASC,UAEjBF,MAAK,SAACE,GACLhE,QAAQC,IAAI+D,QACImD,GAAZnD,EAAKoL,KACPvO,aAAaC,QAAQ,UAArB,UAAmC,EAAKxD,MAAMyH,SAASF,WACvD,EAAKvH,MAAMK,QAAQC,KAAK,WAG2B,IAAjD2C,OAAOC,KAAK,EAAKH,MAAMqN,eAAe/M,QACtCqD,EAAKrD,QAELX,QAAQC,IAAIM,OAAOC,KAAK,EAAKH,MAAMqN,eAAe/M,QAClDX,QAAQC,IAAI,KACZD,QAAQC,IAAI+D,GACZ,EAAKV,SAAS,CAAE0K,MAAOhK,EAAM0J,cAAe1J,EAAK,OAEjDhE,QAAQC,IAAIM,OAAOC,KAAK,EAAKH,MAAMqN,eAAe/M,QAClD,EAAK2C,SAAS,CAAE0K,MAAOhK,QAI5BF,MAAK,WACA,EAAKxG,MAAMyH,SAAS1E,OACtB,EAAKiD,SAAS,CACZoK,cAAe,EAAKpQ,MAAMyH,SAAS1E,MAAMqN,cACzCN,cAAc,QA5EtBpN,QAAQC,IAAI3C,EAAMyH,UAFD,E,0CAkFnB,WAAU,IAAD,OAEP,OADA/E,QAAQC,IAAI3B,KAAK+B,OAEf,mCACE,eAACgI,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAAC,EAAD,IACA,uBACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAG5F,GAAG,kBAAf,SACE,cAAC,EAAD,MAEF,cAAC2F,EAAA,EAAD,CAAKC,GAAI,GAAI5F,GAAG,uBAAhB,SACE,cAACwF,EAAA,EAAD,UACE,cAAC,GAAD,CAUE2F,MAAO1P,KAAK+B,MAAM2N,MAClBN,cAAepP,KAAK+B,MAAMqN,cAC1BO,eAAgB,SAAC/E,GACf,EAAK5F,SAAS,CAAEoK,cAAexE,KAEjC6E,eAAgB,SAAC1K,GAAD,OAAQ,EAAKC,SAAS,CAAC8J,aAAc/J,KACrD+J,aAAc9O,KAAK+B,MAAM+M,aACzBgB,iBAAkB9P,KAAK8P,iBACvBR,kBAAmBtP,KAAKsP,kBACxBC,mBAAoBvP,KAAKuP,oBAjBvBvP,KAAK+B,MAAM2N,MAAM1D,WACjB,IACAhM,KAAK+B,MAAMuX,eAAetN,WAC1B,IACAhM,KAAK+B,MAAMqN,cAAcpD,WACzB,IACAhM,KAAK+B,MAAM+M,aAAa9C,mBAgBlC,cAAC,GAAD,CACEoD,cAAepP,KAAK+B,MAAMqN,cAC1B3E,KAAMzK,KAAK+B,MAAMmX,SACjB3O,cAAevK,KAAKuZ,kBACpB9N,WAAYzL,KAAK2Z,cAEnB,cAAC,GAAD,CACE/O,KAAM5K,KAAK+B,MAAMqN,cACjB3E,KAAMzK,KAAK+B,MAAMqX,UACjB7O,cAAevK,KAAKwZ,mBACpB/N,WAAYzL,KAAK0Z,gBAEnB,cAAC,GAAD,CACEjP,KAAMzK,KAAK+B,MAAMsX,WACjB9O,cAAevK,KAAKyZ,oBACpBhO,WAAYzL,KAAK0Z,yB,GAjJL3Y,aAyJTS,eAAW2X,I,+BCrJ1B,SAASpF,GAAM/U,GACb,OAAO,cAAC,KAAD,aAAUgV,UAAW,EAAGlU,QAAQ,UAAad,IAGtD,IAAMiV,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACThM,QAAS+L,EAAME,QAAQ,IAEzBC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACV5E,YAAauE,EAAME,QAAQ,IAE7BI,QAAS,CACPC,UAAW,GACXC,WAAY,aACZC,WAAYT,EAAME,QAAQ,GAC1BQ,cAAeV,EAAME,QAAQ,IAE/B1P,MAAO,CACL4P,SAAU,EACVO,UAAW,cAuLAtT,gBAnLI,WACjB,IAAMuT,EAAUd,KADO,EAECrM,oBAAS,GAFV,mBAEhBC,EAFgB,KAEVC,EAFU,OAGaF,mBAAS,IAHtB,mBAGhBiS,EAHgB,KAGJC,EAHI,KAInB1X,EAAOqF,qBAAW7I,GAElBS,EAAUqI,cANS,EAOSE,mBAAS,IAPlB,mBAOhBa,EAPgB,KAONuM,EAPM,OAQSpN,mBAAS,IARlB,mBAQhBqN,EARgB,KAQNC,EARM,OASGtN,mBAAS,IATZ,mBAShBmS,EATgB,KASTC,EATS,OAUKpS,mBAAS,GAVd,mBAUhBqS,EAVgB,KAURC,EAVQ,OAWStS,mBAAS,IAXlB,mBAWhBuS,EAXgB,KAWNC,EAXM,OAYuBxS,oBAAS,GAZhC,mBAYhByS,EAZgB,KAYCC,EAZD,KAqBjBC,EAAU,SAAC3U,EAASC,GACxBnE,QAAQC,IAAIiE,EAASC,GACrBqU,EAAUtU,GACVwU,EAAYvU,GACZyU,GAAmB,IAGfE,EAAc,WAClB,OAAIH,EAEA,gCACE,cAAClR,EAAA,EAAD,CAAQrJ,QAAQ,YAAhB,SACGqa,IAEH,cAACM,GAAA,EAAD,CAAYC,aAAW,SAAStb,QAAS,kBAAMkb,GAAmB,IAAlE,SACE,cAAC,KAAD,CAAY9I,SAAS,eAMzB,cAAC,EAAD,CAAWlN,eAAe,EAAMsC,WAAY2T,EAASnV,KAAK,UAkDhE,OACE,eAAC,KAAD,CACElG,UAAW6V,EAAQX,UACnBe,SAAS,KACTf,WAAS,EACTgB,MAAM,SAJR,UAME,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,WAAW,iBAAhB,uBAEF,sBACExO,SAAU,SAAC2F,GACTA,EAAEpG,kBAEJU,aAAa,MAJf,SAME,eAACwO,GAAA,EAAD,CAAMpB,WAAS,EAACC,QAAS,EAAG3U,MAAO,CAAEkV,WAAY,IAAjD,UACE,cAACY,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,eAACqL,GAAA,EAAD,CAAMpB,WAAS,EAACC,QAAS,EAAzB,UACE,cAACmB,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAClD,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,WACN3C,KAAK,WACLpE,KAAK,QACLN,QAAQ,WACRuH,SAAU,SAACqF,GAAD,OAAOsI,EAAYtI,EAAEhJ,OAAOpD,YAG1C,cAACkV,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAClD,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,WACN3C,KAAK,WACLpE,KAAK,QACLgF,KAAK,WACLtF,QAAQ,WACRuH,SAAU,SAACqF,GAAD,OAAOwI,EAAYxI,EAAEhJ,OAAOpD,YAG1C,cAACkV,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAClD,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,QACN3C,KAAK,QACLpE,KAAK,QACLN,QAAQ,WACRuH,SAAU,SAACqF,GAAD,OAAOsN,EAAStN,EAAEhJ,OAAOpD,YAGvC,cAACkV,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAACqQ,EAAD,WAIN,cAAChF,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAChB,EAAA,EAAD,CACEsM,MAAM,UACNvO,WAAS,EACT9B,KAAK,SACLtF,QAAQ,YACRV,QAAS,iBAxGhB,yJAAyJub,KACxJZ,GAQCM,OAKLtU,MAAM,mCAAoC,CACxCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBsC,SAAUA,EACVwM,SAAUA,EACV8E,MAAOA,EACPnU,QAASqU,IAEX7T,QAAS,CACP,eAAgB,qCAGjBZ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACDA,EAAKgQ,OACPoE,EAAcpU,EAAKgQ,OACnB5N,GAAQ,KAERvF,aAAaC,QAAQ,MAAOkD,EAAKiQ,KACjCvT,EAAKwT,YACLlU,QAAQC,IAAIY,aAAa6I,QAAQ,YACjC/L,EAAQC,KACNiD,aAAa6I,QAAQ,WACjB7I,aAAa6I,QAAQ,WACrB,UA5BV0O,EAAc,qDACdhS,GAAQ,KAPRgS,EAAc,iCACdhS,GAAQ,KA8FF,uBAWF,cAAC0N,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAIiL,MAAM,SAAzB,SACE,eAACC,GAAA,EAAD,sCAC2B,IACzB,cAAC,IAAD,CACEQ,GAAG,SACHnW,MAAO,CAAEoW,eAAgB,OAAQL,MAAO,WAF1C,SAIE,cAACH,GAAA,EAAD,CAAKC,WAAW,iBAAhB,+BAMV,cAACQ,GAAA,EAAD,CAAUlO,KAAMA,EAAMmO,iBAAkB,IAAMC,QA9J9B,SAAC3S,EAAO4S,GACX,cAAXA,GAGJpO,GAAQ,IA0JN,SACE,cAAC,GAAD,CAAOqO,SAAS,QAAhB,SAAyB0D,YC5GjC,SAAS9F,GAAM/U,GACb,OAAO,cAAC,KAAD,aAAUgV,UAAW,EAAGlU,QAAQ,UAAad,IAGtD,IAAMiV,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACThM,QAAS+L,EAAME,QAAQ,IAEzBC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACV5E,YAAauE,EAAME,QAAQ,IAE7BI,QAAS,CACPC,UAAW,GACXC,WAAY,aACZC,WAAYT,EAAME,QAAQ,GAC1BQ,cAAeV,EAAME,QAAQ,IAE/B1P,MAAO,CACL4P,SAAU,EACVO,UAAW,cAiNAtT,gBA7MM,WACnB,IAAMuT,EAAUd,KADS,EAEDrM,oBAAS,GAFR,mBAElBC,EAFkB,KAEZC,EAFY,OAGWF,mBAAS,IAHpB,mBAGlBiS,EAHkB,KAGNC,EAHM,KAIrB1X,EAAOqF,qBAAW7I,GAElBS,EAAUqI,cACVjB,EAAWkB,cAPU,EAQCC,mBAAS,IARV,mBAQlBrI,EARkB,KAQXsZ,EARW,OASKjR,mBAAS,IATd,mBASlBgT,EATkB,KASTC,EATS,OAUajT,mBAAS,GAVtB,mBAUlBkT,EAVkB,KAULC,EAVK,OAWOnT,mBAAS,IAXhB,mBAWlBoT,EAXkB,KAWRC,EAXQ,OAYuBrT,oBAAS,GAZhC,mBAYlBkR,EAZkB,KAYAC,EAZA,KAczBrI,qBAAU,WACRhP,QAAQC,IAAIS,EAAKA,MACjBV,QAAQC,IAAI8E,GACTA,EAAS1E,MAAMvC,WAEdqZ,EAAS,CAACrZ,SAAUiH,EAAS1E,MAAMvC,SAAUmT,WAAYlM,EAAS1E,MAAM4Q,aACxEoG,GAAoB,MAEvB,IAEH,IAOMC,EAAW,SAACxZ,EAAUmT,GAC1BjR,QAAQC,IAAInC,EAAUmT,GACtBkG,EAAS,CAAErZ,SAAUA,EAAUmT,WAAYA,IAC3CoG,GAAoB,IAGhBE,EAAe,WACnB,OAAIH,EAEA,gCACGvZ,EAAMC,SACN,IACD,cAAC2J,EAAA,EAAD,CAAQrJ,QAAQ,YAAYJ,MAAO,CAAEiP,WAAY,QAAjD,SACGpP,EAAMoT,aAET,cAAC8H,GAAA,EAAD,CACEC,aAAW,SACXtb,QAAS,kBAAM2Z,GAAoB,IAFrC,SAIE,cAAC,KAAD,CAAYvH,SAAS,eAMzB,cAAC,EAAD,CAAWlN,eAAe,EAAMsC,WAAYoS,EAAU5T,KAAK,WA4DjE,OACE,eAAC,KAAD,CACElG,UAAW6V,EAAQX,UACnBe,SAAS,KACTf,WAAS,EACTgB,MAAM,SAJR,UAME,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAKC,WAAW,iBAAhB,6BAEF,sBACExO,SAAU,SAAC2F,GACTA,EAAEpG,kBAFN,SAKE,eAACkP,GAAA,EAAD,CAAMpB,WAAS,EAACC,QAAS,EAAG3U,MAAO,CAAEkV,WAAY,IAAjD,UACE,cAACY,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,eAACqL,GAAA,EAAD,CAAMpB,WAAS,EAACC,QAAS,EAAzB,UACE,cAACmB,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAC8O,EAAD,MAEF,cAACzD,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAClD,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,aACN3C,KAAK,UACLpE,KAAK,QACLN,QAAQ,WACRuH,SAAU,SAACqF,GAAD,OAAOmO,EAAWnO,EAAEhJ,OAAOpD,YAGzC,cAACkV,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAClD,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,eACN3C,KAAK,UACLpE,KAAK,QACLN,QAAQ,WACRuH,SAAU,SAACqF,GAAD,OAAOqO,EAAerO,EAAEhJ,OAAOpD,YAG7C,cAACkV,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAClD,EAAA,EAAD,CACEC,WAAS,EACTpH,QAAQ,WACRyE,GAAG,iBACH4C,MAAM,0BACN/B,KAAK,iBACLlG,UAAW6V,EAAQmG,UACnBC,gBAAiB,CACfC,QAAQ,GAEV/T,SAAU,SAACqF,GAAD,OAAOuO,EAAYvO,EAAEhJ,OAAOpD,iBAK9C,cAACkV,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAf,SACE,cAAChB,EAAA,EAAD,CACEsM,MAAM,UACNvO,WAAS,EACT9B,KAAK,SACLtF,QAAQ,YACRV,QAtHI,WAGd,GAFAsC,QAAQC,IAAIpC,EAAOqb,EAASE,EAAaE,IAEpClC,EAGH,OAFAgB,EAAc,sDACdhS,GAAQ,GAGV,GAAgB,IAAZkT,EAGF,OAFAlB,EAAc,oCACdhS,GAAQ,GAGV,GAAe,IAAX8S,EAGF,OAFAd,EAAc,8BACdhS,GAAQ,GAGV,GAAmB,IAAfgT,EAGF,OAFAhB,EAAc,kCACdhS,GAAQ,GAIV,IAAIuT,EAAgBL,EAAS9Z,MAAM,KAC7Boa,EAAcD,EAAc,GAAK,IAAMA,EAAc,GAAK,MAChE3Z,QAAQC,IAAI2Z,GACZvV,MAAM,mCAAoC,CACxCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB3G,SAAUD,EAAMC,SAChB+b,WAAYX,EACZnE,UAAW6E,EACXE,aAAcV,IAEhB1U,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAG/C5F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACDA,EAAKgQ,MAAO7S,MAAM6C,EAAKgQ,QAEzBnT,aAAaC,QAAQ,MAAOkD,EAAKiQ,KACjCvT,EAAKwT,YACLlU,QAAQC,IAAIY,aAAa6I,QAAQ,YACjC/L,EAAQC,KACNiD,aAAa6I,QAAQ,WACjB7I,aAAa6I,QAAQ,WACrB,UA+DJ,wBAWF,cAACoK,GAAA,EAAD,CAAM3J,MAAI,EAAC1B,GAAI,GAAIiL,MAAM,SAAzB,SACE,eAACC,GAAA,EAAD,qCAC0B,IACxB,cAAC,IAAD,CACEQ,GAAG,IACHnW,MAAO,CAAEoW,eAAgB,OAAQL,MAAO,WAF1C,SAIE,cAACH,GAAA,EAAD,CAAKC,WAAW,iBAAhB,sCAMV,cAACQ,GAAA,EAAD,CAAUlO,KAAMA,EAAMmO,iBAAkB,IAAMC,QA9K9B,SAAC3S,EAAO4S,GACX,cAAXA,GAGJpO,GAAQ,IA0KN,SACE,cAAC,GAAD,CAAOqO,SAAS,QAAhB,SAAyB0D,YCtU3B4B,GAAU,WACd,OACE,cAAC,IAAD,UACE,qBAAKvc,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwc,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CACEF,OAAK,EACLC,KAAK,cACLC,OAAQ,SAAC5c,GAAD,OACN,cAAC,GAAD,eAA2CA,GAA3BA,EAAMyO,MAAMC,OAAOnJ,OAGvC,cAAC,IAAD,CACEmX,OAAK,EACLC,KAAK,mBACLC,OAAQ,SAAC5c,GAAD,OACN,cAAC,GAAD,eAA2CA,GAA3BA,EAAMyO,MAAMC,OAAOnJ,OAGvC,cAAC,IAAD,CACEmX,OAAK,EACLC,KAAK,mBACLC,OAAQ,kBACN,cAAC,GAAD,OAGJ,cAAC,IAAD,CACEF,OAAK,EACLC,KAAK,kBACLC,OAAQ,kBACN,cAAC,GAAD,OAGJ,cAAC,IAAD,CACEF,OAAK,EACLC,KAAK,oBACLC,OAAQ,kBACN,cAAC,GAAD,OAGJ,cAAC,IAAD,CACEF,OAAK,EACLC,KAAK,SACLC,OAAQ,kBACN,cAAC,GAAD,OAGJ,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAM,cAAC,GAAD,e,IAuErCC,G,kDArDb,WAAY7c,GAAQ,IAAD,8BACjB,cAAMA,IAMR8c,OAAS,WACPvZ,aAAawZ,QACb,EAAK/W,SAAS,CAAE5C,KAAM,MATL,EAYnB4Z,MAAQ,WAtBDjW,MAAM,yCAA0C,CACrDC,OAAQ,MACRI,QAAS,CACP,eAAgB,kCAChBmF,cAAc,UAAD,OAAYhJ,aAAa6I,QAAQ,WAoB7C5F,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACDA,EAAKuW,WACP,EAAKjX,SAAS,CACZ5C,KAAM,CACJmG,YAAa7C,EAAKwW,QAAQ3T,YAC1BqK,UAAWlN,EAAKwW,QAAQtJ,UACxBtQ,QAASoD,EAAKwW,QAAQ5Z,QACtBmG,SAAU/C,EAAKwW,QAAQzT,SACvB7C,QAASF,EAAKwW,QAAQtW,QACtBlB,KAAMgB,EAAKwW,QAAQrW,aAGvBnE,QAAQC,IAAI,EAAKI,MAAMK,OAEvB,EAAK4C,SAAS,CACZ5C,KAAM,KAEVV,QAAQC,IAAI+D,OA9BhB,EAAK3D,MAAQ,CACXK,KAAM,IAHS,E,qDAoCnB,WACEpC,KAAKgc,U,oBAEP,WACE,IAAM1b,EAAQ,CACZ8B,KAAMpC,KAAK+B,MAAMK,KACjB8G,WAAYlJ,KAAK8b,OACjBlG,UAAW5V,KAAKgc,OAElB,OACE,cAAC,EAAYG,SAAb,CAAsB7b,MAAOA,EAA7B,SACE,cAAC,GAAD,U,GAhDUS,aCrEHqb,I,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9W,MAAK,YAAkD,IAA/C+W,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAAShB,OAAO,cAAC,GAAD,IAAS/X,SAASiT,eAAe,SAKjD+F,O","file":"static/js/main.5d0f67ab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;\r\n","export default __webpack_public_path__ + \"static/media/search.3ea27197.svg\";","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../styles/HomePage.css\";\r\nimport \"../styles/movieCard.css\";\r\nimport ReactStars from \"react-stars\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Movie extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        className=\"movie\"\r\n        tag=\"a\"\r\n        onClick={() => {\r\n          this.props.history.push(`/movies/${this.props.movie.movie_id}`);\r\n        }}\r\n        border=\"none\"\r\n        style={{ width: \"250px\", height: \"470px\" }}\r\n      >\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={this.props.movie.poster_url}\r\n          style={{ width: \"250px\", height: \"calc(250px * (40/27))\" }}\r\n        />\r\n        <Card.ImgOverlay>\r\n          <ReactStars\r\n            className=\"home-star-rating\"\r\n            count={5}\r\n            size={18}\r\n            color2={\"#ffd700\"}\r\n            value={this.props.movie.avg_rating * 0.5}\r\n            edit={false}\r\n          />\r\n        </Card.ImgOverlay>\r\n        <Card.Body>\r\n          <Card.Title>{this.props.movie.movie_title}</Card.Title>\r\n          <Card.Text>{parseDate(this.props.movie.release_date)}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction parseDate(string) {\r\n  var arr = string.split(\" \");\r\n  var number = arr[1];\r\n  var order_suffix = \"\";\r\n  var month = arr[2];\r\n  var year = arr[3];\r\n  if (number.charAt(1) == \"1\") order_suffix = \"st\";\r\n  else if (number.charAt(1) == \"2\") order_suffix = \"nd\";\r\n  else if (number.charAt(1) == \"3\") order_suffix = \"rd\";\r\n  else order_suffix = \"th\";\r\n  if (number.charAt(0) == \"0\") number = number.charAt(1);\r\n  return number + order_suffix + \" \" + month + \" \" + year;\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default withRouter(Movie);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Movie from \"./movie\";\r\n\r\nclass Movies extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex align-content-stretch flex-wrap bd-highlight example-parent\">\r\n        {this.props.movies.map((movie) => (\r\n          <div\r\n            key={movie.movie_id}\r\n            className=\"p-2 bd-highlight col-example home-page-movie\"\r\n          >\r\n            <Movie movie={movie} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Movies);\r\n","import React, { Component } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport UserContext from \"../contexts/userContext\";\r\n\r\nclass SideBar extends Component {\r\n  static contextType = UserContext;\r\n  state = {};\r\n\r\n  goToListPage = () => {\r\n    if (!Object.keys(this.context.user).length) {\r\n      localStorage.setItem(\"lastLoc\", \"/\");\r\n      this.props.history.push(\"/login\");\r\n    } else this.props.history.push(`/users/${this.context.user.user_id}/lists`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Nav\r\n          className=\"col-md-12 d-none d-md-block bg-light sidebar\"\r\n          activeKey=\"/home\"\r\n          onSelect={(selectedKey) => alert(`selected ${selectedKey}`)}\r\n        >\r\n            <div className=\"sidebar-sticky\"></div>\r\n            <Nav.Item>\r\n            <Nav.Link onClick={this.goToListPage}>Lists</Nav.Link>\r\n          </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link href=\"/home\">About Us</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link eventKey=\"link-1\">Report Issue</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link eventKey=\"link-2\">Donate</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link eventKey=\"link-3\" disabled>\r\n            Merchandise\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SideBar);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\nclass TitleSearchResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.wrapperRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  /**\r\n   * Alert if clicked on outside of element\r\n   */\r\n  handleClickOutside = (event) => {\r\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n      this.props.clickedOutside(true);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.wrapperRef} className={this.props.dropdownClasses}>\r\n        {this.props.results.slice(0, 10).map((result) => (\r\n          <NavDropdown.Item\r\n            key={result.id}\r\n            onClick={() => {\r\n              if (this.props.entryDialogue) {\r\n                this.props.onClick(result.id, result.name);\r\n              } else {\r\n                this.props.history.push(`/movies/${result.id}`);\r\n              }\r\n            }}\r\n          >\r\n            {result.name}\r\n          </NavDropdown.Item>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TitleSearchResults);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  Nav,\r\n  Button,\r\n  Form,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport {\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport TitleSearchResults from \"./titleSearchResults\";\r\nimport movie from \"./movie\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    city: \"\",\r\n    movie: { title: \"\", genres: [], people: [] },\r\n    results: [],\r\n    typingTimout: 0,\r\n    dropdownClasses: \"dropdown-menu\",\r\n  };\r\n\r\n  clickedOutside = (bool) => {\r\n    if (bool) this.setState({ dropdownClasses: \"dropdown-menu\" });\r\n  };\r\n\r\n  changeName = (event) => {\r\n    if (this.state.typingTimeout) {\r\n      clearTimeout(this.state.typingTimeout);\r\n    }\r\n    if (this.props.type && this.props.type == \"city\") {\r\n      this.setState({ city: event.target.value });\r\n    } else {\r\n      this.setState({\r\n        movie: {\r\n          title: `${event.target.value}`,\r\n          genres: this.state.movie.genres,\r\n          people: this.state.movie.people,\r\n        },\r\n      });\r\n    }\r\n    if (event.target.value) {\r\n      this.state.typingTimeout = setTimeout(this.timedSearch, 500);\r\n    }\r\n  };\r\n\r\n  timedSearch = () => {\r\n    if (this.props.type == \"city\") {\r\n      this.searchCities(this.state.city)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          let results = [];\r\n          json.map(\r\n            (city, i) =>\r\n              (results[i] = { id: city.city_id, name: city.city_name })\r\n          );\r\n          console.log(results);\r\n          this.setState({ results: results });\r\n          return json;\r\n        })\r\n        .then((results) => {\r\n          if (results.length) {\r\n            this.setState({\r\n              dropdownClasses: \"show dropdown-menu\",\r\n            });\r\n          } else\r\n            this.setState({\r\n              dropdownClasses: \"dropdown-menu\",\r\n            });\r\n        });\r\n    } else {\r\n      this.searchMovie(this.state.movie)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          let results = [];\r\n          json.map(\r\n            (movie, i) =>\r\n              (results[i] = { id: movie.movie_id, name: movie.movie_title })\r\n          );\r\n          console.log(results);\r\n          this.setState({ results: results });\r\n          return json;\r\n        })\r\n        .then((results) => {\r\n          if (results.length) {\r\n            this.setState({\r\n              dropdownClasses: \"show dropdown-menu\",\r\n            });\r\n          } else\r\n            this.setState({\r\n              dropdownClasses: \"dropdown-menu\",\r\n            });\r\n        });\r\n    }\r\n  };\r\n\r\n  searchMovie = (movie) => {\r\n    return fetch(\"http://localhost:5000/api/search/movies\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(movie),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  };\r\n\r\n  searchCities = (city) => {\r\n    return fetch(\"http://localhost:5000/api/search/cities\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        city: city,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!this.props.entryDialogue) {\r\n      this.searchMovie(this.state.movie)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          this.props.history.push({\r\n            pathname: \"/\",\r\n            state: { movies: json },\r\n          });\r\n        })\r\n        .then(() => {\r\n          window.location.reload(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  clickHandler = (movie_id, movie_title) => {\r\n    this.clickedOutside(true);\r\n    this.props.sendResult(movie_id, movie_title);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.entryDialogue ? (\r\n          <Form\r\n            inline\r\n            onSubmit={this.submitHandler}\r\n            className=\"nav-item dropdown\"\r\n            autocomplete=\"off\"\r\n          >\r\n            <TextField\r\n                  fullWidth\r\n                  label = {this.props.type ? this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) : \"Search for a movie...\"}\r\n                  name=\"username\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={this.changeName}\r\n                />\r\n            <TitleSearchResults\r\n              type={this.props.type}\r\n              onClick={this.clickHandler}\r\n              entryDialogue={this.props.entryDialogue}\r\n              dropdownClasses={this.state.dropdownClasses}\r\n              results={this.state.results}\r\n              clickedOutside={this.clickedOutside}\r\n            />\r\n          </Form>\r\n        ) : (\r\n          <Form\r\n            inline\r\n            onSubmit={this.submitHandler}\r\n            className=\"nav-item dropdown\"\r\n          >\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              onChange={this.changeName}\r\n            />\r\n            <Button variant=\"outline-success\" type=\"submit\">\r\n              Search\r\n            </Button>\r\n            <TitleSearchResults\r\n              onClick={this.clickHandler}\r\n              entryDialogue={this.props.entryDialogue}\r\n              dropdownClasses={this.state.dropdownClasses}\r\n              results={this.state.results}\r\n              clickedOutside={this.clickedOutside}\r\n            />\r\n          </Form>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n","import React, {\r\n  Component,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport {\r\n  Avatar,\r\n  Typography,\r\n  Chip,\r\n  MenuItem,\r\n  Menu,\r\n  Divider,\r\n  Popper,\r\n  Paper,\r\n  Grow,\r\n  MenuList,\r\n  Button,\r\n  ClickAwayListener,\r\n} from \"@material-ui/core\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport SearchBar from \"./searchBar\";\r\n\r\nconst ProfileRender = () => {\r\n  let user = useContext(UserContext);\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  console.log(user);\r\n  if (!Object.keys(user.user).length) {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            localStorage.setItem(\"lastLoc\", location.pathname);\r\n            history.push(\"/login\");\r\n          }}\r\n        >\r\n          Log in\r\n        </Button>\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <div\r\n        style={{\r\n          border: \"grey\",\r\n          borderWidth: \"1px\",\r\n          borderRadius: \"30px\",\r\n          borderStyle: \"solid\",\r\n          padding: \"5px\",\r\n          textAlign: \"center\",\r\n        }}\r\n        onClick={handleToggle}\r\n      >\r\n        {user.user.profile_url ? (\r\n          <Avatar src={user.user.profile_url} ref={anchorRef}></Avatar>\r\n        ) : (\r\n          <Avatar ref={anchorRef}>{user.user.username.charAt(0).toUpperCase()}</Avatar>\r\n        )}\r\n        <Menu\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          disablePortal\r\n          transition\r\n        >\r\n            <MenuList id=\"menu-list-grow\">\r\n              <MenuItem onClick={()=>user.logoutUser()}>Logout</MenuItem>\r\n            </MenuList>\r\n        </Menu>\r\n        {/* <Button\r\n          onClick={() => {\r\n            this.context.logoutUser();\r\n          }}\r\n        >\r\n          Log out\r\n        </Button> */}\r\n      </div>\r\n    );\r\n};\r\n\r\nclass TopBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>Dodo Shows</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link\r\n              onClick={() => {\r\n                this.props.history.push(\"/\");\r\n              }}\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n            <SearchBar entryDialogue={false} />\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <ProfileRender />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TopBar);\r\n","import search from \"../images/search.svg\";\r\nimport \"../styles/HomePage.css\";\r\nimport React, { Component } from \"react\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport Movies from \"../components/movies\";\r\nimport SideBar from \"../components/sideBar\";\r\nimport TopBar from \"../components/topBar\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass HomePage extends Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this);\r\n    if (props.location.state) {\r\n      this.state = { movies: props.location.state.movies };\r\n      console.log(this.state);\r\n    } else this.fetchMovies();\r\n  }\r\n\r\n  fetchMovies = () => {\r\n    fetch(\"http://localhost:5000/api/movies/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        this.setState({ movies: json });\r\n        console.log(this.state.movies);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <TopBar />\r\n          <br></br>\r\n          <Row>\r\n            <Col xs={2} id=\"sidebar-wrapper\">\r\n              <SideBar />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <Container>\r\n                <Movies movies={this.state.movies} />\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n  // ShowUserMenu() {\r\n  //   document.getElementById(\"UserOptions\").classList.toggle(\"show\");\r\n  // }\r\n\r\n  // render() {\r\n  //   const HoverText = styled.a`\r\n  //     color: white;\r\n  //     text-decoration: none;\r\n\r\n  //     :hover {\r\n  //       color: black;\r\n  //       cursor: pointer;\r\n  //     }\r\n  //   `;\r\n  //   const UserLinks = styled.a`\r\n  //     color: white;\r\n  //     text-decoration: none;\r\n\r\n  //     :hover {\r\n  //       color: #b0e0e6;\r\n  //       cursor: pointer;\r\n  //     }\r\n  //   `;\r\n\r\n  //   return (\r\n  //     <body>\r\n  //       <div className=\"MovieCard\" />\r\n  //       <div className=\"toppanel\">\r\n  //         <button className=\"profilepic\" onClick={this.ShowUserMenu} />\r\n  //         <div id=\"UserOptions\" className=\"UserMenu\">\r\n  //           <div className=\"smallT\" />\r\n  //           <UserLinks href=\"#op1\">Your movies</UserLinks>\r\n  //           <br></br>\r\n  //           <br></br>\r\n  //           <UserLinks href=\"#op2\">Your friends</UserLinks>\r\n  //           <br></br>\r\n  //           <br></br>\r\n  //           <UserLinks href=\"#op3\">Your ratings</UserLinks>\r\n  //           <br></br>\r\n  //           <br></br>\r\n  //           <UserLinks href=\"#op4\">Invert colour theme</UserLinks>\r\n  //           <br></br>\r\n  //           <br></br>\r\n  //           <UserLinks href=\"#op5\">Logout</UserLinks>\r\n  //         </div>\r\n  //       </div>\r\n\r\n  //       <div className=\"search\">\r\n  //         <input type=\"image\" src={search} className=\"search-logo\" />\r\n  //         <input\r\n  //           type=\"text\"\r\n  //           className=\"SearchBar\"\r\n  //           placeholder=\"Search for a movie..\"\r\n  //         />\r\n  //       </div>\r\n\r\n  //       <div className=\"leftpanel\">\r\n  //         <p className=\"menu\">\r\n  //           <div className=\"r1\" />\r\n  //           <div className=\"r2\" />\r\n  //           <div className=\"r3\" />\r\n  //           <div className=\"r4\" />\r\n  //           <div className=\"r5\" />\r\n\r\n  //           <HoverText href=\"https://www.google.com\"> Trending </HoverText>\r\n  //           <br />\r\n  //           <br />\r\n  //           <HoverText href=\"https://www.google.com\"> Your lists </HoverText>\r\n  //           <br />\r\n  //           <br />\r\n  //           <HoverText href=\"https://www.google.com\">\r\n  //             {\" \"}\r\n  //             Future Releases{\" \"}\r\n  //           </HoverText>\r\n  //           <br />\r\n  //           <br />\r\n  //           <HoverText href=\"https://www.google.com\"> Watched </HoverText>\r\n  //           <br />\r\n  //           <br />\r\n  //           <HoverText href=\"https://www.google.com\"> About Us </HoverText>\r\n  //         </p>\r\n  //       </div>\r\n  //     </body>\r\n  //   );\r\n  // }\r\n}\r\nexport default withRouter(HomePage);\r\n","import React, { Component, useState } from \"react\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport SearchBar from \"./searchBar\";\r\n\r\nconst EntryDialogue = (props) => {\r\n  let history = useHistory();\r\n  const [movie, setMovie] = useState(\"\");\r\n  const [list, setList] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const postMovies = (event) => {\r\n    event.preventDefault();\r\n    console.log(localStorage.getItem(\"jwt\"));\r\n    if (movies.length) {\r\n      const movie_ids = movies.map((movie) => movie.movie_id);\r\n      console.log(movie_ids);\r\n      fetch(`http://localhost:5000/api/lists/${props.list.list_id}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          movie_ids,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.status != 200) {\r\n            localStorage.setItem(\"lastLoc\", `${history.location.pathname}`);\r\n            history.push(\"/login\");\r\n          }\r\n        })\r\n        .then(() => {\r\n          closeBox();\r\n          props.reloadPage();\r\n        });\r\n    }\r\n  };\r\n\r\n  function containsId(id, list) {\r\n    var i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i].movie_id === id) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n  const getMovie = (movie_id, movie_title) => {\r\n    console.log(movie_id);\r\n    console.log(movie_title);\r\n    if (!containsId(movie_id, movies))\r\n      setMovies((oldArray) => [\r\n        ...oldArray,\r\n        { movie_id: movie_id, movie_title: movie_title },\r\n      ]);\r\n  };\r\n  const removeMovie = (m) => {\r\n    setMovies(movies.filter((movie) => movie != m));\r\n  };\r\n  const closeBox = () => {\r\n    setMovies([]);\r\n    props.closeDialogue();\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Entry to list \"{props.list.list_name}\"</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <SearchBar entryDialogue={true} sendResult={getMovie} />\r\n        {movies.map((movie) => (\r\n          <Button\r\n            style={{ margin: \"10px\" }}\r\n            key={movie.movie_id}\r\n            onClick={() => removeMovie(movie)}\r\n          >\r\n            {movie.movie_title}\r\n          </Button>\r\n        ))}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={closeBox}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={postMovies}>\r\n          Add movies\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nclass List extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n  clicked = (id) => {\r\n    console.log(\"clicked\");\r\n    this.props.history.push(`/movies/${id}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <tbody>\r\n        {this.props.items.map((item, i) => (\r\n          <tr key={item.movie_id.toString()}>\r\n            <td>{i + 1}</td>\r\n            <td onClick={() => this.clicked(item.movie_id)}>\r\n              {item.movie_title}\r\n            </td>\r\n            <td>{item.score ? item.score : \"--\"}</td>\r\n            <td>{item.watch_status ? \"Watched\" : \"Plan to watch\"}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport { EntryDialogue };\r\nexport default withRouter(List);\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport React, { Component, useContext, useState } from \"react\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\n\r\nconst ListDialogue = (props) => {\r\n  let history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [isPrivate, setPrivate] = useState(false);\r\n  const user = useContext(UserContext);\r\n\r\n  const submitList = (event) => {\r\n    event.preventDefault();\r\n    console.log(name);\r\n    console.log(isPrivate);\r\n    console.log(localStorage.getItem(\"jwt\"));\r\n    fetch(\"http://localhost:5000/api/lists/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        list_name: name,\r\n        is_private: isPrivate,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status != 200) {\r\n          console.log(user);\r\n          localStorage.setItem(\"lastLoc\", `${history.location.pathname}`);\r\n          history.push(\"/login\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        props.reloadPage();\r\n      });\r\n  };\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add List</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={submitList}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter List Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Make this private\"\r\n              defaultChecked={isPrivate}\r\n              onChange={(e) => setPrivate(e.target.checked)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.closeDialogue}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\">Save Changes</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nclass AddList extends Component {\r\n  state = { show: false };\r\n  render() {\r\n    return (\r\n      <Button style={{ marginTop: \"20px\" }} onClick={this.props.onClick}>\r\n        Add list\r\n      </Button>\r\n    );\r\n  }\r\n}\r\nexport { ListDialogue };\r\nexport default withRouter(AddList);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport List from \"./list\";\r\nimport { Table, Button, Col, Row, FormControl, Form } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock, faSort } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport AddList, { Dialogue } from \"../components/addList\";\r\n\r\nclass Lists extends Component {\r\n  static contextType = UserContext;\r\n  state = {\r\n    entries: [],\r\n    ratings: [],\r\n    showWatched: true,\r\n    showUnwatched: true,\r\n    searchString: \"\",\r\n    sortMode: 1,\r\n    sort: 0,\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    console.log(this.props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    this.fetchEntries()\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status != 200) {\r\n          console.log(this.context.user);\r\n          localStorage.setItem(\"lastLoc\", `${this.props.location.pathname}`);\r\n          this.props.history.push(\"/login\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (this._isMounted) {\r\n          this.setState({ entries: json });\r\n        }\r\n      });\r\n    this.fetchRatings()\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status != 200) {\r\n          console.log(this.context.user);\r\n          localStorage.setItem(\"lastLoc\", `${this.props.location.pathname}`);\r\n          this.props.history.push(\"/login\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (this._isMounted) {\r\n          this.setState({ ratings: json });\r\n        }\r\n      });\r\n  }\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  fetchEntries = () => {\r\n    return fetch(\r\n      `http://localhost:5000/api/users/${this.props.match.params.id}/entries`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      }\r\n    );\r\n  };\r\n  fetchRatings = () => {\r\n    return fetch(\r\n      `http://localhost:5000/api/users/${this.props.match.params.id}/ratings`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  toggleWatched = () => {\r\n    console.log(\"watched\");\r\n    this.state.showWatched\r\n      ? this.setState({ showWatched: false })\r\n      : this.setState({ showWatched: true });\r\n  };\r\n  toggleUnwatched = () => {\r\n    console.log(\"unwatched\");\r\n    this.state.showUnwatched\r\n      ? this.setState({ showUnwatched: false })\r\n      : this.setState({ showUnwatched: true });\r\n  };\r\n  toggleSort = (mode) => {\r\n    this.state.sortMode == mode\r\n      ? this.state.sort == -1\r\n        ? this.setState({ sort: 1 })\r\n        : this.setState({ sort: -1 })\r\n      : this.setState({ sortMode: mode });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state.showWatched}\r\n                  onChange={this.toggleWatched}\r\n                  name=\"watched\"\r\n                />\r\n              }\r\n              label=\"Watched\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state.showUnwatched}\r\n                  onChange={this.toggleUnwatched}\r\n                  name=\"unwatched\"\r\n                />\r\n              }\r\n              label=\"Plan to watch\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={10}>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                      <Form.Label column sm={2}>\r\n                        Movie\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                        <FormControl\r\n                          value={this.state.searchString}\r\n                          type=\"text\"\r\n                          placeholder=\"Search...\"\r\n                          onChange={(event) =>\r\n                            this.setState({ searchString: event.target.value })\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </th>\r\n                  <th>\r\n                    Score\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"5px\" }}\r\n                      icon={faSort}\r\n                      onClick={() => this.toggleSort(1)}\r\n                    />\r\n                  </th>\r\n                  <th>\r\n                    Watch Status\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"5px\" }}\r\n                      icon={faSort}\r\n                      onClick={() => this.toggleSort(2)}\r\n                    />\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <List\r\n                key={this.state.sort}\r\n                items={\r\n                  !this.props.selected_all\r\n                    ? this.state.entries\r\n                        .filter(\r\n                          (entry) =>\r\n                            entry.list_id == this.props.selected_list.list_id\r\n                        )\r\n                        .filter((entry) => {\r\n                          if (this.state.showWatched && entry.watch_status == 1)\r\n                            return true;\r\n                          else if (\r\n                            this.state.showUnwatched &&\r\n                            entry.watch_status == 0\r\n                          )\r\n                            return true;\r\n                          return false;\r\n                        })\r\n                        .filter(\r\n                          (entry) =>\r\n                            entry.movie_title\r\n                              .toLowerCase()\r\n                              .search(this.state.searchString.toLowerCase()) >=\r\n                            0\r\n                        )\r\n                        .sort((a, b) => {\r\n                          if (this.state.sortMode == 1)\r\n                            return (a.score - b.score) * this.state.sort;\r\n                          if (this.state.sortMode == 2)\r\n                            return (\r\n                              (a.watch_status - b.watch_status) *\r\n                              this.state.sort\r\n                            );\r\n                        })\r\n                    : this.state.ratings\r\n                        .filter((entry) => {\r\n                          if (this.state.showWatched && entry.watch_status == 1)\r\n                            return true;\r\n                          else if (\r\n                            this.state.showUnwatched &&\r\n                            entry.watch_status == 0\r\n                          )\r\n                            return true;\r\n                          return false;\r\n                        })\r\n                        .filter(\r\n                          (entry) =>\r\n                            entry.movie_title\r\n                              .toLowerCase()\r\n                              .search(this.state.searchString.toLowerCase()) >=\r\n                            0\r\n                        )\r\n                        .sort((a, b) => {\r\n                          if (this.state.sortMode == 1)\r\n                            return (a.score - b.score) * this.state.sort;\r\n                          if (this.state.sortMode == 2)\r\n                            return (\r\n                              (a.watch_status - b.watch_status) *\r\n                              this.state.sort\r\n                            );\r\n                        })\r\n                }\r\n              />\r\n            </Table>\r\n            <Button\r\n              style={{ display: this.props.selected_all ? \"none\" : \"block\" }}\r\n              onClick={() =>\r\n                this.props.showEntryDialogue(this.props.selected_list)\r\n              }\r\n            >\r\n              + Add movie to this list\r\n            </Button>\r\n            <Button\r\n              style={{ display: this.props.selected_all ? \"block\" : \"none\" }}\r\n              onClick={() =>\r\n                this.props.showRatingDialogue()\r\n              }\r\n            >\r\n              + Add movie\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <div className=\"btn-group-justified btn-group-vertical\">\r\n              <Button\r\n                className={this.props.selected_all ? \"btn-success\" : null}\r\n                style={{ marginBottom: \"20px\" }}\r\n                onClick={() => this.props.setSelectedAll(true)}\r\n              >\r\n                All\r\n              </Button>\r\n              <br></br>\r\n              <br></br>\r\n              {this.props.lists.map((list) => (\r\n                <Button\r\n                  key={list.list_id}\r\n                  className={\r\n                    list.list_id == this.props.selected_list.list_id &&\r\n                    !this.props.selected_all\r\n                      ? \"btn-success\"\r\n                      : \"btn-primary\"\r\n                  }\r\n                  style={{ marginBottom: \"3px\" }}\r\n                  onClick={() => {\r\n                    this.props.setSelectedAll(false);\r\n                    this.props.changeSelected(list);\r\n                  }}\r\n                >\r\n                  {list.is_private ? (\r\n                    <FontAwesomeIcon\r\n                      style={{ marginRight: \"5px\" }}\r\n                      icon={faLock}\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  {list.list_name}\r\n                </Button>\r\n              ))}\r\n              <br></br>\r\n              <br></br>\r\n              <AddList onClick={this.props.showListDialogue} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Lists);\r\n","import React, { Component, useContext, useState, useEffect } from \"react\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport {\r\n  Card,\r\n  Image,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport \"../styles/personCard.css\";\r\nimport lists from \"./lists\";\r\n\r\nconst FullRating = (props) => {\r\n  let [newRating, setNewRating] = useState({\r\n    movie_id: props.movie_id,\r\n    watch_status: 0,\r\n    score: 0,\r\n    review: \"\",\r\n  });\r\n  let user = useContext(UserContext);\r\n  let [rating, setRating] = useState({\r\n    user_id: 0,\r\n    movie_id: 0,\r\n    watch_status: 0,\r\n    score: 0,\r\n    review: \"\",\r\n  });\r\n  let [ratingExists, setRatingExists] = useState(false);\r\n  let [lists, setLists] = useState([]);\r\n  let [editMode, setEditMode] = useState(true);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(user.user);\r\n    console.log(props);\r\n    fetchRating();\r\n    if (props.showLists) fetchLists();\r\n  }, [user]);\r\n\r\n  const fetchRating = () => {\r\n    console.log(user.user);\r\n    console.log(props);\r\n    if (Object.keys(user.user).length)\r\n      fetch(\r\n        `http://localhost:5000/api/users/${user.user.user_id}/${props.movie_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n          },\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          console.log(json);\r\n          if (json && Object.keys(json).length && !json.msg) {\r\n            setRatingExists(true);\r\n            setRating(json);\r\n            setEditMode(false);\r\n            setNewRating((prevState) => ({\r\n              ...prevState,\r\n              watch_status: json.watch_status,\r\n              score: json.score,\r\n              review: json.review,\r\n            }));\r\n          }\r\n        });\r\n  };\r\n\r\n  const fetchLists = () => {\r\n    console.log(user.user);\r\n    console.log(props);\r\n    if (Object.keys(user.user).length)\r\n      fetch(\r\n        `http://localhost:5000/api/users/${user.user.user_id}/movies/${props.movie_id}/lists`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n          },\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          console.log(json);\r\n          if (json && Object.keys(json).length && !json.msg) {\r\n            setLists(json);\r\n          }\r\n        });\r\n  };\r\n\r\n  const submitRating = () => {\r\n    console.log(newRating);\r\n    fetch(`http://localhost:5000/api/users/${user.user.user_id}`, {\r\n      method: ratingExists ? \"PUT\" : \"POST\",\r\n      body: JSON.stringify(newRating),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status != 200) {\r\n          localStorage.setItem(\"lastLoc\", `${history.location.pathname}`);\r\n          history.push(\"/login\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        fetchRating();\r\n        setEditMode(false);\r\n      });\r\n  };\r\n  console.log(Object.keys(rating).length);\r\n  if (Object.keys(user.user).length && rating) {\r\n    if (!editMode) {\r\n      if (ratingExists && Object.keys(rating).length) {\r\n        return (\r\n          <Row>\r\n            <Col>\r\n              <Card\r\n                border={rating.watch_status ? \"success\" : \"secondary\"}\r\n                style={{ width: \"18rem\" }}\r\n              >\r\n                <Card.Header>\r\n                  {rating.watch_status ? \"Watched\" : \"Plan to watch\"}\r\n                </Card.Header>\r\n                <ListGroup className=\"list-group-flush\">\r\n                  <ListGroupItem>\r\n                    <Card.Text>\r\n                      Your score:<br></br>\r\n                      <Rating\r\n                        name=\"read-only\"\r\n                        value={rating.score * 0.5}\r\n                        max={5}\r\n                        precision={0.5}\r\n                        size=\"small\"\r\n                        readOnly\r\n                        emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                      />\r\n                    </Card.Text>\r\n                  </ListGroupItem>\r\n                  <ListGroupItem>\r\n                    <Card.Title>Your review:</Card.Title>\r\n                    <Card.Text>{rating.review}</Card.Text>\r\n                  </ListGroupItem>\r\n                </ListGroup>\r\n                <Card.Footer>\r\n                  <Button size=\"sm\" onClick={() => setEditMode(true)}>\r\n                    Edit\r\n                  </Button>\r\n                </Card.Footer>\r\n              </Card>\r\n            </Col>\r\n            {props.showLists ? <PresentInLists lists={lists} /> : <></>}\r\n          </Row>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <Card\r\n          border={newRating.watch_status ? \"success\" : \"secondary\"}\r\n          style={{ width: \"18rem\" }}\r\n        >\r\n          <Card.Header>\r\n            <DropdownButton\r\n              variant={newRating.watch_status ? \"success\" : \"secondary\"}\r\n              title={newRating.watch_status ? \"Watched\" : \"Plan to watch\"}\r\n            >\r\n              <Dropdown.Item\r\n                eventKey=\"1\"\r\n                onClick={() =>\r\n                  newRating.watch_status\r\n                    ? setNewRating((prevState) => ({\r\n                        ...prevState,\r\n                        watch_status: 0,\r\n                      }))\r\n                    : setNewRating((prevState) => ({\r\n                        ...prevState,\r\n                        watch_status: 1,\r\n                      }))\r\n                }\r\n              >\r\n                {!newRating.watch_status ? \"Watched\" : \"Plan to watch\"}\r\n              </Dropdown.Item>\r\n            </DropdownButton>\r\n          </Card.Header>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>\r\n              <Card.Text>\r\n                Your score:<br></br>\r\n                <Rating\r\n                  name=\"customized-empty\"\r\n                  className=\"user-rating\"\r\n                  value={newRating.score * 0.5}\r\n                  max={5}\r\n                  precision={0.5}\r\n                  size=\"small\"\r\n                  emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                  onChange={(event, newScore) => {\r\n                    setNewRating((prevState) => ({\r\n                      ...prevState,\r\n                      score: newScore * 2,\r\n                    }));\r\n                  }}\r\n                />\r\n              </Card.Text>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <Card.Title>Your review:</Card.Title>\r\n              <Card.Text>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  defaultValue={newRating.review}\r\n                  onChange={(event) => {\r\n                    setNewRating((prevState) => ({\r\n                      ...prevState,\r\n                      review: event.target.value,\r\n                    }));\r\n                  }}\r\n                />\r\n              </Card.Text>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          <Card.Footer>\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => setEditMode(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"float-right\"\r\n              size=\"sm\"\r\n              onClick={submitRating}\r\n            >\r\n              {ratingExists ? \"Save\" : \"Add\"}\r\n            </Button>\r\n          </Card.Footer>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n  return <></>;\r\n};\r\n\r\nconst PresentInLists = (props) => {\r\n  let user = useContext(UserContext);\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Col>\r\n      <div className=\"btn-group-justified btn-group-vertical\">\r\n        <div style={{ marginBottom: \"10px\" }}>Present in lists:</div>\r\n        {props.lists.length ? (\r\n          props.lists.map((list) => (\r\n            <Button\r\n              key={list.list_id}\r\n              size=\"sm\"\r\n              style={{ marginBottom: \"10px\" }}\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: `/users/${user.user.user_id}/lists`,\r\n                  state: { selected_list: list },\r\n                })\r\n              }\r\n            >\r\n              {\" \"}\r\n              {list.is_private ? (\r\n                <FontAwesomeIcon style={{ marginRight: \"5px\" }} icon={faLock} />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {list.list_name}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            disabled\r\n          >\r\n            Not in any :(\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst OthersRatings = (props) => {\r\n  let [ratings, setRatings] = useState([]);\r\n  let [friends, setFriends] = useState([]);\r\n  let [onlyFriends, setOnlyFriends] = useState(false);\r\n  useEffect(() => {\r\n    console.log(props);\r\n    fetchRatings();\r\n  }, []);\r\n\r\n  const fetchRatings = () => {\r\n    console.log(props);\r\n    fetch(`http://localhost:5000/api/movies/${props.movie_id}/ratings`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (json && Object.keys(json).length && !json.msg) {\r\n          setRatings(json.ratings);\r\n          setFriends(json.friends.map((friend) => friend.user_id2));\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n        style={{ marginBottom: \"50px\" }}\r\n        variant={onlyFriends ? \"success\" : \"secondary\"}\r\n        title={onlyFriends ? \"Reviews from friends\" : \"Reviews from everyone\"}\r\n      >\r\n        <Dropdown.Item\r\n          eventKey=\"1\"\r\n          onClick={() =>\r\n            onlyFriends\r\n              ? setOnlyFriends(false)\r\n              : setOnlyFriends(true)\r\n          }\r\n        >\r\n          {!onlyFriends ? \"Reviews from friends\" : \"Reviews from everyone\"}\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n      {ratings.length? ratings\r\n        .filter((rating) =>\r\n          onlyFriends ? friends.includes(rating.user_id) : true\r\n        )\r\n        .map((rating) => (\r\n          <Card key={rating.user_id} style={{ marginBottom: \"50px\" }}>\r\n            <Card.Header>{rating.username}</Card.Header>\r\n            <Card.Body>\r\n              <blockquote className=\"blockquote mb-0\">\r\n                <p> \"{rating.review}\" </p>\r\n                <Card.Subtitle>\r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    value={rating.score * 0.5}\r\n                    max={5}\r\n                    precision={0.5}\r\n                    size=\"small\"\r\n                    emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                    readOnly\r\n                  />\r\n                </Card.Subtitle>\r\n              </blockquote>\r\n            </Card.Body>\r\n          </Card>\r\n        )):\r\n        <Card style={{ marginBottom: \"50px\" }}>\r\n            <Card.Body>\r\n                No reviews :(\r\n            </Card.Body>\r\n          </Card>}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nclass MovieDetailed extends Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    movie_id: this.props.movie_id,\r\n    movie: [],\r\n    genres: [],\r\n    people: [],\r\n    AdminFlag: 0\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.fetchMovie(this.state.movie_id);\r\n    console.log(this.props);\r\n    console.log(context);\r\n  }\r\n  AddShowsToggle = (movie_id, movie_name) => {\r\n    if(this.context.user.user_role === \"ADM\"){\r\n      return( <Button\r\n       variant=\"warning\"\r\n       style={{marginBottom: \"30px\"}}\r\n       onClick={() => {\r\n         this.props.history.push({\r\n           pathname: `/shows/`,\r\n           state: { movie_id: movie_id, movie_name: movie_name },\r\n         });\r\n         console.log(\"In AddShowsToggle\",this.state.movie.movie_id, this.state.movie.movie_title);\r\n       }}\r\n       block\r\n     >\r\n       Add Show [FOR ADMINS ONLY]\r\n     </Button>);\r\n  }\r\n \r\n   \r\n  };\r\n\r\n  fetchMovie(movie_id) {\r\n    fetch(`http://localhost:5000/api/movies/${movie_id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        this.setState({ movie: json });\r\n        this.setState({ people: json.people });\r\n        this.setState({ genres: json.genres });\r\n        console.log(this.state.people);\r\n        console.log(this.state.genres);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(\"hi2\");\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Image\r\n              src={this.state.movie.poster_url}\r\n              style={{ width: \"350px\", height: \"calc(350px * (40/27))\" }}\r\n              thumbnail\r\n            />\r\n            <div style={{ overflow: \"hidden\", position: \"relative\" }}>\r\n              <Rating\r\n                name=\"read-only\"\r\n                value={this.state.movie.avg_rating * 0.5}\r\n                max={5}\r\n                precision={0.1}\r\n                size=\"large\"\r\n                readOnly\r\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <h1 className=\"display-4\">{this.state.movie.movie_title}</h1>\r\n            {this.state.genres.map((genre) => (\r\n              <div key={genre.genre_id}>\r\n                {capitalizeFirstLetter(genre.genre_name)}\r\n              </div>\r\n            ))}\r\n            {this.state.movie.movie_description}\r\n            <br></br>\r\n            <br></br>\r\n            <Button\r\n              variant=\"danger\"\r\n              style={{ marginBottom: \"30px\" }}\r\n              onClick={() => {\r\n                this.props.history.push({\r\n                  pathname: `/movies/${this.state.movie.movie_id}/shows`,\r\n                  state: { movie_id: this.state.movie.movie_id },\r\n                });\r\n                console.log(this.state.movie.movie_id);\r\n              }}\r\n              block\r\n            >\r\n              Book\r\n            </Button>\r\n            {this.AddShowsToggle(this.state.movie.movie_id, this.state.movie.movie_title)}\r\n            <FullRating\r\n              key={this.props.movie_id}\r\n              movie_id={this.props.movie_id}\r\n              showLists={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className=\"d-flex align-content-stretch flex-wrap bd-highlight example-parent person\">\r\n          {this.state.people.map((person) => (\r\n            <div\r\n              key={person.person_id}\r\n              className=\"p-2 bd-highlight col-example\"\r\n            >\r\n              <Card\r\n                border=\"secondary\"\r\n                style={{ width: \"160px\", height: \"300px\" }}\r\n              >\r\n                <Card.Header>\r\n                  {person.person_role == \"NULL\" ? \"Crew\" : \"Cast\"}\r\n                </Card.Header>\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={person.profile_url}\r\n                  className=\"img-fluid\"\r\n                  style={{ width: \"auto\", height: \"150px\" }}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>{person.person_name}</Card.Title>\r\n                  <Card.Text>\r\n                    {person.person_role == \"NULL\"\r\n                      ? capitalizeFirstLetter(person.cast_or_crew)\r\n                      : \"As \" + parseRoles(person.person_role)}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <OthersRatings movie_id={this.state.movie_id} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nfunction parseRoles(string) {\r\n  var arr = string.split('\"');\r\n  var i;\r\n  var result = \"\";\r\n  for (i = 1; i < arr.length - 1; i += 1) {\r\n    result = result + arr[i];\r\n    if (i % 2 == 0) result += \" \";\r\n  }\r\n  return result;\r\n}\r\n\r\nexport { FullRating };\r\nexport default withRouter(MovieDetailed);\r\n","import React, { Component } from \"react\";\r\nimport SideBar from \"../components/sideBar\";\r\nimport TopBar from \"../components/topBar\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport MovieDetailed from \"../components/movieDetailed\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass MoviePage extends Component {\r\n  state = {\r\n    movie_id: this.props.match.params.id,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <TopBar />\r\n          <br></br>\r\n          <Row>\r\n            <Col xs={2} id=\"sidebar-wrapper\">\r\n              <SideBar />\r\n            </Col>\r\n            <Col xs={10}>\r\n              <MovieDetailed movie_id={this.state.movie_id} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MoviePage);\r\n","import React, { Component, useContext, useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../contexts/userContext\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    minHeight: 65,\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst LoginPage = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  let user = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const doLogin = () => {\r\n    fetch(\"http://localhost:5000/api/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.error) alert(json.error);\r\n        else {\r\n          localStorage.setItem(\"jwt\", json.jwt);\r\n          user.loginUser();\r\n          console.log(localStorage.getItem(\"lastLoc\"));\r\n          history.push(\r\n            localStorage.getItem(\"lastLoc\")\r\n              ? localStorage.getItem(\"lastLoc\")\r\n              : \"/\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Container\r\n      className={classes.container}\r\n      maxWidth=\"xs\"\r\n      container\r\n      align=\"center\"\r\n    >\r\n      <Typography>\r\n        <Box fontWeight=\"fontWeightBold\">Login</Box>\r\n      </Typography>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <Grid container spacing={3} style={{ paddingTop: 40 }}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  size=\"small\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={() => doLogin()}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} align=\"center\">\r\n            <Typography>\r\n              Don't have an account?{\" \"}\r\n              <Link\r\n                to=\"/signup\"\r\n                style={{ textDecoration: \"none\", color: \"#3f50b5\" }}\r\n              >\r\n                <Box fontWeight=\"fontWeightBold\">Sign up</Box>\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert severity=\"error\">Your form details are not valid!</Alert>\r\n      </Snackbar>\r\n    </Container>\r\n    // <Form onSubmit={this.doLogin}>\r\n    //   <Form.Group controlId=\"formBasicEmail\">\r\n    //     <Form.Label>Username</Form.Label>\r\n    //     <Form.Control\r\n    //       type=\"text\"\r\n    //       placeholder=\"Enter username\"\r\n    //       onChange={this.handleUsernameChange}\r\n    //     />\r\n    //   </Form.Group>\r\n\r\n    //   <Form.Group controlId=\"formBasicPassword\">\r\n    //     <Form.Label>Password</Form.Label>\r\n    //     <Form.Control\r\n    //       type=\"password\"\r\n    //       placeholder=\"Password\"\r\n    //       onChange={this.handlePasswordChange}\r\n    //     />\r\n    //   </Form.Group>\r\n    //   <Button variant=\"primary\" type=\"submit\">\r\n    //     Submit\r\n    //   </Button>\r\n    // </Form>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { withRouter } from \"react-router\";\r\nimport { Card, Image, Container, Row, Col, Button} from \"react-bootstrap\";\r\n\r\nclass ShowsPage extends Component{\r\n  \r\n      constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            movie_id: this.props.location.state.movie_id,\r\n            //startDate: new Date(),\r\n            shows:[]\r\n        }\r\n        //console.log(this.props);\r\n        this.fetchShows(this.state.movie_id);\r\n      }\r\n     /*handleChange = (date) => {\r\n        this.setState({\r\n          startDate: date\r\n        })\r\n      }\r\n      onFormSubmit = (e) => {\r\n       e.preventDefault();\r\n       console.log(this.state.startDate);\r\n       console.log(this.state.shows);\r\n    }*/\r\n\r\n      fetchShows(movie_id){\r\n        fetch(`http://localhost:5000/api/movies/${movie_id}/shows`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n       this.setState({shows: json})\r\n       \r\n       console.log(json);\r\n      });\r\n      }\r\n      render(){\r\n          return (\r\n       /* <form onSubmit={ this.onFormSubmit }>  \r\n        <div className=\"form-group\">\r\n        <p className = \"ShowTitle\"> Choose Date and Time: </p>\r\n          <DatePicker\r\n              selected={ this.state.startDate }\r\n              onChange={ this.handleChange }\r\n              name=\"startDate\"\r\n              dateFormat=\"MM/dd/yyyy\"\r\n          />\r\n         <button className=\"btn btn-primary\">Set Date</button>\r\n        </div>\r\n      </form>*/\r\n   <div className = \"ShowList\">\r\n   {this.state.shows.map((show) => \r\n       (<div\r\n          key={show.show_id}\r\n          className=\"d-flex flex-column bd-highlight mb-3\"\r\n        >\r\n      <Card bg=\"dark\" text = \"light\">\r\n  <Card.Header as=\"h5\" >Featured</Card.Header>\r\n  <Card.Body>\r\n    <Card.Title>{show.theatre_mall}</Card.Title>\r\n    <Card.Text>\r\n      {show.date_time}\r\n    </Card.Text>\r\n    <Button variant=\"success\" onClick={() => {\r\n          this.props.history.push({pathname:`/shows/${show.show_id}/seats`, state:{show_id:show.show_id}});\r\n          console.log(show.show_id);\r\n        }}>Book Show</Button>\r\n  </Card.Body>\r\n</Card>\r\n        \r\n       </div>\r\n   ))}\r\n     </div>\r\n \r\n      \r\n          );\r\n      }\r\n}\r\nexport default withRouter(ShowsPage);","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Card, Image, Container, Row, Col, Button} from \"react-bootstrap\";\r\nimport Box from '@material-ui/core/Box';\r\nimport \"../styles/SeatsPage.css\";\r\nimport { TableRow } from \"@material-ui/core\";\r\n\r\nvar BookedSeats = []\r\nclass SeatsPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            show_id: this.props.location.state.show_id,\r\n            seats:[]\r\n        }\r\n        this.fetchSeats(this.state.show_id);\r\n    }\r\n    \r\n    RemoveSeat(arr, value) {\r\n        var index = arr.indexOf(value);\r\n        if (index > -1) {\r\n          arr.splice(index, 1);\r\n        }\r\n        return arr;\r\n      }\r\n\r\n    SeatSelect=(id)=>{\r\n        //console.log(\"Pressed\");\r\n        let t = document.getElementById(id).classList.toggle(\"select\");\r\n        if(t==true){\r\n            BookedSeats.push(id);\r\n        }\r\n        else{\r\n            this.RemoveSeat(BookedSeats,id);\r\n            \r\n        }\r\n    }\r\n\r\n    SeatCheck=(code,status)=>{\r\n        if(status==0){\r\n            return(\r\n                <button style ={{width:\"76px\", height:\"60px\", backgroundColor:\"red\", borderRadius:\"20px\", boxShadow:\"3px 4px\"}} id = {code} >{code}</button>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <button style ={{width:\"76px\", height:\"60px\", borderRadius:\"20px\",boxShadow:\"3px 4px\"}} id = {code} onClick={()=>this.SeatSelect(code)}>{code}</button>\r\n            );\r\n        }\r\n    }\r\n\r\n    SortSeats=(a)=>{\r\n        let i;\r\n        let j;\r\n        for(i=0;i<a.length;i++){\r\n            for(j=0;j<a.length-1;j++){\r\n                let n = parseInt(a[j].seat_code.slice(1));\r\n                let m = parseInt(a[j+1].seat_code.slice(1));\r\n                let c = a[j].seat_code.charAt(0);\r\n                let d = a[j+1].seat_code.charAt(0);\r\n                if(c.localeCompare(d)==0){\r\n                    if(n>m){\r\n                        let temp = a[j];\r\n                        a[j]=a[j+1];\r\n                        a[j+1]=temp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    fetchSeats(show_id){\r\n        fetch(`http://localhost:5000/api/shows/${show_id}/seats`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n       this.setState({seats: this.SortSeats(json)})\r\n       console.log(\"Sorted seats:\",this.SortSeats(json));\r\n      });\r\n    }\r\n    \r\n      render(){\r\n          return(\r\n              <>\r\n              <br/>\r\n              <p className = \"seattitle\">SELECT YOUR SEATS</p>\r\n              \r\n              <br/>\r\n              <div class=\"container-xxl\" style={{border:\"10px solid black\", marginLeft:\"10px\",marginRight:\"10px\",marginTop:\"10px\", backgroundColor:\"grey\"}}>\r\n\r\n                  <Row>\r\n                  {this.state.seats.map((seats) =>\r\n                  (\r\n                      <Col key={seats.seat_code} >\r\n                           <br/>\r\n                          {this.SeatCheck(seats.seat_code,seats.seat_status)}\r\n                          <br/>\r\n                         \r\n                      </Col>\r\n                        \r\n                      ))\r\n                   }\r\n                   </Row>\r\n\r\n              </div>\r\n              <hr size='30px' color=\"blue\"/>\r\n              <p className = \"screen\">SCREEN HERE</p>\r\n              <br/><br/>\r\n              <br/><br/>\r\n              <Button variant=\"success\" \r\n              style={{width: \"50%\",height: \"100px\",marginRight: \"25%\",marginLeft: \"25%\",\r\n              fontSize:\"30px\", borderRadius:\"100px\"}} onClick={() => {\r\n                this.props.history.push({pathname:`/shows/${this.state.show_id}/book`, state:{SeatsBooked:BookedSeats,show_id:this.state.show_id}});\r\n                \r\n              }}>Proceed to pay</Button>\r\n              \r\n              </>\r\n\r\n          );\r\n      }\r\n    \r\n}\r\nexport default withRouter(SeatsPage);","import React, { useState } from \"react\";\r\nimport GooglePayButton from \"@google-pay/button-react\";\r\n\r\nfunction PaymentButton() {\r\n    const paymentRequest = {\r\n      apiVersion: 2,\r\n      apiVersionMinor: 0,\r\n      allowedPaymentMethods: [\r\n        {\r\n          type: \"CARD\",\r\n          parameters: {\r\n            allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\r\n            allowedCardNetworks: [\"MASTERCARD\", \"VISA\"]\r\n          },\r\n          tokenizationSpecification: {\r\n            type: \"PAYMENT_GATEWAY\",\r\n            parameters: {\r\n              gateway: \"example\"\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      merchantInfo: {\r\n        merchantId: \"12345678901234567890\",\r\n        merchantName: \"Demo Merchant\"\r\n      },\r\n      transactionInfo: {\r\n        totalPriceStatus: \"FINAL\",\r\n        totalPriceLabel: \"Total\",\r\n        totalPrice: \"100.00\",\r\n        currencyCode: \"USD\",\r\n        countryCode: \"US\"\r\n      }\r\n    };\r\n    const [buttonColor, setButtonColor] = useState(\"default\");\r\n  const [buttonType, setButtonType] = useState(\"plain\");\r\n  const [buttonSizeMode, setButtonSizeMode] = useState(\"static\");\r\n  const [buttonWidth, setButtonWidth] = useState(300);\r\n  const [buttonHeight, setButtonHeight] = useState(90);\r\n  return(\r\n    <GooglePayButton\r\n    environment=\"TEST\"Home\r\n    buttonColor={buttonColor}\r\n    buttonType={buttonType}\r\n    buttonSizeMode={buttonSizeMode}\r\n    paymentRequest={paymentRequest}\r\n    onLoadPaymentData={paymentRequest => {\r\n      console.log(\"load payment data\", paymentRequest);\r\n    }}\r\n    style={{ width: buttonWidth, height: buttonHeight }}\r\n  />\r\n  );\r\n}\r\nexport default PaymentButton;","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Card, Image, Container, Row, Col, Button} from \"react-bootstrap\";\r\nimport PaymentButton from \"../components/PaymentButton\";\r\nimport \"../styles/BookingPage.css\";\r\n\r\nclass BookingPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            BSeats: this.props.location.state.SeatsBooked, \r\n            show_id: this.props.location.state.show_id\r\n        }\r\n        console.log(this.state.BSeats);\r\n    }\r\n\r\n    Book(seats,show_id){\r\n        fetch(`http://localhost:5000/api/shows/${show_id}/book`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n            seats: seats,\r\n            paymentDeets: \"hi\"\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n       this.setState({seats: json})\r\n       \r\n       console.log(json);\r\n      });\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n     \r\n            <div className=\"GPay\">\r\n                <p className = \"Thanks\">Thank you! Please complete your booking by paying below. Make sure to receive your ticket! Enjoy</p>\r\n                <Button variant=\"info\" size = \"lg\" block>Payment Gateway</Button>\r\n                <br/>\r\n                <br/>\r\n               \r\n                <Button variant=\"success\" size = \"lg\" onClick={()=> this.Book(this.state.BSeats,this.state.show_id)} block style={{boxShadow:\"3px 4px\"}}>Send ticket</Button>\r\n                <br/>\r\n                <br/>\r\n                <Button variant=\"warning\" size = \"lg\" block onClick={() => {\r\n                this.props.history.push(\"/\");\r\n              }}>Back to Home</Button>\r\n                <br/>\r\n                <br/>\r\n                <br/><br/><br/><br/>\r\n            </div>\r\n           \r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BookingPage);\r\n\r\n","import { FullRating } from \"./movieDetailed\";\r\nimport React, { Component, useState } from \"react\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport SearchBar from \"./searchBar\";\r\n\r\nconst RatingDialogue = (props) => {\r\n  const [movie, setMovie] = useState({});\r\n    const [hasSelectedMovie, setHasSelectedMovie] = useState(false);\r\n\r\n  const getMovie = (movie_id, movie_title) => {\r\n    console.log(movie_id);\r\n    console.log(movie_title);\r\n    setMovie({ movie_id: movie_id, movie_title: movie_title });\r\n    setHasSelectedMovie(true);\r\n  };\r\n  const closeBox = () => {\r\n    setMovie({});\r\n    props.closeDialogue();\r\n  };\r\n\r\n  const MovieDisplay = () => {\r\n    if (hasSelectedMovie) {\r\n      return (\r\n        <div>\r\n          <Button onClick={() => setHasSelectedMovie(false)} style={{marginBottom: \"10px\"}}>\r\n            {movie.movie_title}\r\n          </Button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <SearchBar entryDialogue={true} sendResult={getMovie} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add a movie</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <MovieDisplay/>\r\n        {hasSelectedMovie?<FullRating key={movie.movie_id} movie_id={movie.movie_id} showList={false}/>:<></>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={closeBox}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RatingDialogue;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport Movies from \"../components/movies\";\r\nimport SideBar from \"../components/sideBar\";\r\nimport TopBar from \"../components/topBar\";\r\nimport AddList, { ListDialogue } from \"../components/addList\";\r\nimport RatingDialogue from \"../components/ratingDialogue\";\r\nimport { EntryDialogue } from \"../components/list\";\r\nimport { withRouter } from \"react-router\";\r\nimport Lists from \"../components/lists\";\r\n\r\nclass ListsPage extends Component {\r\n  state = {\r\n    showList: false,\r\n    showEntry: false,\r\n    showRating: false,\r\n    lists: [{ list_id: 0, list_name: \"\", is_private: 0 }],\r\n    selected_list: {},\r\n    refreshEntries: true,\r\n    selected_all: true,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.location);\r\n  }\r\n\r\n  showListDialogue = () => {\r\n    this.setState({ showList: true });\r\n  };\r\n  closeListDialogue = () => {\r\n    this.setState({ showList: false });\r\n  };\r\n  showEntryDialogue = (list) => {\r\n    console.log(list);\r\n    this.setState({ selected_list: list, showEntry: true });\r\n  };\r\n  closeEntryDialogue = () => {\r\n    this.setState({ showEntry: false });\r\n  };\r\n  showRatingDialogue = () => {\r\n    this.setState({ showRating: true });\r\n  };\r\n  closeRatingDialogue = () => {\r\n    this.setState({ showRating: false });\r\n  };\r\n\r\n  reloadEntries = () => {\r\n    this.state.refreshEntries\r\n      ? this.setState({ refreshEntries: false, selected_all: false })\r\n      : this.setState({ refreshEntries: true, selected_all: false });\r\n  };\r\n  reloadLists = () => {\r\n    this.fetchLists();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchLists();\r\n  };\r\n\r\n  fetchLists = () => {\r\n    fetch(`http://localhost:5000/api/users/${this.props.match.params.id}/lists`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status != 200) {\r\n          localStorage.setItem(\"lastLoc\", `${this.props.location.pathname}`);\r\n          this.props.history.push(\"/login\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (json.msg != undefined) {\r\n          localStorage.setItem(\"lastLoc\", `${this.props.location.pathname}`);\r\n          this.props.history.push(\"/login\");\r\n        } else {\r\n          if (\r\n            Object.keys(this.state.selected_list).length === 0 &&\r\n            json.length\r\n          ) {\r\n            console.log(Object.keys(this.state.selected_list).length);\r\n            console.log(\"1\");\r\n            console.log(json);\r\n            this.setState({ lists: json, selected_list: json[0] });\r\n          } else {\r\n            console.log(Object.keys(this.state.selected_list).length);\r\n            this.setState({ lists: json });\r\n          }\r\n        }\r\n      })\r\n      .then(() => {\r\n        if (this.props.location.state)\r\n          this.setState({\r\n            selected_list: this.props.location.state.selected_list,\r\n            selected_all: false,\r\n          });\r\n      });\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <TopBar />\r\n          <br></br>\r\n          <Row>\r\n            <Col xs={2} id=\"sidebar-wrapper\">\r\n              <SideBar />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <Container>\r\n                <Lists\r\n                  key={\r\n                    this.state.lists.toString() +\r\n                    \" \" +\r\n                    this.state.refreshEntries.toString() +\r\n                    \" \" +\r\n                    this.state.selected_list.toString() +\r\n                    \" \" +\r\n                    this.state.selected_all.toString()\r\n                  }\r\n                  lists={this.state.lists}\r\n                  selected_list={this.state.selected_list}\r\n                  changeSelected={(list) => {\r\n                    this.setState({ selected_list: list });\r\n                  }}\r\n                  setSelectedAll={(bool)=>this.setState({selected_all: bool})}\r\n                  selected_all={this.state.selected_all}\r\n                  showListDialogue={this.showListDialogue}\r\n                  showEntryDialogue={this.showEntryDialogue}\r\n                  showRatingDialogue={this.showRatingDialogue}\r\n                />\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n          <ListDialogue\r\n            selected_list={this.state.selected_list}\r\n            show={this.state.showList}\r\n            closeDialogue={this.closeListDialogue}\r\n            reloadPage={this.reloadLists}\r\n          />\r\n          <EntryDialogue\r\n            list={this.state.selected_list}\r\n            show={this.state.showEntry}\r\n            closeDialogue={this.closeEntryDialogue}\r\n            reloadPage={this.reloadEntries}\r\n          />\r\n          <RatingDialogue\r\n            show={this.state.showRating}\r\n            closeDialogue={this.closeRatingDialogue}\r\n            reloadPage={this.reloadEntries}\r\n          />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ListsPage);\r\n","import SearchBar from \"../components/searchBar\";\r\nimport React, { Component, useContext, useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../contexts/userContext\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    minHeight: 65,\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst SignupPage = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [errorAlert, setErrorAlert] = useState(\"\");\r\n  let user = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [cityId, setCityId] = useState(0);\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [hasSelectedCity, setHasSelectedCity] = useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const getCity = (city_id, city_name) => {\r\n    console.log(city_id, city_name);\r\n    setCityId(city_id);\r\n    setCityName(city_name);\r\n    setHasSelectedCity(true);\r\n  };\r\n\r\n  const CityDisplay = () => {\r\n    if (hasSelectedCity) {\r\n      return (\r\n        <div>\r\n          <Button variant=\"contained\">\r\n            {cityName}\r\n          </Button>\r\n          <IconButton aria-label=\"delete\" onClick={() => setHasSelectedCity(false)}>\r\n            <DeleteIcon fontSize=\"small\"/>\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <SearchBar entryDialogue={true} sendResult={getCity} type=\"city\" />\r\n      );\r\n    }\r\n  };\r\n\r\n  const uploadFields = () => {\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      setErrorAlert(\"Your email is not valid!\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (!hasSelectedCity) {\r\n      setErrorAlert(\"Please select a city from the given dropdown\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    fetch(\"http://localhost:5000/api/signup\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n        email: email,\r\n        city_id: cityId,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.error) {\r\n          setErrorAlert(json.error);\r\n          setOpen(true);\r\n        } else {\r\n          localStorage.setItem(\"jwt\", json.jwt);\r\n          user.loginUser();\r\n          console.log(localStorage.getItem(\"lastLoc\"));\r\n          history.push(\r\n            localStorage.getItem(\"lastLoc\")\r\n              ? localStorage.getItem(\"lastLoc\")\r\n              : \"/\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Container\r\n      className={classes.container}\r\n      maxWidth=\"xs\"\r\n      container\r\n      align=\"center\"\r\n    >\r\n      <Typography>\r\n        <Box fontWeight=\"fontWeightBold\">Sign up</Box>\r\n      </Typography>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n        autocomplete=\"off\"\r\n      >\r\n        <Grid container spacing={3} style={{ paddingTop: 40 }}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  size=\"small\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CityDisplay />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={() => uploadFields()}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} align=\"center\">\r\n            <Typography>\r\n              Already have an account?{\" \"}\r\n              <Link\r\n                to=\"/login\"\r\n                style={{ textDecoration: \"none\", color: \"#3f50b5\" }}\r\n              >\r\n                <Box fontWeight=\"fontWeightBold\">Login</Box>\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert severity=\"error\">{errorAlert}</Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignupPage);\r\n","// import React, { Component } from \"react\";\r\n// import { withRouter } from \"react-router\";\r\n// import {Button} from \"react-bootstrap\";\r\n// import {\r\n//     FormControl,\r\n//     FormHelperText,\r\n//     Input,\r\n//     InputLabel,\r\n//     FormGroup,\r\n//     Grid,\r\n//     Snackbar,\r\n//     TextField,\r\n//     Container,\r\n//     Typography,\r\n//     Button,\r\n//     Box,\r\n//   } from \"@material-ui/core\";\r\n// import \"../styles/AdminConsole.css\";\r\n// class AdminConsole extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//             MID:\"\",\r\n//             TID:\"\",\r\n//             DT:\"\",\r\n//             TP:\"\"\r\n//         }\r\n\r\n//     }\r\n\r\n//     SetValue=(event)=>{\r\n//         this.setState({[event.target.name]: event.target.value})\r\n//         console.log(this.state);\r\n//     }\r\n//     AddShow=()=>{\r\n//         console.log(\"Entered\");\r\n//         fetch(`http://localhost:5000/api/shows/`, {\r\n//             method: \"POST\",\r\n//             body: JSON.stringify({\r\n//                 movie_id: parseInt(this.state.MID),\r\n//                   theatre_id: parseInt(this.state.TID),\r\n//                   date_time:this.state.DT,\r\n//                   ticket_price: parseInt(this.state.TP)\r\n//             }),\r\n//             headers: {\r\n//               \"Content-type\": \"application/json; charset=UTF-8\",\r\n//               Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n//             },\r\n//           })\r\n//             .then((response) => response.json())\r\n//             .then((json) => {\r\n//              console.log(\"From addshows: \",json);\r\n//             });\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             <>\r\n//             <div className=\"ConsoleHeader\"> <Button variant = \"success\" size=\"lg\" style={{position:\"absolute\",marginLeft:\"30px\",top:\"30%\"}} onClick={() => {\r\n//                 this.props.history.push(\"/\");\r\n//               }}>Back to Home</Button> <p className = \"Header\">ADMIN CONSOLE</p> </div>\r\n\r\n//             <div className =\"AddZone\">\r\n//             <p className = \"ConsoleTitle\" ><u><b>SET SHOW DETAILS</b></u>  </p>\r\n\r\n//             <form style={{marginLeft:\"30px\", marginTop:\"80px\"}} onSubmit = {this.AddShow}>\r\n\r\n//             <label htmlFor=\"MID\" style={{color:\"green\"}}>Movie ID:</label><br/>\r\n//             <input type=\"text\" id=\"MID\" name=\"MID\" value = {this.state.MID} onChange={this.SetValue}/><br/><br/>\r\n\r\n//             <label htmlFor=\"TID\" style={{color:\"green\"}}>Theatre ID:</label><br/>\r\n//             <input type=\"text\" id=\"TID\" name=\"TID\" value = {this.state.TID} onChange={this.SetValue}/><br/><br/>\r\n\r\n//             <label htmlFor=\"TP\" style={{color:\"green\"}}>Ticket Price:</label><br/>\r\n//             <input type=\"text\" id=\"TP\" name=\"TP\" value = {this.state.TP} onChange={this.SetValue}/><br/><br/>\r\n\r\n//             <label htmlFor=\"DT\" style={{color:\"green\"}}>Date-Time(Please enter in YYYY-MM-DD HH:MM:SS format):</label><br/>\r\n//             <input type=\"text\" id=\"DT\" name=\"DT\" value = {this.state.DT} onChange={this.SetValue}/><br/><br/>\r\n\r\n//             <input type=\"submit\" value=\"Add Show\" style={{backgroundColor: \"Yellow\",position: \"relative\",marginLeft:\"30%\",marginRight:\"30%\", width:\"40%\"}}/>\r\n//             </form>\r\n\r\n//             </div>\r\n\r\n//             </>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default withRouter(AdminConsole);\r\nimport React, { Component, useContext, useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useLocation, withRouter } from \"react-router\";\r\nimport { Link, NavLink, useHistory} from \"react-router-dom\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport SearchBar from \"../components/searchBar\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    minHeight: 65,\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst AdminConsole = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [errorAlert, setErrorAlert] = useState(\"\");\r\n  let user = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  const [movie, setMovie] = useState({});\r\n  const [theatre, setTheatre] = useState({});\r\n  const [ticketPrice, setTicketPrice] = useState(0);\r\n  const [dateTime, setDateTime] = useState(\"\");\r\n  const [hasSelectedMovie, setHasSelectedMovie] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(user.user);\r\n    console.log(location);\r\n    if(location.state.movie_id)\r\n    {\r\n        setMovie({movie_id: location.state.movie_id, movie_name: location.state.movie_name});\r\n        setHasSelectedMovie(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const getMovie = (movie_id, movie_name) => {\r\n    console.log(movie_id, movie_name);\r\n    setMovie({ movie_id: movie_id, movie_name: movie_name });\r\n    setHasSelectedMovie(true);\r\n  };\r\n\r\n  const MovieDisplay = () => {\r\n    if (hasSelectedMovie) {\r\n      return (\r\n        <div>\r\n          {movie.movie_id}\r\n          {\":\"}\r\n          <Button variant=\"contained\" style={{ marginLeft: \"10px\" }}>\r\n            {movie.movie_name}\r\n          </Button>\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            onClick={() => setHasSelectedMovie(false)}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <SearchBar entryDialogue={true} sendResult={getMovie} type=\"movie\" />\r\n      );\r\n    }\r\n  };\r\n\r\n  const addShow = () => {\r\n    console.log(movie, theatre, ticketPrice, dateTime);\r\n\r\n    if (!hasSelectedMovie) {\r\n      setErrorAlert(\"Please select a movie from the given dropdown\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (dateTime == \"\") {\r\n      setErrorAlert(\"Please pick a date and time\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (theatre == \"\") {\r\n      setErrorAlert(\"Please pick a theatre\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (ticketPrice == \"\") {\r\n      setErrorAlert(\"Please set a ticket price\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n\r\n    let dateTimeParts = dateTime.split('T');\r\n    const newDateTime = dateTimeParts[0] + \" \" + dateTimeParts[1] + \":00\";\r\n    console.log(newDateTime);\r\n    fetch(`http://localhost:5000/api/shows/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        movie_id: movie.movie_id,\r\n        theatre_id: theatre,\r\n        date_time: newDateTime,\r\n        ticket_price: ticketPrice,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.error) alert(json.error);\r\n        else {\r\n          localStorage.setItem(\"jwt\", json.jwt);\r\n          user.loginUser();\r\n          console.log(localStorage.getItem(\"lastLoc\"));\r\n          history.push(\r\n            localStorage.getItem(\"lastLoc\")\r\n              ? localStorage.getItem(\"lastLoc\")\r\n              : \"/\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Container\r\n      className={classes.container}\r\n      maxWidth=\"xs\"\r\n      container\r\n      align=\"center\"\r\n    >\r\n      <Typography>\r\n        <Box fontWeight=\"fontWeightBold\">Admin Console</Box>\r\n      </Typography>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <Grid container spacing={3} style={{ paddingTop: 40 }}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <MovieDisplay />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Theatre ID\"\r\n                  name=\"theatre\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setTheatre(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Ticket Price\"\r\n                  name=\"theatre\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setTicketPrice(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"datetime-local\"\r\n                  label=\"Scheduled date and time\"\r\n                  type=\"datetime-local\"\r\n                  className={classes.textField}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => setDateTime(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={addShow}\r\n            >\r\n              Add Show\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} align=\"center\">\r\n            <Typography>\r\n              Not here to add a show?{\" \"}\r\n              <Link\r\n                to=\"/\"\r\n                style={{ textDecoration: \"none\", color: \"#3f50b5\" }}\r\n              >\r\n                <Box fontWeight=\"fontWeightBold\">Take me home</Box>\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert severity=\"error\">{errorAlert}</Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(AdminConsole);\r\n","import React, { useState, useContext, Component } from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport MoviePage from \"./pages/MoviePage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport ShowsPage from \"./pages/ShowsPage\";\r\nimport SeatsPage from \"./pages/SeatsPage\";\r\nimport BookingPage from \"./pages/BookingPage\";\r\nimport ListsPage from \"./pages/ListsPage\";\r\nimport SignupPage from \"./pages/SignupPage\";\r\nimport AdminConsole from \"./pages/AdminConsole\";\r\n\r\nimport UserContext, { UserProvider } from \"./contexts/userContext\";\r\n\r\nconst Routing = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <HomePage />} />\r\n          <Route\r\n            exact\r\n            path=\"/movies/:id\"\r\n            render={(props) => (\r\n              <MoviePage key={props.match.params.id} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/users/:id/lists\"\r\n            render={(props) => (\r\n              <ListsPage key={props.match.params.id} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/shows/:id/seats\"\r\n            render={() => (\r\n              <SeatsPage />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/shows/:id/book\"\r\n            render={() => (\r\n              <BookingPage />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/movies/:id/shows\"\r\n            render={() => (\r\n              <ShowsPage/>\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/shows\"\r\n            render={() => (\r\n              <AdminConsole/>\r\n            )}\r\n          />\r\n          <Route exact path=\"/login\" render={() => <LoginPage />} />\r\n          <Route exact path=\"/signup\" render={() => <SignupPage />} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nfunction getDetails() {\r\n  return fetch(\"http://localhost:5000/api/is-logged-in\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n    },\r\n  });\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n    };\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.clear();\r\n    this.setState({ user: {} });\r\n  };\r\n\r\n  login = () => {\r\n    getDetails()\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.logged_in) {\r\n          this.setState({\r\n            user: {\r\n              profile_url: json.details.profile_url,\r\n              user_role: json.details.user_role,\r\n              user_id: json.details.user_id,\r\n              username: json.details.username,\r\n              city_id: json.details.city_id,\r\n              city: json.details.city_name,\r\n            },\r\n          });\r\n          console.log(this.state.user);\r\n        } else\r\n          this.setState({\r\n            user: {},\r\n          });\r\n        console.log(json);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.login();\r\n  }\r\n  render() {\r\n    const value = {\r\n      user: this.state.user,\r\n      logoutUser: this.logout,\r\n      loginUser: this.login,\r\n    };\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        <Routing />\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ReportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nReportWebVitals();\r\n"],"sourceRoot":""}