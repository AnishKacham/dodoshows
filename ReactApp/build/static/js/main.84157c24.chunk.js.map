{"version":3,"sources":["contexts/userContext.jsx","images/search.svg","components/movie.jsx","components/movies.jsx","components/sideBar.jsx","components/titleSearchResults.jsx","components/searchBar.jsx","components/topBar.jsx","pages/HomePage.jsx","components/list.jsx","components/addList.jsx","components/lists.jsx","components/movieDetailed.jsx","pages/MoviePage.jsx","pages/LoginPage.jsx","pages/SeatsPage.jsx","pages/ShowsPage.jsx","components/PaymentButton.jsx","pages/BookingPage.jsx","components/ratingDialogue.jsx","pages/ListsPage.jsx","pages/SignupPage.jsx","components/PersonCard.jsx","pages/ProfilePage.jsx","pages/FriendsPage.jsx","pages/AdminConsole.jsx","components/searchPeople.jsx","pages/AdvancedSearch.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","Movie","props","Card","className","tag","onClick","history","push","movie","movie_id","border","style","width","minheight","borderRadius","boxShadow","Img","variant","src","this","poster_url","height","ImgOverlay","Body","Title","movie_title","Text","parseDate","release_date","Footer","Rating","name","value","avg_rating","max","precision","size","readOnly","emptyIcon","fontSize","Component","string","arr","split","number","order_suffix","month","year","charAt","withRouter","Movies","console","log","display","flexWrap","movies","map","margin","SideBar","state","goToListPage","Object","keys","context","user","length","user_id","localStorage","setItem","goToFriendsPage","position","top","Nav","minHeight","activeKey","Item","Link","disabled","eventKey","contextType","TitleSearchResults","handleClickOutside","event","wrapperRef","current","contains","target","clickedOutside","createRef","document","addEventListener","removeEventListener","ref","dropdownClasses","results","slice","result","NavDropdown","entryDialogue","type","onClickUser","id","pic","city","SearchBar","title","genres","people","typingTimout","bool","setState","changeName","typingTimeout","clearTimeout","setTimeout","timedSearch","searchCities","then","response","json","i","city_id","city_name","searchUsers","username","profile_url","searchMovie","fetch","method","body","JSON","stringify","headers","submitHandler","preventDefault","pathname","window","location","reload","clickHandler","sendResult","clickHandlerUser","Form","inline","onSubmit","autoComplete","TextField","fullWidth","label","toUpperCase","onChange","FormControl","placeholder","ProfileRender","useContext","useHistory","useLocation","useState","open","setOpen","anchorRef","useRef","borderWidth","borderStyle","padding","textAlign","prevOpen","Avatar","Menu","anchorEl","role","undefined","disablePortal","transition","MenuList","MenuItem","logoutUser","Button","color","TopBar","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","HomePage","fetchMovies","Row","Col","xs","Container","EntryDialogue","setMovies","closeBox","closeDialogue","Modal","show","Header","closeButton","list","list_name","containsId","oldArray","m","filter","getItem","movie_ids","list_id","Authorization","status","reloadPage","List","clicked","items","item","score","watch_status","toString","ListDialogue","setName","isPrivate","setPrivate","is_private","Group","controlId","Label","Control","e","Check","defaultChecked","checked","AddList","marginTop","Lists","entries","ratings","showWatched","showUnwatched","searchString","sortMode","sort","fetchEntries","match","params","fetchRatings","toggleWatched","toggleUnwatched","toggleSort","mode","_isMounted","FormControlLabel","control","Checkbox","Table","striped","bordered","hover","as","column","sm","marginLeft","icon","faSort","selected_all","entry","toLowerCase","search","a","b","selected_list","isOwner","showEntryDialogue","showRatingDialogue","marginBottom","setSelectedAll","lists","changeSelected","marginRight","faLock","showListDialogue","FullRating","review","newRating","setNewRating","rating","setRating","ratingExists","setRatingExists","setLists","editMode","setEditMode","useEffect","fetchRating","showLists","fetchLists","msg","prevState","DropdownButton","Dropdown","ListGroup","ListGroupItem","newScore","rows","defaultValue","PresentInLists","OthersRatings","setRatings","friends","setFriends","onlyFriends","setOnlyFriends","friend","user_id2","includes","Subtitle","MovieDetailed","AdminFlag","AddShowsToggle","movie_name","user_role","block","fetchMovie","Image","thumbnail","overflow","genre","capitalizeFirstLetter","genre_name","genre_id","movie_description","person","person_role","person_name","cast_or_crew","parseRoles","person_id","MoviePage","fluid","Alert","elevation","useStyles","makeStyles","theme","container","spacing","root","flexGrow","menuButton","toolbar","alignItems","paddingTop","paddingBottom","alignSelf","classes","setUsername","password","setPassword","maxWidth","align","Typography","Box","fontWeight","Grid","error","alert","jwt","loginUser","to","textDecoration","Snackbar","autoHideDuration","onClose","reason","severity","ShowsPage","shows","fetchShows","text","theatre_mall","date_time","show_id","BookedSeats","sn","SeatsPage","SeatSelect","getElementById","classList","toggle","RemoveSeat","SeatCheck","code","backgroundColor","SortSeats","j","n","parseInt","seat_code","c","d","localeCompare","temp","seats","code_letters","code_numbers","fetchSeats","index","indexOf","splice","l","Set","add","Array","from","letters","justifyContent","numbers","paddingRight","paddingLeft","seat_status","SeatsBooked","PaymentButton","BookingPage","BSeats","paymentDeets","Book","RatingDialogue","setMovie","hasSelectedMovie","setHasSelectedMovie","getMovie","MovieDisplay","showList","ListOwner","owner","setOwner","useParams","fetchUser","ListItem","ListItemText","primary","ListsPage","showEntry","showRating","refreshEntries","closeListDialogue","closeEntryDialogue","closeRatingDialogue","reloadEntries","reloadLists","componentDidMount","errorAlert","setErrorAlert","email","setEmail","cityId","setCityId","cityName","setCityName","hasSelectedCity","setHasSelectedCity","getCity","CityDisplay","IconButton","aria-label","autocomplete","test","PersonCard","buttonVariant","logo","verticalAlign","friendStyles","setFriendStyles","friendStat","friendStatus","setFriendStatus","removeFriend","borderColor","maxHeight","minWidth","roundedCircle","personKey","ProfilePage","image","setImage","imgurl","postPicture","alt","accept","files","data","FormData","append","res","url","FriendsPage","incoming","setIncoming","outgoing","setOutgoing","friendsIDS","setFriendsIDS","incomingIDS","setIncomingIDS","outgoingIDS","setOutgoingIDS","fetchFriends","hasSelectedSearchUser","setHasSelectedSearchUser","searchUser","setSearchUser","searchFriendStat","setSearchFriendStat","getSearchUser","UserSearchDisplay","Friends","Incoming","Outgoing","outgoingreq","incomingreq","theatre","setTheatre","ticketPrice","setTicketPrice","dateTime","setDateTime","textField","InputLabelProps","shrink","dateTimeParts","newDateTime","theatre_id","ticket_price","SearchPeople","searchForPeople","person_title","AdvancedSearch","chipData","searchTerm","handleDelete","chipToDelete","chip","key","addChip","newChipData","setSearchTerm","findMovies","listPeopleID","el","onInput","Paper","component","Chip","onDelete","Routing","exact","path","render","App","logout","clear","login","logged_in","details","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","ReportWebVitals"],"mappings":"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","file":"static/js/main.84157c24.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;\r\n","export default __webpack_public_path__ + \"static/media/search.3ea27197.svg\";","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../styles/HomePage.css\";\r\nimport \"../styles/movieCard.css\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Movie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        className=\"movie\"\r\n        tag=\"a\"\r\n        onClick={() => {\r\n          this.props.history.push(`/movies/${this.props.movie.movie_id}`);\r\n        }}\r\n        border=\"none\"\r\n        style={{\r\n          width: \"250px\",\r\n          minheight: \"470px\",\r\n          border: \"none\",\r\n          borderRadius: \"15px\",\r\n          boxShadow: \"5px 5px #DEE2E6\",\r\n        }}\r\n      >\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={this.props.movie.poster_url}\r\n          style={{ /* width: \"250px\", */ height: \"calc(250px * (40/27))\" }}\r\n        />\r\n        <Card.ImgOverlay></Card.ImgOverlay>\r\n        <Card.Body>\r\n          <Card.Title>{this.props.movie.movie_title}</Card.Title>\r\n          <Card.Text>{parseDate(this.props.movie.release_date)}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Rating\r\n            name=\"read-only\"\r\n            value={this.props.movie.avg_rating * 0.5}\r\n            max={5}\r\n            precision={0.1}\r\n            size=\"small\"\r\n            readOnly\r\n            emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n          />\r\n        </Card.Footer>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction parseDate(string) {\r\n  var arr = string.split(\" \");\r\n  var number = arr[1];\r\n  var order_suffix = \"\";\r\n  var month = arr[2];\r\n  var year = arr[3];\r\n  if (number.charAt(1) == \"1\") order_suffix = \"st\";\r\n  else if (number.charAt(1) == \"2\") order_suffix = \"nd\";\r\n  else if (number.charAt(1) == \"3\") order_suffix = \"rd\";\r\n  else order_suffix = \"th\";\r\n  if (number.charAt(0) == \"0\") number = number.charAt(1);\r\n  return number + order_suffix + \" \" + month + \" \" + year;\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default withRouter(Movie);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Movie from \"./movie\";\r\n\r\nclass Movies extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{display:\"flex\", flexWrap:\"wrap\"}}/* className=\"d-flex align-content-stretch flex-wrap bd-highlight example-parent\" */>\r\n        {this.props.movies.map((movie) => (\r\n          <div\r\n            style={{margin:\"20px 20px\"}}\r\n            key={movie.movie_id}\r\n            className=\"p-2 bd-highlight col-example home-page-movie\"\r\n          >\r\n            <Movie movie={movie} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Movies);\r\n","import React, { Component } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport UserContext from \"../contexts/userContext\";\r\n// import '../styles/sideBar.css';\r\n\r\nclass SideBar extends Component {\r\n  static contextType = UserContext;\r\n  state = {};\r\n\r\n  goToListPage = () => {\r\n    if (!Object.keys(this.context.user).length) {\r\n      localStorage.setItem(\"lastLoc\", \"/\");\r\n      this.props.history.push(\"/login\");\r\n    } else this.props.history.push(`/users/${this.context.user.user_id}/lists`);\r\n  };\r\n\r\n  goToFriendsPage = () => {\r\n    if (!Object.keys(this.context.user).length) {\r\n      localStorage.setItem(\"lastLoc\", \"/\");\r\n      this.props.history.push(\"/login\");\r\n    } else this.props.history.push(\"/friends\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"side-bar-wrapper\" style={{/* position:\"fixed\", */height:\"500px\", position:\"sticky\", top:\"68px\",width:\"12vw\"}}>\r\n        <Nav\r\n          className=\"col-md-12 d-none d-md-block bg-dark sidebar\"\r\n          style={{minHeight:\"100vh\"}}\r\n          activeKey=\"/home\"\r\n        >\r\n            <div className=\"sidebar-sticky\"></div>\r\n            <Nav.Item>\r\n            <Nav.Link onClick={this.goToListPage}>Lists</Nav.Link>\r\n          </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link disabled>About Us</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link onClick={this.goToFriendsPage} eventKey=\"link-1\">Profile and friends </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link eventKey=\"link-2\" disabled>Donate</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n            <Nav.Link eventKey=\"link-3\" disabled>\r\n            Merchandise\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SideBar);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass TitleSearchResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.wrapperRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  /**\r\n   * Alert if clicked on outside of element\r\n   */\r\n  handleClickOutside = (event) => {\r\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n      this.props.clickedOutside(true);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.wrapperRef} className={this.props.dropdownClasses}>\r\n        {this.props.results.slice(0, 10).map((result) => (\r\n          <NavDropdown.Item\r\n            key={result.id}\r\n            onClick={() => {\r\n              if (this.props.entryDialogue) {\r\n                this.props.type == \"user\"\r\n                  ? this.props.onClickUser(\r\n                      result.id,\r\n                      result.name,\r\n                      result.pic,\r\n                      result.city\r\n                    )\r\n                  : this.props.onClick(result.id, result.name);\r\n              } else {\r\n                this.props.history.push(`/movies/${result.id}`);\r\n              }\r\n            }}\r\n          >\r\n            {result.name}\r\n          </NavDropdown.Item>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TitleSearchResults);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  Nav,\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport TitleSearchResults from \"./titleSearchResults\";\r\nimport movie from \"./movie\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    city: \"\",\r\n    user: \"\",\r\n    movie: { title: \"\", genres: [], people: [] },\r\n    results: [],\r\n    typingTimout: 0,\r\n    dropdownClasses: \"dropdown-menu\",\r\n  };\r\n\r\n  clickedOutside = (bool) => {\r\n    if (bool) this.setState({ dropdownClasses: \"dropdown-menu\" });\r\n  };\r\n\r\n  changeName = (event) => {\r\n    if (this.state.typingTimeout) {\r\n      clearTimeout(this.state.typingTimeout);\r\n    }\r\n    if (this.props.type && this.props.type == \"city\") {\r\n      this.setState({ city: event.target.value });\r\n    } else if (this.props.type && this.props.type == \"user\") {\r\n      this.setState({ user: event.target.value });\r\n    } else {\r\n      this.setState({\r\n        movie: {\r\n          title: `${event.target.value}`,\r\n          genres: this.state.movie.genres,\r\n          people: this.state.movie.people,\r\n        },\r\n      });\r\n    }\r\n    if (event.target.value) {\r\n      this.state.typingTimeout = setTimeout(this.timedSearch, 500);\r\n    }\r\n  };\r\n\r\n  timedSearch = () => {\r\n    if (this.props.type == \"city\") {\r\n      this.searchCities(this.state.city)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          let results = [];\r\n          json.map(\r\n            (city, i) =>\r\n              (results[i] = { id: city.city_id, name: city.city_name })\r\n          );\r\n          console.log(results);\r\n          this.setState({ results: results });\r\n          return json;\r\n        })\r\n        .then((results) => {\r\n          if (results.length) {\r\n            this.setState({\r\n              dropdownClasses: \"show dropdown-menu\",\r\n            });\r\n          } else\r\n            this.setState({\r\n              dropdownClasses: \"dropdown-menu\",\r\n            });\r\n        });\r\n    } else if (this.props.type == \"user\") {\r\n      this.searchUsers(this.state.user)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          let results = [];\r\n          json.map(\r\n            (user, i) =>\r\n              (results[i] = {\r\n                id: user.user_id,\r\n                name: user.username,\r\n                pic: user.profile_url,\r\n                city: user.city_name,\r\n              })\r\n          );\r\n          console.log(results);\r\n          this.setState({ results: results });\r\n          return json;\r\n        })\r\n        .then((results) => {\r\n          if (results.length) {\r\n            this.setState({\r\n              dropdownClasses: \"show dropdown-menu\",\r\n            });\r\n          } else\r\n            this.setState({\r\n              dropdownClasses: \"dropdown-menu\",\r\n            });\r\n        });\r\n    } else {\r\n      this.searchMovie(this.state.movie)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          let results = [];\r\n          json.map(\r\n            (movie, i) =>\r\n              (results[i] = { id: movie.movie_id, name: movie.movie_title })\r\n          );\r\n          console.log(results);\r\n          this.setState({ results: results });\r\n          return json;\r\n        })\r\n        .then((results) => {\r\n          if (results.length) {\r\n            this.setState({\r\n              dropdownClasses: \"show dropdown-menu\",\r\n            });\r\n          } else\r\n            this.setState({\r\n              dropdownClasses: \"dropdown-menu\",\r\n            });\r\n        });\r\n    }\r\n  };\r\n\r\n  searchMovie = (movie) => {\r\n    return fetch(\"/api/search/movies\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(movie),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  };\r\n\r\n  searchCities = (city) => {\r\n    return fetch(\"/api/search/cities\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        city: city,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  };\r\n\r\n  searchUsers = (user) => {\r\n    return fetch(\"/api/search/users\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        user: user,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!this.props.entryDialogue) {\r\n      this.searchMovie(this.state.movie)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          this.props.history.push({\r\n            pathname: \"/\",\r\n            state: { movies: json },\r\n          });\r\n        })\r\n        .then(() => {\r\n          window.location.reload(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  clickHandler = (movie_id, movie_title) => {\r\n    this.clickedOutside(true);\r\n    this.props.sendResult(movie_id, movie_title);\r\n  };\r\n  clickHandlerUser = (id, name, pic, city) => {\r\n    this.clickedOutside(true);\r\n    this.props.sendResult(id, name, pic, city);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.entryDialogue ? (\r\n          <Form\r\n            inline\r\n            onSubmit={this.submitHandler}\r\n            className=\"nav-item dropdown\"\r\n            autoComplete=\"off\"\r\n          >\r\n            <TextField\r\n              fullWidth\r\n              label={\r\n                this.props.type\r\n                  ? this.props.type.charAt(0).toUpperCase() +\r\n                    this.props.type.slice(1)\r\n                  : \"Search for a movie...\"\r\n              }\r\n              name=\"username\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              onChange={this.changeName}\r\n            />\r\n            <TitleSearchResults\r\n              type={this.props.type}\r\n              onClick={this.clickHandler}\r\n              onClickUser={this.clickHandlerUser}\r\n              entryDialogue={this.props.entryDialogue}\r\n              dropdownClasses={this.state.dropdownClasses}\r\n              results={this.state.results}\r\n              clickedOutside={this.clickedOutside}\r\n            />\r\n          </Form>\r\n        ) : (\r\n          <Form\r\n            inline\r\n            onSubmit={this.submitHandler}\r\n            className=\"nav-item dropdown\"\r\n          >\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              onChange={this.changeName}\r\n            />\r\n            <Button variant=\"outline-success\" type=\"submit\">\r\n              Search\r\n            </Button>\r\n            <TitleSearchResults\r\n              onClick={this.clickHandler}\r\n              entryDialogue={this.props.entryDialogue}\r\n              dropdownClasses={this.state.dropdownClasses}\r\n              results={this.state.results}\r\n              clickedOutside={this.clickedOutside}\r\n            />\r\n          </Form>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n","import React, {\r\n  Component,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport { Navbar, NavDropdown, Nav, Form, FormControl } from \"react-bootstrap\";\r\nimport {\r\n  Avatar,\r\n  Typography,\r\n  Chip,\r\n  MenuItem,\r\n  Menu,\r\n  Divider,\r\n  Popper,\r\n  Paper,\r\n  Grow,\r\n  MenuList,\r\n  Button,\r\n  ClickAwayListener,\r\n} from \"@material-ui/core\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport SearchBar from \"./searchBar\";\r\nimport { Justify } from \"react-bootstrap-icons\";\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nconst ProfileRender = () => {\r\n  let user = useContext(UserContext);\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  console.log(user);\r\n  if (!Object.keys(user.user).length) {\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            localStorage.setItem(\"lastLoc\", location.pathname);\r\n            history.push(\"/login\");\r\n          }}\r\n        >\r\n          <div style={{ color: \"white\" }}>Log in</div>\r\n        </Button>\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <div\r\n        style={{\r\n          border: \"grey\",\r\n          borderWidth: \"1px\",\r\n          borderRadius: \"30px\",\r\n          borderStyle: \"solid\",\r\n          padding: \"5px\",\r\n          textAlign: \"center\",\r\n        }}\r\n        onClick={handleToggle}\r\n      >\r\n        {user.user.profile_url ? (\r\n          <Avatar src={user.user.profile_url} ref={anchorRef}></Avatar>\r\n        ) : (\r\n          <Avatar ref={anchorRef}>\r\n            {user.user.username.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n        )}\r\n        <Menu\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          disablePortal\r\n          transition\r\n        >\r\n          <MenuList id=\"menu-list-grow\">\r\n            <MenuItem onClick={() => user.logoutUser()}>Logout</MenuItem>\r\n          </MenuList>\r\n        </Menu>\r\n        {/* <Button\r\n          onClick={() => {\r\n            this.context.logoutUser();\r\n          }}\r\n        >\r\n          Log out\r\n        </Button> */}\r\n      </div>\r\n    );\r\n};\r\n\r\nclass TopBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n        <Navbar.Brand>Dodo Shows</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link\r\n              onClick={() => {\r\n                this.props.history.push(\"/\");\r\n              }}\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n\r\n            <SearchBar entryDialogue={false} />\r\n            <Nav.Link\r\n              onClick={() => this.props.history.push(\"/advancedSearch\")}\r\n            >\r\n              Advanced search\r\n            </Nav.Link>\r\n          </Nav>\r\n          <ProfileRender />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TopBar);\r\n","import search from \"../images/search.svg\";\r\nimport \"../styles/HomePage.css\";\r\nimport React, { Component } from \"react\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport Movies from \"../components/movies\";\r\nimport SideBar from \"../components/sideBar\";\r\nimport TopBar from \"../components/topBar\";\r\nimport { Carousel,Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass HomePage extends Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this);\r\n    if (props.location.state) {\r\n      this.state = { movies: props.location.state.movies };\r\n      console.log(this.state);\r\n    } else this.fetchMovies();\r\n  }\r\n\r\n  fetchMovies = () => {\r\n    fetch(\"/api/movies/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        this.setState({ movies: json });\r\n        console.log(this.state.movies);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <TopBar />\r\n          {/* <br></br> */}\r\n          <Row>\r\n            <Col xs={2} id=\"sidebar-wrapper\">\r\n              <SideBar />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <Container>\r\n                <Movies movies={this.state.movies} />\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default withRouter(HomePage);\r\n","import React, { Component, useState } from \"react\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport SearchBar from \"./searchBar\";\r\n\r\nconst EntryDialogue = (props) => {\r\n  let history = useHistory();\r\n  const [movie, setMovie] = useState(\"\");\r\n  const [list, setList] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const postMovies = (event) => {\r\n    event.preventDefault();\r\n    console.log(localStorage.getItem(\"jwt\"));\r\n    if (movies.length) {\r\n      const movie_ids = movies.map((movie) => movie.movie_id);\r\n      console.log(movie_ids);\r\n      fetch(`/api/lists/${props.list.list_id}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          movie_ids,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.status != 200) {\r\n            localStorage.setItem(\"lastLoc\", `${history.location.pathname}`);\r\n            history.push(\"/login\");\r\n          }\r\n        })\r\n        .then(() => {\r\n          closeBox();\r\n          props.reloadPage();\r\n        });\r\n    }\r\n  };\r\n\r\n  function containsId(id, list) {\r\n    var i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i].movie_id === id) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n  const getMovie = (movie_id, movie_title) => {\r\n    console.log(movie_id);\r\n    console.log(movie_title);\r\n    if (!containsId(movie_id, movies))\r\n      setMovies((oldArray) => [\r\n        ...oldArray,\r\n        { movie_id: movie_id, movie_title: movie_title },\r\n      ]);\r\n  };\r\n  const removeMovie = (m) => {\r\n    setMovies(movies.filter((movie) => movie != m));\r\n  };\r\n  const closeBox = () => {\r\n    setMovies([]);\r\n    props.closeDialogue();\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Entry to list \"{props.list.list_name}\"</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <SearchBar entryDialogue={true} sendResult={getMovie} />\r\n        {movies.map((movie) => (\r\n          <Button\r\n            style={{ margin: \"10px\" }}\r\n            key={movie.movie_id}\r\n            onClick={() => removeMovie(movie)}\r\n          >\r\n            {movie.movie_title}\r\n          </Button>\r\n        ))}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={closeBox}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={postMovies}>\r\n          Add movies\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nclass List extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n  clicked = (id) => {\r\n    console.log(\"clicked\");\r\n    this.props.history.push(`/movies/${id}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <tbody>\r\n        {this.props.items.map((item, i) => (\r\n          <tr key={item.movie_id.toString()}>\r\n            <td>{i + 1}</td>\r\n            <td onClick={() => this.clicked(item.movie_id)}>\r\n              {item.movie_title}\r\n            </td>\r\n            <td>{item.score ? item.score/2 : \"--\"}</td>\r\n            <td>{item.watch_status ? \"Watched\" : \"Plan to watch\"}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport { EntryDialogue };\r\nexport default withRouter(List);\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport React, { Component, useContext, useState } from \"react\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\n\r\nconst ListDialogue = (props) => {\r\n  let history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [isPrivate, setPrivate] = useState(false);\r\n  const user = useContext(UserContext);\r\n\r\n  const submitList = (event) => {\r\n    event.preventDefault();\r\n    console.log(name);\r\n    console.log(isPrivate);\r\n    console.log(localStorage.getItem(\"jwt\"));\r\n    fetch(\"/api/lists/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        list_name: name,\r\n        is_private: isPrivate,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status != 200) {\r\n          console.log(user);\r\n          localStorage.setItem(\"lastLoc\", `${history.location.pathname}`);\r\n          history.push(\"/login\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        props.reloadPage();\r\n      });\r\n  };\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add List</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={submitList}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter List Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Make this private\"\r\n              defaultChecked={isPrivate}\r\n              onChange={(e) => setPrivate(e.target.checked)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.closeDialogue}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\">Save Changes</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nclass AddList extends Component {\r\n  state = { show: false };\r\n  render() {\r\n    return (\r\n      <Button style={{ marginTop: \"20px\" }} onClick={this.props.onClick}>\r\n        Add list\r\n      </Button>\r\n    );\r\n  }\r\n}\r\nexport { ListDialogue };\r\nexport default withRouter(AddList);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport List from \"./list\";\r\nimport { Table, Button, Col, Row, FormControl, Form } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock, faSort } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport AddList, { Dialogue } from \"../components/addList\";\r\n\r\nclass Lists extends Component {\r\n  static contextType = UserContext;\r\n  state = {\r\n    entries: [],\r\n    ratings: [],\r\n    showWatched: true,\r\n    showUnwatched: true,\r\n    searchString: \"\",\r\n    sortMode: 1,\r\n    sort: 0,\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    console.log(this.props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    this.fetchEntries()\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status != 200) {\r\n          console.log(this.context.user);\r\n          localStorage.setItem(\"lastLoc\", `${this.props.location.pathname}`);\r\n          this.props.history.push(\"/login\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (this._isMounted) {\r\n          this.setState({ entries: json });\r\n        }\r\n      });\r\n    this.fetchRatings()\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status != 200) {\r\n          console.log(this.context.user);\r\n          localStorage.setItem(\"lastLoc\", `${this.props.location.pathname}`);\r\n          this.props.history.push(\"/login\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (this._isMounted) {\r\n          this.setState({ ratings: json });\r\n        }\r\n      });\r\n  }\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  fetchEntries = () => {\r\n    return fetch(\r\n      `/api/users/${this.props.match.params.id}/entries`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      }\r\n    );\r\n  };\r\n  fetchRatings = () => {\r\n    return fetch(\r\n      `/api/users/${this.props.match.params.id}/ratings`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  toggleWatched = () => {\r\n    console.log(\"watched\");\r\n    this.state.showWatched\r\n      ? this.setState({ showWatched: false })\r\n      : this.setState({ showWatched: true });\r\n  };\r\n  toggleUnwatched = () => {\r\n    console.log(\"unwatched\");\r\n    this.state.showUnwatched\r\n      ? this.setState({ showUnwatched: false })\r\n      : this.setState({ showUnwatched: true });\r\n  };\r\n  toggleSort = (mode) => {\r\n    this.state.sortMode == mode\r\n      ? this.state.sort == -1\r\n        ? this.setState({ sort: 1 })\r\n        : this.setState({ sort: -1 })\r\n      : this.setState({ sortMode: mode });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state.showWatched}\r\n                  onChange={this.toggleWatched}\r\n                  name=\"watched\"\r\n                />\r\n              }\r\n              label=\"Watched\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state.showUnwatched}\r\n                  onChange={this.toggleUnwatched}\r\n                  name=\"unwatched\"\r\n                />\r\n              }\r\n              label=\"Plan to watch\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={10}>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                      <Form.Label column sm={2}>\r\n                        Movie\r\n                      </Form.Label>\r\n                      <Col sm={10}>\r\n                        <FormControl\r\n                          value={this.state.searchString}\r\n                          type=\"text\"\r\n                          placeholder=\"Search...\"\r\n                          onChange={(event) =>\r\n                            this.setState({ searchString: event.target.value })\r\n                          }\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </th>\r\n                  <th>\r\n                    Score\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"5px\" }}\r\n                      icon={faSort}\r\n                      onClick={() => this.toggleSort(1)}\r\n                    />\r\n                  </th>\r\n                  <th>\r\n                    Watch Status\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"5px\" }}\r\n                      icon={faSort}\r\n                      onClick={() => this.toggleSort(2)}\r\n                    />\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <List\r\n                key={this.state.sort}\r\n                items={\r\n                  !this.props.selected_all\r\n                    ? this.state.entries\r\n                        .filter(\r\n                          (entry) =>\r\n                            entry.list_id == this.props.selected_list.list_id\r\n                        )\r\n                        .filter((entry) => {\r\n                          if (this.state.showWatched && entry.watch_status == 1)\r\n                            return true;\r\n                          else if (\r\n                            this.state.showUnwatched &&\r\n                            entry.watch_status == 0\r\n                          )\r\n                            return true;\r\n                          return false;\r\n                        })\r\n                        .filter(\r\n                          (entry) =>\r\n                            entry.movie_title\r\n                              .toLowerCase()\r\n                              .search(this.state.searchString.toLowerCase()) >=\r\n                            0\r\n                        )\r\n                        .sort((a, b) => {\r\n                          if (this.state.sortMode == 1)\r\n                            return (a.score - b.score) * this.state.sort;\r\n                          if (this.state.sortMode == 2)\r\n                            return (\r\n                              (a.watch_status - b.watch_status) *\r\n                              this.state.sort\r\n                            );\r\n                        })\r\n                    : this.state.ratings\r\n                        .filter((entry) => {\r\n                          if (this.state.showWatched && entry.watch_status == 1)\r\n                            return true;\r\n                          else if (\r\n                            this.state.showUnwatched &&\r\n                            entry.watch_status == 0\r\n                          )\r\n                            return true;\r\n                          return false;\r\n                        })\r\n                        .filter(\r\n                          (entry) =>\r\n                            entry.movie_title\r\n                              .toLowerCase()\r\n                              .search(this.state.searchString.toLowerCase()) >=\r\n                            0\r\n                        )\r\n                        .sort((a, b) => {\r\n                          if (this.state.sortMode == 1)\r\n                            return (a.score - b.score) * this.state.sort;\r\n                          if (this.state.sortMode == 2)\r\n                            return (\r\n                              (a.watch_status - b.watch_status) *\r\n                              this.state.sort\r\n                            );\r\n                        })\r\n                }\r\n              />\r\n            </Table>\r\n            {this.props.isOwner? <><Button\r\n              style={{ display: this.props.selected_all ? \"none\" : \"block\" }}\r\n              onClick={() =>\r\n                this.props.showEntryDialogue(this.props.selected_list)\r\n              }\r\n            >\r\n              + Add movie to this list\r\n            </Button>\r\n            <Button\r\n              style={{ display: this.props.selected_all ? \"block\" : \"none\" }}\r\n              onClick={() =>\r\n                this.props.showRatingDialogue()\r\n              }\r\n            >\r\n              + Add movie\r\n            </Button></>: <></>}\r\n            \r\n          </Col>\r\n          <Col>\r\n            <div className=\"btn-group-justified btn-group-vertical\">\r\n              <Button\r\n                className={this.props.selected_all ? \"btn-success\" : null}\r\n                style={{ marginBottom: \"20px\" }}\r\n                onClick={() => this.props.setSelectedAll(true)}\r\n              >\r\n                All\r\n              </Button>\r\n              <br></br>\r\n              <br></br>\r\n              {this.props.lists.map((list) => (\r\n                <Button\r\n                  key={list.list_id}\r\n                  className={\r\n                    list.list_id == this.props.selected_list.list_id &&\r\n                    !this.props.selected_all\r\n                      ? \"btn-success\"\r\n                      : \"btn-primary\"\r\n                  }\r\n                  style={{ marginBottom: \"3px\" }}\r\n                  onClick={() => {\r\n                    this.props.setSelectedAll(false);\r\n                    this.props.changeSelected(list);\r\n                  }}\r\n                >\r\n                  {list.is_private ? (\r\n                    <FontAwesomeIcon\r\n                      style={{ marginRight: \"5px\" }}\r\n                      icon={faLock}\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  {list.list_name}\r\n                </Button>\r\n              ))}\r\n              <br></br>\r\n              <br></br>\r\n              {this.props.isOwner? <AddList onClick={this.props.showListDialogue} /> : <></>}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Lists);\r\n","import React, { Component, useContext, useState, useEffect } from \"react\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport {\r\n  Card,\r\n  Image,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport \"../styles/personCard.css\";\r\nimport lists from \"./lists\";\r\n\r\nconst FullRating = (props) => {\r\n  let [newRating, setNewRating] = useState({\r\n    movie_id: props.movie_id,\r\n    watch_status: 0,\r\n    score: 0,\r\n    review: \"\",\r\n  });\r\n  let user = useContext(UserContext);\r\n  let [rating, setRating] = useState({\r\n    user_id: 0,\r\n    movie_id: 0,\r\n    watch_status: 0,\r\n    score: 0,\r\n    review: \"\",\r\n  });\r\n  let [ratingExists, setRatingExists] = useState(false);\r\n  let [lists, setLists] = useState([]);\r\n  let [editMode, setEditMode] = useState(false);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(user.user);\r\n    console.log(props);\r\n    fetchRating();\r\n    if (props.showLists) fetchLists();\r\n  }, [user]);\r\n\r\n  const fetchRating = () => {\r\n    console.log(user.user);\r\n    console.log(props);\r\n    if (Object.keys(user.user).length)\r\n      fetch(\r\n        `/api/users/${user.user.user_id}/${props.movie_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n          },\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          console.log(json);\r\n          if (json && Object.keys(json).length && !json.msg) {\r\n            setRatingExists(true);\r\n            setRating(json);\r\n            setEditMode(false);\r\n            setNewRating((prevState) => ({\r\n              ...prevState,\r\n              watch_status: json.watch_status,\r\n              score: json.score,\r\n              review: json.review,\r\n            }));\r\n          }\r\n        });\r\n  };\r\n\r\n  const fetchLists = () => {\r\n    console.log(user.user);\r\n    console.log(props);\r\n    if (Object.keys(user.user).length)\r\n      fetch(\r\n        `/api/users/${user.user.user_id}/movies/${props.movie_id}/lists`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n          },\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          console.log(json);\r\n          if (json && Object.keys(json).length && !json.msg) {\r\n            setLists(json);\r\n          }\r\n        });\r\n  };\r\n\r\n  const submitRating = () => {\r\n    console.log(newRating);\r\n    fetch(`/api/users/${user.user.user_id}`, {\r\n      method: ratingExists ? \"PUT\" : \"POST\",\r\n      body: JSON.stringify(newRating),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status != 200) {\r\n          localStorage.setItem(\"lastLoc\", `${history.location.pathname}`);\r\n          history.push(\"/login\");\r\n        }\r\n      })\r\n      .then(() => {\r\n        fetchRating();\r\n        setEditMode(false);\r\n      });\r\n  };\r\n  console.log(Object.keys(rating).length);\r\n  if (Object.keys(user.user).length && rating) {\r\n    if (!editMode) {\r\n      if (ratingExists && Object.keys(rating).length) {\r\n        return (\r\n          <Row>\r\n            <Col>\r\n              <Card\r\n                border={rating.watch_status ? \"success\" : \"secondary\"}\r\n                style={{ width: \"18rem\" }}\r\n              >\r\n                <Card.Header>\r\n                  {rating.watch_status ? \"Watched\" : \"Plan to watch\"}\r\n                </Card.Header>\r\n                <ListGroup className=\"list-group-flush\">\r\n                  <ListGroupItem>\r\n                    <Card.Text>\r\n                      Your score:<br></br>\r\n                      <Rating\r\n                        name=\"read-only\"\r\n                        value={rating.score * 0.5}\r\n                        max={5}\r\n                        precision={0.5}\r\n                        size=\"small\"\r\n                        readOnly\r\n                        emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                      />\r\n                    </Card.Text>\r\n                  </ListGroupItem>\r\n                  <ListGroupItem>\r\n                    <Card.Title>Your review:</Card.Title>\r\n                    <Card.Text>{rating.review}</Card.Text>\r\n                  </ListGroupItem>\r\n                </ListGroup>\r\n                <Card.Footer>\r\n                  <Button size=\"sm\" onClick={() => setEditMode(true)}>\r\n                    Edit\r\n                  </Button>\r\n                </Card.Footer>\r\n              </Card>\r\n            </Col>\r\n            {props.showLists ? <PresentInLists lists={lists} /> : <></>}\r\n          </Row>\r\n        );\r\n      }\r\n      else if (!ratingExists) {\r\n        return <Button onClick={()=>setEditMode(true)}>Rate this movie</Button>\r\n      }\r\n    } else {\r\n      return (\r\n        <Card\r\n          border={newRating.watch_status ? \"success\" : \"secondary\"}\r\n          style={{ width: \"18rem\" }}\r\n        >\r\n          <Card.Header>\r\n            <DropdownButton\r\n              variant={newRating.watch_status ? \"success\" : \"secondary\"}\r\n              title={newRating.watch_status ? \"Watched\" : \"Plan to watch\"}\r\n            >\r\n              <Dropdown.Item\r\n                eventKey=\"1\"\r\n                onClick={() =>\r\n                  newRating.watch_status\r\n                    ? setNewRating((prevState) => ({\r\n                        ...prevState,\r\n                        watch_status: 0,\r\n                      }))\r\n                    : setNewRating((prevState) => ({\r\n                        ...prevState,\r\n                        watch_status: 1,\r\n                      }))\r\n                }\r\n              >\r\n                {!newRating.watch_status ? \"Watched\" : \"Plan to watch\"}\r\n              </Dropdown.Item>\r\n            </DropdownButton>\r\n          </Card.Header>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>\r\n              <Card.Text>\r\n                Your score:<br></br>\r\n                <Rating\r\n                  name=\"customized-empty\"\r\n                  className=\"user-rating\"\r\n                  value={newRating.score * 0.5}\r\n                  max={5}\r\n                  precision={0.5}\r\n                  size=\"small\"\r\n                  emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                  onChange={(event, newScore) => {\r\n                    setNewRating((prevState) => ({\r\n                      ...prevState,\r\n                      score: newScore * 2,\r\n                    }));\r\n                  }}\r\n                />\r\n              </Card.Text>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <Card.Title>Your review:</Card.Title>\r\n              <Card.Text>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  defaultValue={newRating.review}\r\n                  onChange={(event) => {\r\n                    setNewRating((prevState) => ({\r\n                      ...prevState,\r\n                      review: event.target.value,\r\n                    }));\r\n                  }}\r\n                />\r\n              </Card.Text>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          <Card.Footer>\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => setEditMode(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"float-right\"\r\n              size=\"sm\"\r\n              onClick={submitRating}\r\n            >\r\n              {ratingExists ? \"Save\" : \"Add\"}\r\n            </Button>\r\n          </Card.Footer>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n  return <></>;\r\n};\r\n\r\nconst PresentInLists = (props) => {\r\n  let user = useContext(UserContext);\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Col>\r\n      <div className=\"btn-group-justified btn-group-vertical\">\r\n        <div style={{ marginBottom: \"10px\" }}>Present in lists:</div>\r\n        {props.lists.length ? (\r\n          props.lists.map((list) => (\r\n            <Button\r\n              key={list.list_id}\r\n              size=\"sm\"\r\n              style={{ marginBottom: \"10px\" }}\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: `/users/${user.user.user_id}/lists`,\r\n                  state: { selected_list: list },\r\n                })\r\n              }\r\n            >\r\n              {\" \"}\r\n              {list.is_private ? (\r\n                <FontAwesomeIcon style={{ marginRight: \"5px\" }} icon={faLock} />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {list.list_name}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            style={{ marginBottom: \"10px\" }}\r\n            disabled\r\n          >\r\n            Not in any :(\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst OthersRatings = (props) => {\r\n  let [ratings, setRatings] = useState([]);\r\n  let [friends, setFriends] = useState([]);\r\n  let [onlyFriends, setOnlyFriends] = useState(false);\r\n  useEffect(() => {\r\n    console.log(props);\r\n    fetchRatings();\r\n  }, []);\r\n\r\n  const fetchRatings = () => {\r\n    console.log(props);\r\n    fetch(`/api/movies/${props.movie_id}/ratings`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (json && Object.keys(json).length && !json.msg) {\r\n          setRatings(json.ratings);\r\n          setFriends(json.friends.map((friend) => friend.user_id2));\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n        style={{ marginBottom: \"50px\" }}\r\n        variant={onlyFriends ? \"success\" : \"secondary\"}\r\n        title={onlyFriends ? \"Reviews from friends\" : \"Reviews from everyone\"}\r\n      >\r\n        <Dropdown.Item\r\n          eventKey=\"1\"\r\n          onClick={() =>\r\n            onlyFriends\r\n              ? setOnlyFriends(false)\r\n              : setOnlyFriends(true)\r\n          }\r\n        >\r\n          {!onlyFriends ? \"Reviews from friends\" : \"Reviews from everyone\"}\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n      {ratings.length? ratings\r\n        .filter((rating) =>\r\n          onlyFriends ? friends.includes(rating.user_id) : true\r\n        )\r\n        .map((rating) => (\r\n          <Card key={rating.user_id} style={{ marginBottom: \"50px\" }}>\r\n            <Card.Header>{rating.username}</Card.Header>\r\n            <Card.Body>\r\n              <blockquote className=\"blockquote mb-0\">\r\n                <p> \"{rating.review}\" </p>\r\n                <Card.Subtitle>\r\n                  <Rating\r\n                    name=\"read-only\"\r\n                    value={rating.score * 0.5}\r\n                    max={5}\r\n                    precision={0.5}\r\n                    size=\"small\"\r\n                    emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                    readOnly\r\n                  />\r\n                </Card.Subtitle>\r\n              </blockquote>\r\n            </Card.Body>\r\n          </Card>\r\n        )):\r\n        <Card style={{ marginBottom: \"50px\" }}>\r\n            <Card.Body>\r\n                No reviews :(\r\n            </Card.Body>\r\n          </Card>}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nclass MovieDetailed extends Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    movie_id: this.props.movie_id,\r\n    movie: [],\r\n    genres: [],\r\n    people: [],\r\n    AdminFlag: 0\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.fetchMovie(this.state.movie_id);\r\n    console.log(this.props);\r\n    console.log(context);\r\n  }\r\n  AddShowsToggle = (movie_id, movie_name) => {\r\n    if(this.context.user.user_role === \"ADM\"){\r\n      return( <Button\r\n       variant=\"warning\"\r\n       style={{marginBottom: \"30px\"}}\r\n       onClick={() => {\r\n         this.props.history.push({\r\n           pathname: `/shows/`,\r\n           state: { movie_id: movie_id, movie_name: movie_name },\r\n         });\r\n         console.log(\"In AddShowsToggle\",this.state.movie.movie_id, this.state.movie.movie_title);\r\n       }}\r\n       block\r\n     >\r\n       Add Show [FOR ADMINS ONLY]\r\n     </Button>);\r\n  }\r\n \r\n   \r\n  };\r\n\r\n  fetchMovie(movie_id) {\r\n    fetch(`/api/movies/${movie_id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        this.setState({ movie: json });\r\n        this.setState({ people: json.people });\r\n        this.setState({ genres: json.genres });\r\n        console.log(this.state.people);\r\n        console.log(this.state.genres);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(\"hi2\");\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Image\r\n              src={this.state.movie.poster_url}\r\n              style={{ width: \"350px\", height: \"calc(350px * (40/27))\" }}\r\n              thumbnail\r\n            />\r\n            <div style={{ overflow: \"hidden\", position: \"relative\" }}>\r\n              <Rating\r\n                name=\"read-only\"\r\n                value={this.state.movie.avg_rating * 0.5}\r\n                max={5}\r\n                precision={0.1}\r\n                size=\"large\"\r\n                readOnly\r\n                emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <h1 className=\"display-4\">{this.state.movie.movie_title}</h1>\r\n            {this.state.genres.map((genre) => (\r\n              <div key={genre.genre_id}>\r\n                {capitalizeFirstLetter(genre.genre_name)}\r\n              </div>\r\n            ))}\r\n            {this.state.movie.movie_description}\r\n            <br></br>\r\n            <br></br>\r\n            <Button\r\n              variant=\"danger\"\r\n              style={{ marginBottom: \"30px\" }}\r\n              onClick={() => {\r\n                this.props.history.push({\r\n                  pathname: `/movies/${this.state.movie.movie_id}/shows`,\r\n                  state: { movie_id: this.state.movie.movie_id },\r\n                });\r\n                console.log(this.state.movie.movie_id);\r\n              }}\r\n              block\r\n            >\r\n              Book\r\n            </Button>\r\n            {this.AddShowsToggle(this.state.movie.movie_id, this.state.movie.movie_title)}\r\n            <FullRating\r\n              key={this.props.movie_id}\r\n              movie_id={this.props.movie_id}\r\n              showLists={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className=\"d-flex align-content-stretch flex-wrap bd-highlight example-parent person\">\r\n          {this.state.people.map((person) => (\r\n            <div\r\n              key={person.person_id}\r\n              className=\"p-2 bd-highlight col-example\"\r\n            >\r\n              <Card\r\n                border=\"secondary\"\r\n                style={{ width: \"160px\", height: \"300px\" }}\r\n              >\r\n                <Card.Header>\r\n                  {person.person_role == \"NULL\" ? \"Crew\" : \"Cast\"}\r\n                </Card.Header>\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={person.profile_url}\r\n                  className=\"img-fluid\"\r\n                  style={{ width: \"auto\", height: \"150px\" }}\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>{person.person_name}</Card.Title>\r\n                  <Card.Text>\r\n                    {person.person_role == \"NULL\"\r\n                      ? capitalizeFirstLetter(person.cast_or_crew)\r\n                      : \"As \" + parseRoles(person.person_role)}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <OthersRatings movie_id={this.state.movie_id} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nfunction parseRoles(string) {\r\n  var arr = string.split('\"');\r\n  var i;\r\n  var result = \"\";\r\n  for (i = 1; i < arr.length - 1; i += 1) {\r\n    result = result + arr[i];\r\n    if (i % 2 == 0) result += \" \";\r\n  }\r\n  return result;\r\n}\r\n\r\nexport { FullRating };\r\nexport default withRouter(MovieDetailed);\r\n","import React, { Component } from \"react\";\r\nimport SideBar from \"../components/sideBar\";\r\nimport TopBar from \"../components/topBar\";\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport MovieDetailed from \"../components/movieDetailed\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass MoviePage extends Component {\r\n  state = {\r\n    movie_id: this.props.match.params.id,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container fluid> \r\n          <TopBar />\r\n          <Row>\r\n            <Col xs={2} id=\"sidebar-wrapper\">\r\n              <SideBar />\r\n            </Col>\r\n            <Col xs={10}>\r\n              <MovieDetailed movie_id={this.state.movie_id}/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MoviePage);\r\n","import React, { Component, useContext, useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../contexts/userContext\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    minHeight: 65,\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst LoginPage = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  let user = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const doLogin = () => {\r\n    fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.error) alert(json.error);\r\n        else {\r\n          localStorage.setItem(\"jwt\", json.jwt);\r\n          user.loginUser();\r\n          console.log(localStorage.getItem(\"lastLoc\"));\r\n          history.push(\r\n            localStorage.getItem(\"lastLoc\")\r\n              ? localStorage.getItem(\"lastLoc\")\r\n              : \"/\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Container\r\n      className={classes.container}\r\n      maxWidth=\"xs\"\r\n      container\r\n      align=\"center\"\r\n    >\r\n      <Typography>\r\n        <Box fontWeight=\"fontWeightBold\">Login</Box>\r\n      </Typography>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <Grid container spacing={3} style={{ paddingTop: 40 }}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  size=\"small\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={() => doLogin()}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} align=\"center\">\r\n            <Typography>\r\n              Don't have an account?{\" \"}\r\n              <Link\r\n                to=\"/signup\"\r\n                style={{ textDecoration: \"none\", color: \"#3f50b5\" }}\r\n              >\r\n                <Box fontWeight=\"fontWeightBold\">Sign up</Box>\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert severity=\"error\">Your form details are not valid!</Alert>\r\n      </Snackbar>\r\n    </Container>\r\n    // <Form onSubmit={this.doLogin}>\r\n    //   <Form.Group controlId=\"formBasicEmail\">\r\n    //     <Form.Label>Username</Form.Label>\r\n    //     <Form.Control\r\n    //       type=\"text\"\r\n    //       placeholder=\"Enter username\"\r\n    //       onChange={this.handleUsernameChange}\r\n    //     />\r\n    //   </Form.Group>\r\n\r\n    //   <Form.Group controlId=\"formBasicPassword\">\r\n    //     <Form.Label>Password</Form.Label>\r\n    //     <Form.Control\r\n    //       type=\"password\"\r\n    //       placeholder=\"Password\"\r\n    //       onChange={this.handlePasswordChange}\r\n    //     />\r\n    //   </Form.Group>\r\n    //   <Button variant=\"primary\" type=\"submit\">\r\n    //     Submit\r\n    //   </Button>\r\n    // </Form>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Card, Image, Container, Row, Col, Button} from \"react-bootstrap\";\r\nimport Box from '@material-ui/core/Box';\r\nimport \"../styles/SeatsPage.css\";\r\nimport { TableRow } from \"@material-ui/core\";\r\n\r\nvar BookedSeats = []\r\nvar sn=[];\r\nvar i;\r\n\r\nfor(i=1;i<31;i++)sn.push(i);\r\n\r\nclass SeatsPage extends Component{\r\n    \r\n    constructor(props){\r\n        \r\n        super(props);\r\n        this.state={\r\n            show_id: this.props.location.state.show_id,\r\n            seats:[],\r\n            code_letters:[],\r\n            code_numbers:[]\r\n        };\r\n        this.fetchSeats(this.state.show_id);\r\n    }\r\n    \r\n    RemoveSeat(arr, value) {\r\n        var index = arr.indexOf(value);\r\n        if (index > -1) {\r\n          arr.splice(index, 1);\r\n        }\r\n        return arr;\r\n      }\r\n\r\n    SeatSelect=(id)=>{\r\n        //console.log(\"Pressed\");\r\n        let t = document.getElementById(id).classList.toggle(\"select\");\r\n        if(t==true){\r\n            BookedSeats.push(id);\r\n        }\r\n        else{\r\n            this.RemoveSeat(BookedSeats,id);\r\n            \r\n        }\r\n    }\r\n\r\n    SeatCheck=(code,status)=>{\r\n        if(status==0){\r\n            return(\r\n                <button  className=\"seat-btn\"style ={{backgroundColor:\"red\", borderRadius:\"13px\", padding:\"0px\", width:\"35px\"}} id = {code} ><div style={{fontSize:\"12px\", textAlign:\"centre\"}}>{code}</div></button>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <button className=\"seat-btn\" style ={{borderRadius:\"13px\", padding:\"0px\", width:\"35px\"}} id = {code} onClick={()=>this.SeatSelect(code)}><div style={{fontSize:\"12px\", textAlign:\"centre\"}}>{code}</div></button>\r\n            );\r\n        }\r\n    }\r\n\r\n  SortSeats=(a)=>{\r\n        let i;\r\n        let j;\r\n        for(i=0;i<a.length;i++){\r\n            for(j=0;j<a.length-1;j++){\r\n                let n = parseInt(a[j].seat_code.slice(1));\r\n                let m = parseInt(a[j+1].seat_code.slice(1));\r\n                let c = a[j].seat_code.charAt(0);\r\n                let d = a[j+1].seat_code.charAt(0);\r\n                if(c.localeCompare(d)==0){\r\n                    if(n>m){\r\n                        let temp = a[j];\r\n                        a[j]=a[j+1];\r\n                        a[j+1]=temp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    fetchSeats(show_id){\r\n        fetch(`/api/shows/${show_id}/seats`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        \r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        json = this.SortSeats(json);\r\n        this.setState({seats: json});\r\n        var i;\r\n        var j;\r\n        let l = new Set();\r\n        let n = new Set();\r\n        for(i=0;i<json.length;i++){\r\n           l.add(json[i].seat_code.charAt(0));\r\n           n.add(json[i].seat_code.slice(1));\r\n        }\r\n        this.setState({code_letters: Array.from(l),code_numbers:Array.from(n)});\r\n        console.log(\"code_letters:\",this.state.code_letters); // Gives proper sorted seats array\r\n      });\r\n    }\r\n    \r\n      render(){\r\n          if(this.state.seats.length && this.state.code_letters.length && this.state.code_numbers.length){\r\n          return(\r\n              <>\r\n              <div className=\"page-container\">\r\n              \r\n              <div><p className = \"seattitle\">SELECT YOUR SEATS</p></div>\r\n              \r\n              \r\n              <div /* class=\"container-fluid\" */ className=\"btns-container\" /* style={{border:\"10px solid black\",backgroundColor:\"grey\", width:\"fit-content\"}} */>\r\n              \r\n                  {this.state.code_letters.map((letters,index) =>\r\n                  ( <Row style={{flexWrap:\"nowrap\", width:\"900px\", justifyContent:\"space-around\"}}>\r\n                   \r\n                      {this.state.code_numbers.map((numbers)=>(\r\n                      <Col key={numbers} style={{paddingRight:\"0px\", paddingLeft:\"10px\"}}>\r\n                          <br></br>\r\n                          {console.log(\"Check: \", this.state)}\r\n                          {this.SeatCheck(letters+numbers,this.state.seats[index*this.state.code_numbers.length + parseInt(numbers)-1].seat_status)}\r\n                          \r\n                          \r\n                         \r\n                      </Col>\r\n                      ))\r\n                    }\r\n                      </Row>\r\n                  ))\r\n                   }\r\n                   \r\n\r\n              </div>\r\n              <hr/>\r\n              <div>\r\n              <p className = \"screen\">SCREEN HERE</p>\r\n              <br/><br/>\r\n              <br/><br/>\r\n              <Button variant=\"success\" \r\n              style={{width: \"50%\",height: \"100px\",marginRight: \"25%\",marginLeft: \"25%\",\r\n              fontSize:\"30px\", borderRadius:\"100px\"}} onClick={() => {\r\n                this.props.history.push({pathname:`/shows/${this.state.show_id}/book`, state:{SeatsBooked:BookedSeats,show_id:this.state.show_id}});\r\n                \r\n              }}>Proceed to pay</Button>\r\n              </div>\r\n              </div>\r\n              </>\r\n\r\n          );\r\n            }\r\n            else{\r\n                return(<></>);\r\n            }\r\n      }\r\n    \r\n}\r\nexport default withRouter(SeatsPage);","import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { withRouter } from \"react-router\";\r\nimport { Card, Image, Container, Row, Col, Button} from \"react-bootstrap\";\r\n\r\nclass ShowsPage extends Component{\r\n  \r\n      constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            movie_id: this.props.location.state.movie_id,\r\n            //startDate: new Date(),\r\n            shows:[]\r\n        }\r\n        //console.log(this.props);\r\n        this.fetchShows(this.state.movie_id);\r\n      }\r\n     /*handleChange = (date) => {\r\n        this.setState({\r\n          startDate: date\r\n        })\r\n      }\r\n      onFormSubmit = (e) => {\r\n       e.preventDefault();\r\n       console.log(this.state.startDate);\r\n       console.log(this.state.shows);\r\n    }*/\r\n\r\n      fetchShows(movie_id){\r\n        fetch(`/api/movies/${movie_id}/shows`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n       this.setState({shows: json})\r\n       \r\n       console.log(json);\r\n      });\r\n      }\r\n      render(){\r\n        if(this.state.shows.length){\r\n          return (\r\n       /* <form onSubmit={ this.onFormSubmit }>  \r\n        <div className=\"form-group\">\r\n        <p className = \"ShowTitle\"> Choose Date and Time: </p>\r\n          <DatePicker\r\n              selected={ this.state.startDate }\r\n              onChange={ this.handleChange }\r\n              name=\"startDate\"\r\n              dateFormat=\"MM/dd/yyyy\"\r\n          />\r\n         <button className=\"btn btn-primary\">Set Date</button>\r\n        </div>\r\n      </form>*/\r\n   <div className = \"ShowList\">\r\n   {this.state.shows.map((show) => \r\n       (<div\r\n          key={show.show_id}\r\n          className=\"d-flex flex-column bd-highlight mb-3\"\r\n        >\r\n      <Card bg=\"dark\" text = \"light\">\r\n  <Card.Header as=\"h5\" >Featured</Card.Header>\r\n  <Card.Body>\r\n    <Card.Title>{show.theatre_mall}</Card.Title>\r\n    <Card.Text>\r\n      {show.date_time}\r\n    </Card.Text>\r\n    <Button variant=\"success\" onClick={() => {\r\n          this.props.history.push({pathname:`/shows/${show.show_id}/seats`, state:{show_id:show.show_id}});\r\n          console.log(show.show_id);\r\n        }}>Book Show</Button>\r\n  </Card.Body>\r\n</Card>\r\n        \r\n       </div>\r\n   ))}\r\n     </div>\r\n \r\n      \r\n          );\r\n      }\r\n      else{\r\n        return(\r\n          <div className=\"NoShows\" style={{position: \"absolute\",top:\"30%\",marginLeft:\"20%\",marginRight:\"20%\",height:\"40%\",fontSize:\"50px\"}}>\r\n            Sorry ! There are no shows for this movie currently! You may return to the home page:\r\n            <br/><br/>\r\n            <Button variant=\"warning\" size = \"lg\" block style={{fontSize:\"30px\"}}onClick={() => {\r\n                this.props.history.push(\"/\");\r\n              }}>Back to Home</Button>\r\n              \r\n  \r\n          </div>\r\n        );\r\n      }\r\n      }\r\n}\r\nexport default withRouter(ShowsPage);","import React, { useState } from \"react\";\r\nimport GooglePayButton from \"@google-pay/button-react\";\r\n\r\nfunction PaymentButton() {\r\n    const paymentRequest = {\r\n      apiVersion: 2,\r\n      apiVersionMinor: 0,\r\n      allowedPaymentMethods: [\r\n        {\r\n          type: \"CARD\",\r\n          parameters: {\r\n            allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\r\n            allowedCardNetworks: [\"MASTERCARD\", \"VISA\"]\r\n          },\r\n          tokenizationSpecification: {\r\n            type: \"PAYMENT_GATEWAY\",\r\n            parameters: {\r\n              gateway: \"example\"\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      merchantInfo: {\r\n        merchantId: \"12345678901234567890\",\r\n        merchantName: \"Demo Merchant\"\r\n      },\r\n      transactionInfo: {\r\n        totalPriceStatus: \"FINAL\",\r\n        totalPriceLabel: \"Total\",\r\n        totalPrice: \"100.00\",\r\n        currencyCode: \"USD\",\r\n        countryCode: \"US\"\r\n      }\r\n    };\r\n    const [buttonColor, setButtonColor] = useState(\"default\");\r\n  const [buttonType, setButtonType] = useState(\"plain\");\r\n  const [buttonSizeMode, setButtonSizeMode] = useState(\"static\");\r\n  const [buttonWidth, setButtonWidth] = useState(300);\r\n  const [buttonHeight, setButtonHeight] = useState(90);\r\n  return(\r\n    <GooglePayButton\r\n    environment=\"TEST\"Home\r\n    buttonColor={buttonColor}\r\n    buttonType={buttonType}\r\n    buttonSizeMode={buttonSizeMode}\r\n    paymentRequest={paymentRequest}\r\n    onLoadPaymentData={paymentRequest => {\r\n      console.log(\"load payment data\", paymentRequest);\r\n    }}\r\n    style={{ width: buttonWidth, height: buttonHeight }}\r\n  />\r\n  );\r\n}\r\nexport default PaymentButton;","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Card, Image, Container, Row, Col, Button} from \"react-bootstrap\";\r\nimport PaymentButton from \"../components/PaymentButton\";\r\nimport \"../styles/BookingPage.css\";\r\n\r\nclass BookingPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            BSeats: this.props.location.state.SeatsBooked, \r\n            show_id: this.props.location.state.show_id\r\n        }\r\n        console.log(this.state.BSeats);\r\n    }\r\n\r\n    Book(seats,show_id){\r\n        fetch(`/api/shows/${show_id}/book`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n            seats: seats,\r\n            paymentDeets: \"hi\"\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n       this.setState({seats: json})\r\n       \r\n       console.log(json);\r\n      });\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n     \r\n            <div className=\"GPay\">\r\n                <p className = \"Thanks\">Thank you! Please complete your booking by paying below. Make sure to receive your ticket! Enjoy</p>\r\n                <Button variant=\"info\" size = \"lg\" block>Payment Gateway</Button>\r\n                <br/>\r\n                <br/>\r\n               \r\n                <Button variant=\"success\" size = \"lg\" onClick={()=> this.Book(this.state.BSeats,this.state.show_id)} block style={{boxShadow:\"3px 4px\"}}>Send ticket</Button>\r\n                <br/>\r\n                <br/>\r\n                <Button variant=\"warning\" size = \"lg\" block onClick={() => {\r\n                this.props.history.push(\"/\");\r\n              }}>Back to Home</Button>\r\n                <br/>\r\n                <br/>\r\n                <br/><br/><br/><br/>\r\n            </div>\r\n           \r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BookingPage);\r\n\r\n","import { FullRating } from \"./movieDetailed\";\r\nimport React, { Component, useState } from \"react\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport { Modal, Form, Button } from \"react-bootstrap\";\r\nimport SearchBar from \"./searchBar\";\r\n\r\nconst RatingDialogue = (props) => {\r\n  const [movie, setMovie] = useState({});\r\n    const [hasSelectedMovie, setHasSelectedMovie] = useState(false);\r\n\r\n  const getMovie = (movie_id, movie_title) => {\r\n    console.log(movie_id);\r\n    console.log(movie_title);\r\n    setMovie({ movie_id: movie_id, movie_title: movie_title });\r\n    setHasSelectedMovie(true);\r\n  };\r\n  const closeBox = () => {\r\n    setMovie({});\r\n    setHasSelectedMovie(false);\r\n    props.closeDialogue();\r\n  };\r\n\r\n  const MovieDisplay = () => {\r\n    if (hasSelectedMovie) {\r\n      return (\r\n        <div>\r\n          <Button onClick={() => setHasSelectedMovie(false)} style={{marginBottom: \"10px\"}}>\r\n            {movie.movie_title}\r\n          </Button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <SearchBar entryDialogue={true} sendResult={getMovie} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add a movie</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <MovieDisplay/>\r\n        {hasSelectedMovie?<FullRating key={movie.movie_id} movie_id={movie.movie_id} showList={false}/>:<></>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={closeBox}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RatingDialogue;\r\n","import React, { Component, useEffect, useState, useContext } from \"react\";\r\nimport { Container, Row, Col, Card, Form, Table, Modal } from \"react-bootstrap\";\r\nimport { Button, ListItemText, ListItem, Avatar } from \"@material-ui/core\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport Movies from \"../components/movies\";\r\nimport SideBar from \"../components/sideBar\";\r\nimport TopBar from \"../components/topBar\";\r\nimport AddList, { ListDialogue } from \"../components/addList\";\r\nimport RatingDialogue from \"../components/ratingDialogue\";\r\nimport { EntryDialogue } from \"../components/list\";\r\nimport { withRouter, useHistory, useLocation, useParams } from \"react-router\";\r\nimport Lists from \"../components/lists\";\r\n\r\nconst ListOwner = () => {\r\n  let user = useContext(UserContext);\r\n  let [owner, setOwner] = useState({username: \"\", profile_url: \"\"})\r\n  let params = useParams();\r\n  useEffect(() => {\r\n    console.log(user.user);\r\n    console.log(params);\r\n    if(params.id!=user.user.user_id) fetchUser();\r\n    else setOwner(user.user);\r\n  }, [user]);\r\n\r\n  const fetchUser = () => {\r\n    fetch(`/api/users/${params.id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setOwner(json)\r\n      });\r\n  };\r\nif(owner.username!=undefined){\r\n  return <>{owner.profile_url ? (\r\n    <Avatar\r\n      src={owner.profile_url}\r\n      style={{ marginLeft: \"20px\" }}\r\n    ></Avatar>\r\n  ) : (\r\n    <Avatar style={{ marginLeft: \"15px\" }}>\r\n      {owner.username.charAt(0).toUpperCase()}\r\n    </Avatar>\r\n  )}\r\n  <ListItem>\r\n    <ListItemText primary={`${owner.username}'s lists`} />\r\n  </ListItem></>\r\n  }\r\n  return <></>\r\n};\r\n\r\nclass ListsPage extends Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    showList: false,\r\n    showEntry: false,\r\n    showRating: false,\r\n    lists: [{ list_id: 0, list_name: \"\", is_private: 0 }],\r\n    selected_list: {},\r\n    refreshEntries: true,\r\n    selected_all: true,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.location);\r\n  }\r\n\r\n  showListDialogue = () => {\r\n    this.setState({ showList: true });\r\n  };\r\n  closeListDialogue = () => {\r\n    this.setState({ showList: false });\r\n  };\r\n  showEntryDialogue = (list) => {\r\n    console.log(list);\r\n    this.setState({ selected_list: list, showEntry: true });\r\n  };\r\n  closeEntryDialogue = () => {\r\n    this.setState({ showEntry: false });\r\n  };\r\n  showRatingDialogue = () => {\r\n    this.setState({ showRating: true });\r\n  };\r\n  closeRatingDialogue = () => {\r\n    this.setState({ showRating: false });\r\n  };\r\n\r\n  reloadEntries = () => {\r\n    this.state.refreshEntries\r\n      ? this.setState({ refreshEntries: false, selected_all: false })\r\n      : this.setState({ refreshEntries: true, selected_all: false });\r\n  };\r\n  reloadLists = () => {\r\n    this.fetchLists();\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchLists();\r\n  };\r\n\r\n  fetchLists = () => {\r\n    fetch(\r\n      `/api/users/${this.props.match.params.id}/lists`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status != 200) {\r\n          localStorage.setItem(\"lastLoc\", `${this.props.location.pathname}`);\r\n          this.props.history.push(\"/login\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        if (json.msg != undefined) {\r\n          localStorage.setItem(\"lastLoc\", `${this.props.location.pathname}`);\r\n          this.props.history.push(\"/login\");\r\n        } else {\r\n          if (\r\n            Object.keys(this.state.selected_list).length === 0 &&\r\n            json.length\r\n          ) {\r\n            console.log(Object.keys(this.state.selected_list).length);\r\n            console.log(\"1\");\r\n            console.log(json);\r\n            this.setState({ lists: json, selected_list: json[0] });\r\n          } else {\r\n            console.log(Object.keys(this.state.selected_list).length);\r\n            this.setState({ lists: json });\r\n          }\r\n        }\r\n      })\r\n      .then(() => {\r\n        if (this.props.location.state)\r\n          this.setState({\r\n            selected_list: this.props.location.state.selected_list,\r\n            selected_all: false,\r\n          });\r\n      });\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <TopBar />\r\n          <br></br>\r\n          <Row>\r\n            <Col xs={2} id=\"sidebar-wrapper\">\r\n              <SideBar />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <Container>\r\n                <ListOwner/>\r\n                <Lists\r\n                  isOwner={this.context.user.user_id == this.props.match.params.id}\r\n                  key={\r\n                    this.state.lists.toString() +\r\n                    \" \" +\r\n                    this.state.refreshEntries.toString() +\r\n                    \" \" +\r\n                    this.state.selected_list.toString() +\r\n                    \" \" +\r\n                    this.state.selected_all.toString()\r\n                  }\r\n                  lists={this.state.lists}\r\n                  selected_list={this.state.selected_list}\r\n                  changeSelected={(list) => {\r\n                    this.setState({ selected_list: list });\r\n                  }}\r\n                  setSelectedAll={(bool) =>\r\n                    this.setState({ selected_all: bool })\r\n                  }\r\n                  selected_all={this.state.selected_all}\r\n                  showListDialogue={this.showListDialogue}\r\n                  showEntryDialogue={this.showEntryDialogue}\r\n                  showRatingDialogue={this.showRatingDialogue}\r\n                />\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n          <ListDialogue\r\n            selected_list={this.state.selected_list}\r\n            show={this.state.showList}\r\n            closeDialogue={this.closeListDialogue}\r\n            reloadPage={this.reloadLists}\r\n          />\r\n          <EntryDialogue\r\n            list={this.state.selected_list}\r\n            show={this.state.showEntry}\r\n            closeDialogue={this.closeEntryDialogue}\r\n            reloadPage={this.reloadEntries}\r\n          />\r\n          <RatingDialogue\r\n            show={this.state.showRating}\r\n            closeDialogue={this.closeRatingDialogue}\r\n            reloadPage={this.reloadEntries}\r\n          />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ListsPage);\r\n","import SearchBar from \"../components/searchBar\";\r\nimport React, { Component, useContext, useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../contexts/userContext\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    minHeight: 65,\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst SignupPage = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [errorAlert, setErrorAlert] = useState(\"\");\r\n  let user = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [cityId, setCityId] = useState(0);\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [hasSelectedCity, setHasSelectedCity] = useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const getCity = (city_id, city_name) => {\r\n    console.log(city_id, city_name);\r\n    setCityId(city_id);\r\n    setCityName(city_name);\r\n    setHasSelectedCity(true);\r\n  };\r\n\r\n  const CityDisplay = () => {\r\n    if (hasSelectedCity) {\r\n      return (\r\n        <div>\r\n          <Button variant=\"contained\">\r\n            {cityName}\r\n          </Button>\r\n          <IconButton aria-label=\"delete\" onClick={() => setHasSelectedCity(false)}>\r\n            <DeleteIcon fontSize=\"small\"/>\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <SearchBar entryDialogue={true} sendResult={getCity} type=\"city\" />\r\n      );\r\n    }\r\n  };\r\n\r\n  const uploadFields = () => {\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      setErrorAlert(\"Your email is not valid!\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (!hasSelectedCity) {\r\n      setErrorAlert(\"Please select a city from the given dropdown\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    fetch(\"/api/signup\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n        email: email,\r\n        city_id: cityId,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.error) {\r\n          setErrorAlert(json.error);\r\n          setOpen(true);\r\n        } else {\r\n          localStorage.setItem(\"jwt\", json.jwt);\r\n          user.loginUser();\r\n          console.log(localStorage.getItem(\"lastLoc\"));\r\n          history.push(\r\n            localStorage.getItem(\"lastLoc\")\r\n              ? localStorage.getItem(\"lastLoc\")\r\n              : \"/\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Container\r\n      className={classes.container}\r\n      maxWidth=\"xs\"\r\n      container\r\n      align=\"center\"\r\n    >\r\n      <Typography>\r\n        <Box fontWeight=\"fontWeightBold\">Sign up</Box>\r\n      </Typography>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n        autocomplete=\"off\"\r\n      >\r\n        <Grid container spacing={3} style={{ paddingTop: 40 }}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  size=\"small\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CityDisplay />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={() => uploadFields()}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} align=\"center\">\r\n            <Typography>\r\n              Already have an account?{\" \"}\r\n              <Link\r\n                to=\"/login\"\r\n                style={{ textDecoration: \"none\", color: \"#3f50b5\" }}\r\n              >\r\n                <Box fontWeight=\"fontWeightBold\">Login</Box>\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert severity=\"error\">{errorAlert}</Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignupPage);\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport {\r\n  CheckCircleFill,\r\n  CheckSquareFill,\r\n  PlusCircleFill,\r\n  Trash2Fill,\r\n  TrashFill,\r\n  XCircleFill,\r\n} from \"react-bootstrap-icons\";\r\nimport { Card, Alert, Button, Image } from \"react-bootstrap\";\r\nfunction PersonCard(props) {\r\n  let history = useHistory();\r\n  const [friendStyles, setFriendStyles] = useState({\r\n    border: \"\",\r\n    text: \"Add Friend\",\r\n    buttonVariant: \"success\",\r\n    logo: <PlusCircleFill style={{ verticalAlign: \"text-bottom\" }} />,\r\n  });\r\n  const [friendStatus, setFriendStatus] = useState(props.friendStat);\r\n  useEffect(() => {\r\n    switch (friendStatus) {\r\n      case 0:\r\n        setFriendStyles({\r\n          border: \"\",\r\n          text: \"Add Friend\",\r\n          buttonVariant: \"success\",\r\n          logo: <PlusCircleFill style={{ verticalAlign: \"text-bottom\" }} />,\r\n        });\r\n        break;\r\n      case 1:\r\n        setFriendStyles({\r\n          border: \"warning\",\r\n          text: \"Cancel Req\",\r\n          buttonVariant: \"danger\",\r\n          logo: <XCircleFill style={{ verticalAlign: \"text-bottom\" }} />,\r\n        });\r\n        break;\r\n      case 2:\r\n        setFriendStyles({\r\n          border: \"success\",\r\n          text: \"Unfriend\",\r\n          buttonVariant: \"danger\",\r\n          logo: <TrashFill style={{ verticalAlign: \"text-bottom\" }} />,\r\n        });\r\n        break;\r\n      case 3:\r\n        setFriendStyles({\r\n          border: \"warning\",\r\n          text: \"Accept\",\r\n          buttonVariant: \"success\",\r\n          logo: <CheckSquareFill style={{ verticalAlign: \"text-bottom\" }} />,\r\n        });\r\n    }\r\n  }, [friendStatus]);\r\n  const accFriend = (id) => {\r\n    console.log(`trying to accept req from ${id}`);\r\n    fetch(`/api/users/accept/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    });\r\n    /*         .then(res=>res.json())\r\n        .then(json=>{\r\n            console.log(json);\r\n            console.log(`friend request accepted from ${id}`);\r\n        }) */\r\n    setFriendStatus(2);\r\n  };\r\n  const addFriend = (id) => {\r\n    /* etFriend(1);\r\n        set({\r\n            text:\"Cancel Req\",\r\n            logo:<XCircleFill style={{verticalAlign:\"text-bottom\"}}/>\r\n        });\r\n        console.log(\"added as friend\"); */\r\n    fetch(`/api/users/request/${id}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    });\r\n    /*         .then(res=>res.json())\r\n        .then(json=>{\r\n            console.log(json);\r\n            console.log(`friend request sent to ${id}`);\r\n        }) */\r\n    setFriendStatus(1);\r\n  };\r\n  const removeFriend = (id) => {\r\n    /* setFriend(0);\r\n        set({\r\n            text:\"Add Friend\",\r\n            logo:<PlusCircleFill style={{verticalAlign:\"text-bottom\"}}/>\r\n        }); */\r\n    fetch(`/api/users/unfriend/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    });\r\n    /*         .then(res=>res.json())\r\n        .then(json=>{console.log(json);\r\n                        console.log(\"unfriended\")}); */\r\n    console.log(`removed friend ${id}`);\r\n    setFriendStatus(0);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <Card\r\n        border={friendStyles.border}\r\n        style={{\r\n          width: \"12rem\",\r\n          borderWidth: \"1.5px\",\r\n          border: \"solid\",\r\n          boxShadow: \"0 2.8px 2.2px rgba(0, 0, 0, 0.034),0 6.7px 5.3px rgba(0, 0, 0, 0.048),0 12.5px 10px rgba(0, 0, 0, 0.06), 0 22.3px 17.9px rgba(0, 0, 0, 0.072),0 41.8px 33.4px rgba(0, 0, 0, 0.086),0 100px 80px rgba(0, 0, 0, 0.12)\",\r\n          borderColor: \"#DEE2E6\",\r\n          maxHeight: \"20rem\",\r\n          borderRadius: \"15px\",\r\n        }}\r\n      >\r\n        <Card.Body>\r\n          <Image\r\n            style={{minHeight:\"146px\",minWidth:\"146px\"}}\r\n            src={props.pic}\r\n            roundedCircle\r\n            fluid\r\n            thumbnail\r\n          />\r\n          <br />\r\n          <br />\r\n          <Card.Title onClick={()=>history.push(`/users/${props.personKey}/lists`)}>{props.name}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            {props.city}\r\n          </Card.Subtitle>\r\n          {friendStatus != 3 ? (\r\n            <Button\r\n              size=\"sm\"\r\n              onClick={() =>\r\n                friendStatus === 0\r\n                  ? addFriend(props.personKey)\r\n                  : removeFriend(props.personKey)\r\n              }\r\n              variant={friendStyles.buttonVariant}\r\n            >\r\n              {friendStyles.logo} {friendStyles.text}\r\n            </Button>\r\n          ) : (\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <Button\r\n                size=\"sm\"\r\n                onClick={() => accFriend(props.personKey)}\r\n                variant=\"success\"\r\n              >\r\n                <CheckCircleFill style={{ verticalAlign: \"text-bottom\" }} />{\" \"}\r\n                Accept\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  removeFriend(props.personKey);\r\n                }}\r\n                size=\"sm\"\r\n                variant=\"secondary\"\r\n              >\r\n                <TrashFill />\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\nexport default PersonCard;\r\n","import React, { useState, useContext } from 'react';\r\nimport SideBar from '../components/sideBar';\r\nimport TopBar from '../components/topBar';\r\nimport '../styles/ProfilePage.css'\r\nimport {Button,Grid,Box,Avatar} from '@material-ui/core';\r\nimport UserContext from \"../contexts/userContext\";\r\nfunction ProfilePage() {\r\n    const [image, setImage] = useState(\"\");\r\n    const [photoURL, setPhotoURL] = useState(\"\");\r\n    let user = useContext(UserContext);\r\n    let imgurl = user.user.profile_url;\r\n    let username = user.user.username;\r\n    const uploadImage = () => {\r\n        console.log(image);\r\n        const data = new FormData();\r\n        data.append(\"upload_preset\", \"pkftr8lo\");\r\n        data.append(\"file\", image);\r\n        fetch(\"https://api.cloudinary.com/v1_1/dcowmd6uf/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            }\r\n            else {\r\n                console.log(\"url below :\");\r\n                console.log(data.url);\r\n                postPicture(data.url);\r\n                return (data);\r\n            }\r\n        })\r\n    }\r\n\r\n    const postPicture = pic => {\r\n        console.log(`injecting to DB ${pic}`);\r\n        fetch(`/api/users/${user.user.user_id}/update/profile`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({profile_url:pic}),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n                Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n            },\r\n        })\r\n    }\r\n    return ( <>   \r\n            {/* <TopBar/> */}\r\n            <div className=\"content-wrapper\">\r\n            {/* <div >\r\n                <SideBar/>\r\n            </div> */}\r\n            <div  className=\"real-content-wrapper\" style={{/* border:\"solid black\" ,*/ width:\"100%\"}}>\r\n                <div className=\"profile-card-wrapper\">\r\n                    \r\n                    <div className=\"avatar-row\">\r\n                    <div className\r\n                    =\"nondecor\">\r\n                    <div className=\"avatar-wrapper\">\r\n                    <Avatar alt={username} src={imgurl} style={{height:\"100px\",width:\"100px\"}}>\r\n            {username.charAt(0).toUpperCase()}\r\n        </Avatar>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"editbutton\" /* style={{width:\"725.25px\"}} */>\r\n                    <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                    <Button variant=\"contained\" onClick={uploadImage}>UPLOAD</Button>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div id=\"username\">\r\n                        <h5 style={{width:\"192px\"}}>Username</h5><h5 style={{width:\"370px\"}}>{username}</h5>                       \r\n                    </div> \r\n                    \r\n\r\n                    \r\n                    <div className=\"label-wrapper\">\r\n                        <h5 style={{width:\"192px\"}}>Email</h5><h5 style={{width:\"370px\"}}>{user.user.email}</h5>                       \r\n                    </div> \r\n                    \r\n                    <div className=\"label-wrapper\">\r\n                        <h5 style={{width:\"192px\"}}>City</h5><h5 style={{width:\"370px\"}}>{user.user.city}</h5>                       \r\n                    </div> \r\n                     \r\n                </div>\r\n                {/* <div clssname=\"proile-card-wrapper\" style={{border:\"solid balck\"}}>\r\n                    <h5> Hello Kevin</h5>\r\n                </div> */}\r\n            </div>\r\n            </div>\r\n            </>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React, { Component, useState, useEffect, useContext } from \"react\";\r\nimport \"../styles/HomePage.css\";\r\nimport PersonCard from \"../components/PersonCard\";\r\nimport SideBar from \"../components/sideBar\";\r\nimport TopBar from \"../components/topBar\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  CardDeck,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport { IconButton,Button } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SearchBar from \"../components/searchBar\";\r\nimport ProfielPage from \"./ProfilePage\";\r\nimport \"../styles/FriendsPage.css\";\r\n\r\nfunction FriendsPage() {\r\n  let user = useContext(UserContext);\r\n  const [image, setImage] = useState(\"\");\r\n  const [photoURL, setPhotoURL] = useState(\"\");\r\n  const [friends, setFriends] = useState([]);\r\n  const [incoming, setIncoming] = useState([]);\r\n  const [outgoing, setOutgoing] = useState([]);\r\n  const [friendsIDS, setFriendsIDS] = useState([]);\r\n  const [incomingIDS, setIncomingIDS] = useState([]);\r\n  const [outgoingIDS, setOutgoingIDS] = useState([]);\r\n  useEffect(() => {\r\n    console.log(user);\r\n    if (user.user.user_id != undefined) fetchFriends();\r\n  }, [user]);\r\n\r\n  const [hasSelectedSearchUser, setHasSelectedSearchUser] = useState(false);\r\n  const [searchUser, setSearchUser] = useState({});\r\n  const [searchFriendStat, setSearchFriendStat] = useState(0);\r\n\r\n  const getSearchUser = (user_id, username, pic, city) => {\r\n    console.log(user_id, username);\r\n    setSearchUser({\r\n      user_id: user_id,\r\n      username: username,\r\n      profile_url: pic,\r\n      city_name: city,\r\n    });\r\n    console.log(friendsIDS);\r\n    console.log(outgoingIDS);\r\n    console.log(incomingIDS);\r\n    console.log(searchUser);\r\n    if (friendsIDS.includes(parseInt(user_id))) {\r\n      console.log(\"setting 2\");\r\n      setSearchFriendStat(2);\r\n    } else if (outgoingIDS.includes(parseInt(user_id))) {\r\n      console.log(\"setting 1\");\r\n      setSearchFriendStat(1);\r\n    } else if (incomingIDS.includes(parseInt(user_id))) {\r\n      console.log(\"setting 3\");\r\n      setSearchFriendStat(3);\r\n    }\r\n\r\n    setHasSelectedSearchUser(true);\r\n    console.log(searchFriendStat);\r\n  };\r\n\r\n  const UserSearchDisplay = () => {\r\n    if (hasSelectedSearchUser) {\r\n      return (\r\n        <div>\r\n          <PersonCard\r\n            pic={searchUser.profile_url}\r\n            personKey={searchUser.user_id}\r\n            name={searchUser.username}\r\n            city={searchUser.city_name}\r\n            friendStat={searchFriendStat}\r\n          />\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            onClick={() => {\r\n              setHasSelectedSearchUser(false);\r\n              setSearchFriendStat(0);\r\n            }}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <SearchBar\r\n          entryDialogue={true}\r\n          sendResult={getSearchUser}\r\n          type=\"user\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const uploadImage = () => {\r\n    console.log(image);\r\n    const data = new FormData();\r\n    data.append(\"upload_preset\", \"pkftr8lo\");\r\n    data.append(\"file\", image);\r\n    fetch(\"https://api.cloudinary.com/v1_1/dcowmd6uf/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          console.log(\"url below :\");\r\n          console.log(data.url);\r\n          postPicture(data.url);\r\n          return data;\r\n        }\r\n      });\r\n  };\r\n  // _Fucntion to post image\r\n  const postPicture = (pic) => {\r\n    console.log(`injecting to DB ${pic}`);\r\n    fetch(\r\n      `/api/users/${user.user.user_id}/update/profile`,\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ profile_url: pic }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      }\r\n    );\r\n  };\r\n  //_Function to fetch all friends\r\n  const fetchFriends = () => {\r\n    fetch(`/api/users/${user.user.user_id}/friends`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(\"am I authorised?\");\r\n        console.log(res);\r\n        console.log(res.Friends);\r\n        setFriends(res.Friends);\r\n        setFriendsIDS(res.Friends.map((friend) => friend.user_id));\r\n        setIncoming(res.Incoming);\r\n        setIncomingIDS(res.Incoming.map((friend) => friend.user_id));\r\n        setOutgoing(res.Outgoing);\r\n        setOutgoingIDS(res.Outgoing.map((friend) => friend.user_id));\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className=\"page-wrapper\">\r\n        <div>\r\n          <SideBar />\r\n        </div>\r\n        <div className=\"sureal-content-wrapper\">\r\n          <Row\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              width: \"95%\",\r\n            }}\r\n          >\r\n            {/* <Col xs={2} id=\"sidebar-wrapper\">\r\n                    <SideBar />\r\n                </Col> */}\r\n            <Row\r\n              style={{ width: \"100%\", marginLeft: \"40px\", marginTop: \"20px\", height:\"fit-content\" }}\r\n            >\r\n              <Col xs={6} style={{padding:\"0\",margin:\"0\",height:\"fit-content\"}}>\r\n                <ProfielPage />\r\n              </Col>\r\n              <Col xs={3}>\r\n              {\" \"}\r\n              <div className=\"friend-serach-group\">\r\n                <h6>Search for users</h6>\r\n                <UserSearchDisplay />\r\n              </div>\r\n              </Col>\r\n            </Row>\r\n            {/* <Row\r\n              style={{\r\n                marginLeft: \"40px\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              \r\n            </Row> */}\r\n            <Row\r\n              style={{\r\n                marginTop:\"20px\",\r\n                marginLeft: \"20px\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                flexWrap:\"wrap\",\r\n              }}\r\n            >\r\n              {friends.length > 0\r\n              ? <div className=\"friend-group\">\r\n                <h6>Your Friends</h6>\r\n                <div className=\"horizontaliser\">\r\n                {friends.map((friend) => {\r\n                  return (\r\n                    <Col key={friend.user_id} style={{ maxWidth: \"20rem\" }}>\r\n                      <PersonCard\r\n                        pic={friend.profile_url}\r\n                        personKey={friend.user_id}\r\n                        name={friend.username}\r\n                        city={friend.city_name}\r\n                        friendStat={2}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n                </div>\r\n              </div>\r\n              : <div/>}\r\n              {outgoing.length>0\r\n              ?<div className=\"friend-group\">\r\n                <h6>Sent Requests</h6>\r\n                <div className=\"horizontaliser\">\r\n                {outgoing.map((outgoingreq) => {\r\n                  return (\r\n                    <Col\r\n                      xs={3}\r\n                      key={outgoingreq.user_id}\r\n                      /* style={{ maxWidth: \"20rem\" }} */\r\n                    >\r\n                      <PersonCard\r\n                        pic={outgoingreq.profile_url}\r\n                        personKey={outgoingreq.user_id}\r\n                        name={outgoingreq.username}\r\n                        city={outgoingreq.city_name}\r\n                        friendStat={1}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n                </div>\r\n              </div>\r\n              :<div/>}\r\n              { incoming.length > 0 \r\n              ?<div className=\"friend-group\">\r\n                <h6>Pending Requests</h6>\r\n                <div className=\"horizonatliser\">\r\n                {incoming.map((incomingreq) => {\r\n                  return (\r\n                    <Col\r\n                      key={incomingreq.user_id}\r\n                      style={{ maxWidth: \"20rem\" }}\r\n                    >\r\n                      <PersonCard\r\n                        pic={incomingreq.profile_url}\r\n                        personKey={incomingreq.user_id}\r\n                        name={incomingreq.username}\r\n                        city={incomingreq.city_name}\r\n                        friendStat={3}\r\n                      />\r\n                    </Col>\r\n                  );\r\n                })}\r\n                </div>\r\n              </div>\r\n              : <div/>} \r\n                  {/* <Col>\r\n            <PersonCard name=\"Kevon\" status=\"super rixch\" friendStat={0} style={{maxWidth:\"20rem\"}}/>\r\n            </Col>\r\n            <Col style={{maxWidth:\"20rem\"}}>\r\n            <PersonCard name=\"Kevon\" status=\"super rixch\" friendStat={1}/>\r\n            </Col>\r\n            <Col style={{maxWidth:\"20rem\"}}>\r\n            <PersonCard name=\"Kevon\" status=\"super rixch\" friendStat={2}/>\r\n            </Col>\r\n            <Col>\r\n            <PersonCard name=\"Kevon\" status=\"super rixch\" friendStat={3} style={{maxWidth:\"13rem\"}}/>\r\n            </Col>\r\n            <Col>\r\n            <PersonCard name=\"Kevon\" status=\"super rixch\" friendStat={3} style={{maxWidth:\"13rem\"}}/>\r\n            </Col>\r\n            <Col>\r\n            <PersonCard name=\"Kevon\" status=\"super rixch\" friendStat={3} style={{maxWidth:\"13rem\"}}/>\r\n            </Col>\r\n            <Col>\r\n            <PersonCard name=\"Kevon\" status=\"super rixch\" friendStat={3} style={{maxWidth:\"13rem\"}}/>\r\n            </Col> */} \r\n            </Row>\r\n          </Row>\r\n          {/* <Button variant=\"contained\" color=\"primary\">Material UI button?</Button> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default FriendsPage;\r\n","// import React, { Component } from \"react\";\r\n// import { withRouter } from \"react-router\";\r\n// import {Button} from \"react-bootstrap\";\r\n// import {\r\n//     FormControl,\r\n//     FormHelperText,\r\n//     Input,\r\n//     InputLabel,\r\n//     FormGroup,\r\n//     Grid,\r\n//     Snackbar,\r\n//     TextField,\r\n//     Container,\r\n//     Typography,\r\n//     Button,\r\n//     Box,\r\n//   } from \"@material-ui/core\";\r\n// import \"../styles/AdminConsole.css\";\r\n// class AdminConsole extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//             MID:\"\",\r\n//             TID:\"\",\r\n//             DT:\"\",\r\n//             TP:\"\"\r\n//         }\r\n\r\n//     }\r\n\r\n//     SetValue=(event)=>{\r\n//         this.setState({[event.target.name]: event.target.value})\r\n//         console.log(this.state);\r\n//     }\r\n//     AddShow=()=>{\r\n//         console.log(\"Entered\");\r\n//         fetch(`/api/shows/`, {\r\n//             method: \"POST\",\r\n//             body: JSON.stringify({\r\n//                 movie_id: parseInt(this.state.MID),\r\n//                   theatre_id: parseInt(this.state.TID),\r\n//                   date_time:this.state.DT,\r\n//                   ticket_price: parseInt(this.state.TP)\r\n//             }),\r\n//             headers: {\r\n//               \"Content-type\": \"application/json; charset=UTF-8\",\r\n//               Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n//             },\r\n//           })\r\n//             .then((response) => response.json())\r\n//             .then((json) => {\r\n//              console.log(\"From addshows: \",json);\r\n//             });\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             <>\r\n//             <div className=\"ConsoleHeader\"> <Button variant = \"success\" size=\"lg\" style={{position:\"absolute\",marginLeft:\"30px\",top:\"30%\"}} onClick={() => {\r\n//                 this.props.history.push(\"/\");\r\n//               }}>Back to Home</Button> <p className = \"Header\">ADMIN CONSOLE</p> </div>\r\n\r\n//             <div className =\"AddZone\">\r\n//             <p className = \"ConsoleTitle\" ><u><b>SET SHOW DETAILS</b></u>  </p>\r\n\r\n//             <form style={{marginLeft:\"30px\", marginTop:\"80px\"}} onSubmit = {this.AddShow}>\r\n\r\n//             <label htmlFor=\"MID\" style={{color:\"green\"}}>Movie ID:</label><br/>\r\n//             <input type=\"text\" id=\"MID\" name=\"MID\" value = {this.state.MID} onChange={this.SetValue}/><br/><br/>\r\n\r\n//             <label htmlFor=\"TID\" style={{color:\"green\"}}>Theatre ID:</label><br/>\r\n//             <input type=\"text\" id=\"TID\" name=\"TID\" value = {this.state.TID} onChange={this.SetValue}/><br/><br/>\r\n\r\n//             <label htmlFor=\"TP\" style={{color:\"green\"}}>Ticket Price:</label><br/>\r\n//             <input type=\"text\" id=\"TP\" name=\"TP\" value = {this.state.TP} onChange={this.SetValue}/><br/><br/>\r\n\r\n//             <label htmlFor=\"DT\" style={{color:\"green\"}}>Date-Time(Please enter in YYYY-MM-DD HH:MM:SS format):</label><br/>\r\n//             <input type=\"text\" id=\"DT\" name=\"DT\" value = {this.state.DT} onChange={this.SetValue}/><br/><br/>\r\n\r\n//             <input type=\"submit\" value=\"Add Show\" style={{backgroundColor: \"Yellow\",position: \"relative\",marginLeft:\"30%\",marginRight:\"30%\", width:\"40%\"}}/>\r\n//             </form>\r\n\r\n//             </div>\r\n\r\n//             </>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default withRouter(AdminConsole);\r\nimport React, { Component, useContext, useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  FormGroup,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useLocation, withRouter } from \"react-router\";\r\nimport { Link, NavLink, useHistory} from \"react-router-dom\";\r\nimport UserContext from \"../contexts/userContext\";\r\nimport SearchBar from \"../components/searchBar\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: {\r\n    minHeight: 65,\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst AdminConsole = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [errorAlert, setErrorAlert] = useState(\"\");\r\n  let user = useContext(UserContext);\r\n\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  const [movie, setMovie] = useState({});\r\n  const [theatre, setTheatre] = useState({});\r\n  const [ticketPrice, setTicketPrice] = useState(0);\r\n  const [dateTime, setDateTime] = useState(\"\");\r\n  const [hasSelectedMovie, setHasSelectedMovie] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(user.user);\r\n    console.log(location);\r\n    if(location.state.movie_id)\r\n    {\r\n        setMovie({movie_id: location.state.movie_id, movie_name: location.state.movie_name});\r\n        setHasSelectedMovie(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const getMovie = (movie_id, movie_name) => {\r\n    console.log(movie_id, movie_name);\r\n    setMovie({ movie_id: movie_id, movie_name: movie_name });\r\n    setHasSelectedMovie(true);\r\n  };\r\n\r\n  const MovieDisplay = () => {\r\n    if (hasSelectedMovie) {\r\n      return (\r\n        <div>\r\n          {movie.movie_id}\r\n          {\":\"}\r\n          <Button variant=\"contained\" style={{ marginLeft: \"10px\" }}>\r\n            {movie.movie_name}\r\n          </Button>\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            onClick={() => setHasSelectedMovie(false)}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <SearchBar entryDialogue={true} sendResult={getMovie} type=\"movie\" />\r\n      );\r\n    }\r\n  };\r\n\r\n  const addShow = () => {\r\n    console.log(movie, theatre, ticketPrice, dateTime);\r\n\r\n    if (!hasSelectedMovie) {\r\n      setErrorAlert(\"Please select a movie from the given dropdown\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (dateTime == \"\") {\r\n      setErrorAlert(\"Please pick a date and time\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (theatre == \"\") {\r\n      setErrorAlert(\"Please pick a theatre\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    if (ticketPrice == \"\") {\r\n      setErrorAlert(\"Please set a ticket price\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n\r\n    let dateTimeParts = dateTime.split('T');\r\n    const newDateTime = dateTimeParts[0] + \" \" + dateTimeParts[1] + \":00\";\r\n    console.log(newDateTime);\r\n    fetch(`/api/shows/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        movie_id: movie.movie_id,\r\n        theatre_id: theatre,\r\n        date_time: newDateTime,\r\n        ticket_price: ticketPrice,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.error) alert(json.error);\r\n        else {\r\n          localStorage.setItem(\"jwt\", json.jwt);\r\n          user.loginUser();\r\n          console.log(localStorage.getItem(\"lastLoc\"));\r\n          history.push(\r\n            localStorage.getItem(\"lastLoc\")\r\n              ? localStorage.getItem(\"lastLoc\")\r\n              : \"/\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Container\r\n      className={classes.container}\r\n      maxWidth=\"xs\"\r\n      container\r\n      align=\"center\"\r\n    >\r\n      <Typography>\r\n        <Box fontWeight=\"fontWeightBold\">Admin Console</Box>\r\n      </Typography>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <Grid container spacing={3} style={{ paddingTop: 40 }}>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <MovieDisplay />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Theatre ID\"\r\n                  name=\"theatre\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setTheatre(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Ticket Price\"\r\n                  name=\"theatre\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setTicketPrice(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"datetime-local\"\r\n                  label=\"Scheduled date and time\"\r\n                  type=\"datetime-local\"\r\n                  className={classes.textField}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => setDateTime(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={addShow}\r\n            >\r\n              Add Show\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} align=\"center\">\r\n            <Typography>\r\n              Not here to add a show?{\" \"}\r\n              <Link\r\n                to=\"/\"\r\n                style={{ textDecoration: \"none\", color: \"#3f50b5\" }}\r\n              >\r\n                <Box fontWeight=\"fontWeightBold\">Take me home</Box>\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert severity=\"error\">{errorAlert}</Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(AdminConsole);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  Nav,\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport TitleSearchResults from \"./titleSearchResults\";\r\nimport movie from \"./movie\";\r\n\r\nclass SearchPeople extends Component {\r\n  state = {\r\n    person: \"\",\r\n    results: [],\r\n    typingTimout: 0,\r\n    dropdownClasses: \"dropdown-menu\",\r\n  };\r\n\r\n  clickedOutside = (bool) => {\r\n    if (bool) this.setState({ dropdownClasses: \"dropdown-menu\" });\r\n  };\r\n\r\n  changeName = (event) => {\r\n    if (this.state.typingTimeout) {\r\n      clearTimeout(this.state.typingTimeout);\r\n    }\r\n\r\n    this.setState({ person: event.target.value });\r\n\r\n    if (event.target.value) {\r\n      this.state.typingTimeout = setTimeout(this.timedSearch, 700);\r\n    }\r\n  };\r\n\r\n  timedSearch = () => {\r\n    this.searchForPeople()\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        let results = [];\r\n        json.map(\r\n          (person, i) => (results[i] = { id: person.person_id, name: person.person_name })\r\n        );\r\n        console.log(results);\r\n        this.setState({ results: results });\r\n        return json;\r\n      })\r\n      .then((results) => {\r\n        if (results.length) {\r\n          this.setState({\r\n            dropdownClasses: \"show dropdown-menu\",\r\n          });\r\n        } else\r\n          this.setState({\r\n            dropdownClasses: \"dropdown-menu\",\r\n          });\r\n      });\r\n  };\r\n\r\n\r\n  searchForPeople = () => {\r\n    return fetch(\"/api/search/people\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        person: this.state.person,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    });\r\n  };\r\n\r\n//   submitHandler = (event) => {\r\n//     event.preventDefault();\r\n//     if (!this.props.entryDialogue) {\r\n//       this.searchMovie(this.state.movie)\r\n//         .then((response) => response.json())\r\n//         .then((json) => {\r\n//           this.props.history.push({\r\n//             pathname: \"/\",\r\n//             state: { movies: json },\r\n//           });\r\n//         })\r\n//         .then(() => {\r\n//           window.location.reload(false);\r\n//         });\r\n//     }\r\n//   };\r\n\r\n  clickHandler = (person_id, person_title) => {\r\n    this.clickedOutside(true);\r\n    this.props.sendResult(person_id, person_title);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.entryDialogue ? (\r\n          <Form\r\n            inline\r\n            onSubmit={this.submitHandler}\r\n            className=\"nav-item dropdown\"\r\n          >\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder={\r\n                this.props.type ? this.props.type : \"People\"\r\n              }\r\n              className=\"mr-sm-3\"\r\n              onChange={this.changeName}\r\n            />\r\n            <TitleSearchResults\r\n              type={this.props.type}\r\n              onClick={this.clickHandler}\r\n              entryDialogue={true}\r\n              dropdownClasses={this.state.dropdownClasses}\r\n              results={this.state.results}\r\n              clickedOutside={this.clickedOutside}\r\n            />\r\n          </Form>\r\n        ) : (\r\n          <Form\r\n            inline\r\n            onSubmit={this.submitHandler}\r\n            className=\"nav-item dropdown\"\r\n          >\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              onChange={this.changeName}\r\n            />\r\n            <TitleSearchResults\r\n              onClick={this.clickHandler}\r\n              entryDialogue={true}\r\n              dropdownClasses={this.state.dropdownClasses}\r\n              results={this.state.results}\r\n              clickedOutside={this.clickedOutside}\r\n            />\r\n          </Form>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchPeople);\r\n","import search from \"../images/search.svg\";\r\nimport \"../styles/HomePage.css\";\r\nimport React, { Component } from \"react\";\r\nimport UserContext from \"../contexts/userContext\";\r\n\r\nimport Movies from \"../components/movies\";\r\nimport SideBar from \"../components/sideBar\";\r\nimport SearchPeople from \"../components/searchPeople\";\r\nimport TopBar from \"../components/topBar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { Typography, TextField } from \"@material-ui/core\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nclass AdvancedSearch extends Component {\r\n  static contextType = UserContext;\r\n\r\n  state = {\r\n    chipData: [],\r\n    movies: [],\r\n    searchTerm: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this);\r\n  }\r\n\r\n  handleDelete = (chipToDelete) => () => {\r\n    this.setState({\r\n      chipData: this.state.chipData.filter(\r\n        (chip) => chip.key !== chipToDelete.key\r\n      ),\r\n    });\r\n  };\r\n\r\n  addChip = (id, title) => {\r\n    let newChipData = this.state.chipData;\r\n    newChipData.push({\r\n      key: id,\r\n      label: title,\r\n      person_id: id,\r\n      person_title: title,\r\n    });\r\n    this.setState({ chipData: newChipData });\r\n    console.log(this.state.chipData);\r\n  };\r\n\r\n  setSearchTerm = (event) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n    console.log(this.state);\r\n  };\r\n\r\n  findMovies = () => {\r\n\r\n    let listPeopleID=[];\r\n    this.state.chipData.map(el => (\r\n      listPeopleID.push(el.person_id)\r\n    ));\r\n    fetch(\"/api/search/movies\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(\r\n        {\r\n          title: this.state.searchTerm,\r\n          people: listPeopleID,\r\n          genres: []\r\n        }\r\n      ),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        this.setState({ movies: json });\r\n        console.log(this.state.movies);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <TopBar />\r\n          <br></br>\r\n          <Row>\r\n            <Col xs={2} id=\"sidebar-wrapper\">\r\n              <SideBar />\r\n            </Col>\r\n            <Col xs={10} id=\"page-content-wrapper\">\r\n              <Container>\r\n                <Typography variant=\"h5\" style={{marginBottom: \"30px\"}}>Advanced Search</Typography>\r\n                <TextField\r\n                style={{display: \"block\", marginBottom: \"30px\"}}\r\n                  id=\"standard-basic\"\r\n                  label=\"Title\"\r\n                  onInput={this.setSearchTerm}\r\n                />\r\n                <SearchPeople\r\n                  entryDialogue={true}\r\n                  sendResult={this.addChip}\r\n                ></SearchPeople>\r\n                <Paper\r\n                  component=\"ul\"\r\n                  key={\r\n                    this.state.chipData ? this.state.chipData.length : \"empty69\"\r\n                  }\r\n                >\r\n                  {this.state.chipData.map((data) => {\r\n                    return (\r\n                      <li key={data.key}>\r\n                        <Chip\r\n                          label={data.label}\r\n                          onDelete={this.handleDelete(data)}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </Paper>\r\n                \r\n                <Button onClick={this.findMovies} style={{marginTop: \"20px\"}}>Search with filters</Button>\r\n                <Movies movies={this.state.movies} />\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AdvancedSearch);\r\n","import React, { useState, useContext, Component } from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport MoviePage from \"./pages/MoviePage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport ShowsPage from \"./pages/ShowsPage\";\r\nimport SeatsPage from \"./pages/SeatsPage\";\r\nimport BookingPage from \"./pages/BookingPage\";\r\nimport ListsPage from \"./pages/ListsPage\";\r\nimport SignupPage from \"./pages/SignupPage\";\r\nimport FriendsPage from \"./pages/FriendsPage\";\r\nimport AdminConsole from \"./pages/AdminConsole\";\r\nimport AdvancedSearch from \"./pages/AdvancedSearch\";\r\n\r\nimport UserContext, { UserProvider } from \"./contexts/userContext\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\n\r\nconst Routing = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <HomePage />} />\r\n          <Route\r\n            exact\r\n            path=\"/movies/:id\"\r\n            render={(props) => (\r\n              <MoviePage key={props.match.params.id} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/users/:id/lists\"\r\n            render={(props) => (\r\n              <ListsPage key={props.match.params.id} {...props} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/shows/:id/seats\"\r\n            render={() => (\r\n              <SeatsPage />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/shows/:id/book\"\r\n            render={() => (\r\n              <BookingPage />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/advancedSearch\"\r\n            render={() => (\r\n              <AdvancedSearch />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/movies/:id/shows\"\r\n            render={() => (\r\n              <ShowsPage/>\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/shows\"\r\n            render={() => (\r\n              <AdminConsole/>\r\n            )}\r\n          />\r\n          <Route exact path=\"/login\" render={() => <LoginPage />} />\r\n          <Route exact path=\"/signup\" render={() => <SignupPage />} />\r\n          <Route exact path=\"/friends\" render={()=> <FriendsPage/>} />\r\n          <Route exact path=\"/profile\" render={()=> <ProfilePage/>} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nfunction getDetails() {\r\n  return fetch(\"/api/is-logged-in\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n    },\r\n  });\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n    };\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.clear();\r\n    this.setState({ user: {} });\r\n  };\r\n\r\n  login = () => {\r\n    getDetails()\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.logged_in) {\r\n          this.setState({\r\n            user: {\r\n              profile_url: json.details.profile_url,\r\n              user_role: json.details.user_role,\r\n              user_id: json.details.user_id,\r\n              username: json.details.username,\r\n              city_id: json.details.city_id,\r\n              city: json.details.city_name,\r\n              profile_url: json.details.profile_url,\r\n              email: json.details.email,\r\n            },\r\n          });\r\n          console.log(this.state.user);\r\n        } else\r\n          this.setState({\r\n            user: {},\r\n          });\r\n        console.log(json);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.login();\r\n  }\r\n  render() {\r\n    const value = {\r\n      user: this.state.user,\r\n      logoutUser: this.logout,\r\n      loginUser: this.login,\r\n    };\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        <Routing />\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ReportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nReportWebVitals();\r\n"],"sourceRoot":""}